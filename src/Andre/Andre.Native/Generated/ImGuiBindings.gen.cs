
// <auto-generated>
//  This code was generated by the following tool on 2024-01-29 23:09:02 GMT-08:00:
//      https://github.com/bottlenoselabs/c2cs (v0.0.0.0)
//
//  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ReSharper disable All

#region Template
#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS8981
using bottlenoselabs.C2CS.Runtime;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
#endregion

using System.Numerics;

namespace Andre.Native;

public static unsafe partial class ImGuiBindings
{
    private const string LibraryName = "AndreNative.dll";

    #region API

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImBitVector_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImBitVectorClear(ImBitVector* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImBitVector_ClearBit")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImBitVectorClearBit(ImBitVector* self, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImBitVector_Create")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImBitVectorCreate(ImBitVector* self, int sz);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImBitVector_SetBit")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImBitVectorSetBit(ImBitVector* self, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImBitVector_TestBit")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImBitVectorTestBit(ImBitVector* self, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImColorDestroy(ImColor* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_HSV")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImColorHSV(ImColor* pOut, float h, float s, float v, float a);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_ImColor_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImColor* ImColorImColorFloat(float r, float g, float b, float a);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_ImColor_Int")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImColor* ImColorImColorInt(int r, int g, int b, int a);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_ImColor_Nil")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImColor* ImColorImColorNil();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_ImColor_U32")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImColor* ImColorImColorU32(uint rgba);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_ImColor_Vec4")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImColor* ImColorImColorVec4(Vector4 col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImColor_SetHSV")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImColorSetHSV(ImColor* self, float h, float s, float v, float a);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawCmd_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawCmdDestroy(ImDrawCmd* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawCmd_GetTexID")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImTextureID ImDrawCmdGetTexID(ImDrawCmd* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawCmd_ImDrawCmd")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImDrawCmd* ImDrawCmdImDrawCmd();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawData_AddDrawList")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawDataAddDrawList(ImDrawData* self, ImDrawList* drawList);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawDataBuilder_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawDataBuilderDestroy(ImDrawDataBuilder* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawDataBuilder_ImDrawDataBuilder")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImDrawDataBuilder* ImDrawDataBuilderImDrawDataBuilder();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawData_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawDataClear(ImDrawData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawData_DeIndexAllBuffers")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawDataDeIndexAllBuffers(ImDrawData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawDataDestroy(ImDrawData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawData_ImDrawData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImDrawData* ImDrawDataImDrawData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawData_ScaleClipRects")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawDataScaleClipRects(ImDrawData* self, Vector2 fbScale);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddBezierCubic")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddBezierCubic(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, uint col, float thickness, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddBezierQuadratic")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddBezierQuadratic(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, uint col, float thickness, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddCallback")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddCallback(ImDrawList* self, ImDrawCallback callback, void* callbackData);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddCircle")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddCircle(ImDrawList* self, Vector2 center, float radius, uint col, int numSegments, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddCircleFilled")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddCircleFilled(ImDrawList* self, Vector2 center, float radius, uint col, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddConvexPolyFilled")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddConvexPolyFilled(ImDrawList* self, Vector2* points, int numPoints, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddDrawCmd")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddDrawCmd(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddEllipse")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddEllipse(ImDrawList* self, Vector2 center, float radiusX, float radiusY, uint col, float rot, int numSegments, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddEllipseFilled")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddEllipseFilled(ImDrawList* self, Vector2 center, float radiusX, float radiusY, uint col, float rot, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddImage")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddImage(ImDrawList* self, ImTextureID userTextureId, Vector2 pMin, Vector2 pMax, Vector2 uvMin, Vector2 uvMax, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddImageQuad")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddImageQuad(ImDrawList* self, ImTextureID userTextureId, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 uv1, Vector2 uv2, Vector2 uv3, Vector2 uv4, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddImageRounded")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddImageRounded(ImDrawList* self, ImTextureID userTextureId, Vector2 pMin, Vector2 pMax, Vector2 uvMin, Vector2 uvMax, uint col, float rounding, ImDrawFlags flags);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddLine")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddLine(ImDrawList* self, Vector2 p1, Vector2 p2, uint col, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddNgon")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddNgon(ImDrawList* self, Vector2 center, float radius, uint col, int numSegments, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddNgonFilled")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddNgonFilled(ImDrawList* self, Vector2 center, float radius, uint col, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddPolyline")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddPolyline(ImDrawList* self, Vector2* points, int numPoints, uint col, ImDrawFlags flags, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddQuad")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddQuad(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, uint col, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddQuadFilled")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddQuadFilled(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddRect(ImDrawList* self, Vector2 pMin, Vector2 pMax, uint col, float rounding, ImDrawFlags flags, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddRectFilled")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddRectFilled(ImDrawList* self, Vector2 pMin, Vector2 pMax, uint col, float rounding, ImDrawFlags flags);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddRectFilledMultiColor")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddRectFilledMultiColor(ImDrawList* self, Vector2 pMin, Vector2 pMax, uint colUprLeft, uint colUprRight, uint colBotRight, uint colBotLeft);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddText_FontPtr")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddTextFontPtr(ImDrawList* self, ImFont* font, float fontSize, Vector2 pos, uint col, CString textBegin, CString textEnd, float wrapWidth, Vector4* cpuFineClipRect);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddText_Vec2")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddTextVec2(ImDrawList* self, Vector2 pos, uint col, CString textBegin, CString textEnd);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddTriangle")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddTriangle(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, uint col, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_AddTriangleFilled")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListAddTriangleFilled(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__CalcCircleAutoSegmentCount")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImDrawListCalcCircleAutoSegmentCount(ImDrawList* self, float radius);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_ChannelsMerge")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListChannelsMerge(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_ChannelsSetCurrent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListChannelsSetCurrent(ImDrawList* self, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_ChannelsSplit")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListChannelsSplit(ImDrawList* self, int count);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__ClearFreeMemory")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListClearFreeMemory(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_CloneOutput")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImDrawList* ImDrawListCloneOutput(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListDestroy(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_GetClipRectMax")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListGetClipRectMax(Vector2* pOut, ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_GetClipRectMin")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListGetClipRectMin(Vector2* pOut, ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_ImDrawList")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImDrawList* ImDrawListImDrawList(ImDrawListSharedData* sharedData);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__OnChangedClipRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListOnChangedClipRect(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__OnChangedTextureID")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListOnChangedTextureID(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__OnChangedVtxOffset")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListOnChangedVtxOffset(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathArcTo")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathArcTo(ImDrawList* self, Vector2 center, float radius, float aMin, float aMax, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathArcToFast")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathArcToFast(ImDrawList* self, Vector2 center, float radius, int aMinOf12, int aMaxOf12);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__PathArcToFastEx")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathArcToFastEx(ImDrawList* self, Vector2 center, float radius, int aMinSample, int aMaxSample, int aStep);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__PathArcToN")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathArcToN(ImDrawList* self, Vector2 center, float radius, float aMin, float aMax, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathBezierCubicCurveTo")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathBezierCubicCurveTo(ImDrawList* self, Vector2 p2, Vector2 p3, Vector2 p4, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathBezierQuadraticCurveTo")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathBezierQuadraticCurveTo(ImDrawList* self, Vector2 p2, Vector2 p3, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathClear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathClear(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathEllipticalArcTo")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathEllipticalArcTo(ImDrawList* self, Vector2 center, float radiusX, float radiusY, float rot, float aMin, float aMax, int numSegments);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathFillConvex")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathFillConvex(ImDrawList* self, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathLineTo")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathLineTo(ImDrawList* self, Vector2 pos);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathLineToMergeDuplicate")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathLineToMergeDuplicate(ImDrawList* self, Vector2 pos);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathRect(ImDrawList* self, Vector2 rectMin, Vector2 rectMax, float rounding, ImDrawFlags flags);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PathStroke")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPathStroke(ImDrawList* self, uint col, ImDrawFlags flags, float thickness);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PopClipRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPopClipRect(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PopTextureID")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPopTextureID(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__PopUnusedDrawCmd")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPopUnusedDrawCmd(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimQuadUV")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimQuadUV(ImDrawList* self, Vector2 a, Vector2 b, Vector2 c, Vector2 d, Vector2 uvA, Vector2 uvB, Vector2 uvC, Vector2 uvD, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimRect(ImDrawList* self, Vector2 a, Vector2 b, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimRectUV")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimRectUV(ImDrawList* self, Vector2 a, Vector2 b, Vector2 uvA, Vector2 uvB, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimReserve")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimReserve(ImDrawList* self, int idxCount, int vtxCount);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimUnreserve")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimUnreserve(ImDrawList* self, int idxCount, int vtxCount);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimVtx")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimVtx(ImDrawList* self, Vector2 pos, Vector2 uv, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimWriteIdx")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimWriteIdx(ImDrawList* self, ImDrawIdx idx);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PrimWriteVtx")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPrimWriteVtx(ImDrawList* self, Vector2 pos, Vector2 uv, uint col);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PushClipRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPushClipRect(ImDrawList* self, Vector2 clipRectMin, Vector2 clipRectMax, CBool intersectWithCurrentClipRect);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PushClipRectFullScreen")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPushClipRectFullScreen(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList_PushTextureID")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListPushTextureID(ImDrawList* self, ImTextureID textureId);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__ResetForNewFrame")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListResetForNewFrame(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSharedData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSharedDataDestroy(ImDrawListSharedData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSharedData_ImDrawListSharedData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImDrawListSharedData* ImDrawListSharedDataImDrawListSharedData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSharedData_SetCircleTessellationMaxError")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSharedDataSetCircleTessellationMaxError(ImDrawListSharedData* self, float maxError);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSplitter_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSplitterClear(ImDrawListSplitter* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSplitter_ClearFreeMemory")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSplitterClearFreeMemory(ImDrawListSplitter* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSplitter_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSplitterDestroy(ImDrawListSplitter* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSplitter_ImDrawListSplitter")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImDrawListSplitter* ImDrawListSplitterImDrawListSplitter();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSplitter_Merge")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSplitterMerge(ImDrawListSplitter* self, ImDrawList* drawList);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSplitter_SetCurrentChannel")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSplitterSetCurrentChannel(ImDrawListSplitter* self, ImDrawList* drawList, int channelIdx);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawListSplitter_Split")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListSplitterSplit(ImDrawListSplitter* self, ImDrawList* drawList, int count);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImDrawList__TryMergeDrawCmds")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImDrawListTryMergeDrawCmds(ImDrawList* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_AddGlyph")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAddGlyph(ImFont* self, ImFontConfig* srcCfg, ushort c, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advanceX);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_AddRemapChar")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAddRemapChar(ImFont* self, ushort dst, ushort src, CBool overwriteDst);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddCustomRectFontGlyph")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImFontAtlasAddCustomRectFontGlyph(ImFontAtlas* self, ImFont* font, ushort id, int width, int height, float advanceX, Vector2 offset);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddCustomRectRegular")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImFontAtlasAddCustomRectRegular(ImFontAtlas* self, int width, int height);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddFont")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFont* ImFontAtlasAddFont(ImFontAtlas* self, ImFontConfig* fontCfg);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddFontDefault")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFont* ImFontAtlasAddFontDefault(ImFontAtlas* self, ImFontConfig* fontCfg);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddFontFromFileTTF")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFont* ImFontAtlasAddFontFromFileTTF(ImFontAtlas* self, CString filename, float sizePixels, ImFontConfig* fontCfg, ushort* glyphRanges);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddFontFromMemoryCompressedBase85TTF")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFont* ImFontAtlasAddFontFromMemoryCompressedBase85TTF(ImFontAtlas* self, CString compressedFontDataBase85, float sizePixels, ImFontConfig* fontCfg, ushort* glyphRanges);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddFontFromMemoryCompressedTTF")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFont* ImFontAtlasAddFontFromMemoryCompressedTTF(ImFontAtlas* self, void* compressedFontData, int compressedFontDataSize, float sizePixels, ImFontConfig* fontCfg, ushort* glyphRanges);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_AddFontFromMemoryTTF")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFont* ImFontAtlasAddFontFromMemoryTTF(ImFontAtlas* self, void* fontData, int fontDataSize, float sizePixels, ImFontConfig* fontCfg, ushort* glyphRanges);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_Build")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImFontAtlasBuild(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_CalcCustomRectUV")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasCalcCustomRectUV(ImFontAtlas* self, ImFontAtlasCustomRect* rect, Vector2* outUvMin, Vector2* outUvMax);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasClear(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_ClearFonts")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasClearFonts(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_ClearInputData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasClearInputData(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_ClearTexData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasClearTexData(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlasCustomRect_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasCustomRectDestroy(ImFontAtlasCustomRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlasCustomRect_ImFontAtlasCustomRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFontAtlasCustomRect* ImFontAtlasCustomRectImFontAtlasCustomRect();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlasCustomRect_IsPacked")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImFontAtlasCustomRectIsPacked(ImFontAtlasCustomRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasDestroy(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetCustomRectByIndex")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFontAtlasCustomRect* ImFontAtlasGetCustomRectByIndex(ImFontAtlas* self, int index);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesChineseFull")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesChineseFull(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesChineseSimplifiedCommon(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesCyrillic")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesCyrillic(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesDefault")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesDefault(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesGreek")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesGreek(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesJapanese")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesJapanese(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesKorean")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesKorean(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesThai")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesThai(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetGlyphRangesVietnamese")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ushort* ImFontAtlasGetGlyphRangesVietnamese(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetMouseCursorTexData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImFontAtlasGetMouseCursorTexData(ImFontAtlas* self, ImGuiMouseCursor cursor, Vector2* outOffset, Vector2* outSize, Vector2* outUvBorder, Vector2* outUvFill);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetTexDataAsAlpha8")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasGetTexDataAsAlpha8(ImFontAtlas* self, ulong** outPixels, int* outWidth, int* outHeight, int* outBytesPerPixel);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_GetTexDataAsRGBA32")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasGetTexDataAsRGBA32(ImFontAtlas* self, ulong** outPixels, int* outWidth, int* outHeight, int* outBytesPerPixel);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_ImFontAtlas")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFontAtlas* ImFontAtlasImFontAtlas();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_IsBuilt")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImFontAtlasIsBuilt(ImFontAtlas* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontAtlas_SetTexID")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontAtlasSetTexID(ImFontAtlas* self, ImTextureID id);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_BuildLookupTable")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontBuildLookupTable(ImFont* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_CalcTextSizeA")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontCalcTextSizeA(Vector2* pOut, ImFont* self, float size, float maxWidth, float wrapWidth, CString textBegin, CString textEnd, CString* remaining);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_CalcWordWrapPositionA")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImFontCalcWordWrapPositionA(ImFont* self, float scale, CString text, CString textEnd, float wrapWidth);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_ClearOutputData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontClearOutputData(ImFont* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontConfig_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontConfigDestroy(ImFontConfig* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontConfig_ImFontConfig")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFontConfig* ImFontConfigImFontConfig();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontDestroy(ImFont* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_FindGlyph")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFontGlyph* ImFontFindGlyph(ImFont* self, ushort c);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_FindGlyphNoFallback")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFontGlyph* ImFontFindGlyphNoFallback(ImFont* self, ushort c);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_GetCharAdvance")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImFontGetCharAdvance(ImFont* self, ushort c);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_GetDebugName")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImFontGetDebugName(ImFont* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_AddChar")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGlyphRangesBuilderAddChar(ImFontGlyphRangesBuilder* self, ushort c);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_AddRanges")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGlyphRangesBuilderAddRanges(ImFontGlyphRangesBuilder* self, ushort* ranges);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_AddText")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGlyphRangesBuilderAddText(ImFontGlyphRangesBuilder* self, CString text, CString textEnd);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_BuildRanges")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGlyphRangesBuilderBuildRanges(ImFontGlyphRangesBuilder* self, ImVectorImWchar* outRanges);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGlyphRangesBuilderClear(ImFontGlyphRangesBuilder* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGlyphRangesBuilderDestroy(ImFontGlyphRangesBuilder* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_GetBit")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImFontGlyphRangesBuilderGetBit(ImFontGlyphRangesBuilder* self, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFontGlyphRangesBuilder* ImFontGlyphRangesBuilderImFontGlyphRangesBuilder();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFontGlyphRangesBuilder_SetBit")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGlyphRangesBuilderSetBit(ImFontGlyphRangesBuilder* self, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_GrowIndex")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontGrowIndex(ImFont* self, int newSize);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_ImFont")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImFont* ImFontImFont();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_IsGlyphRangeUnused")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImFontIsGlyphRangeUnused(ImFont* self, uint cBegin, uint cLast);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_IsLoaded")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImFontIsLoaded(ImFont* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_RenderChar")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontRenderChar(ImFont* self, ImDrawList* drawList, float size, Vector2 pos, uint col, ushort c);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_RenderText")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontRenderText(ImFont* self, ImDrawList* drawList, float size, Vector2 pos, uint col, Vector4 clipRect, CString textBegin, CString textEnd, float wrapWidth, CBool cpuFineClip);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImFont_SetGlyphVisible")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImFontSetGlyphVisible(ImFont* self, ushort c, CBool visible);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiComboPreviewData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiComboPreviewDataDestroy(ImGuiComboPreviewData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiComboPreviewData_ImGuiComboPreviewData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiComboPreviewData* ImGuiComboPreviewDataImGuiComboPreviewData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiContext_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiContextDestroy(ImGuiContext* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiContextHook_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiContextHookDestroy(ImGuiContextHook* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiContextHook_ImGuiContextHook")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiContextHook* ImGuiContextHookImGuiContextHook();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiContext_ImGuiContext")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiContext* ImGuiContextImGuiContext(ImFontAtlas* sharedFontAtlas);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDataVarInfo_GetVarPtr")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void* ImGuiDataVarInfoGetVarPtr(ImGuiDataVarInfo* self, void* parent);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDebugAllocInfo_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiDebugAllocInfoDestroy(ImGuiDebugAllocInfo* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDebugAllocInfo_ImGuiDebugAllocInfo")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiDebugAllocInfo* ImGuiDebugAllocInfoImGuiDebugAllocInfo();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockContext_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiDockContextDestroy(ImGuiDockContext* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockContext_ImGuiDockContext")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiDockContext* ImGuiDockContextImGuiDockContext();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiDockNodeDestroy(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_ImGuiDockNode")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiDockNode* ImGuiDockNodeImGuiDockNode(ImGuiID id);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsCentralNode")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsCentralNode(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsDockSpace")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsDockSpace(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsEmpty")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsEmpty(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsFloatingNode")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsFloatingNode(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsHiddenTabBar")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsHiddenTabBar(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsLeafNode")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsLeafNode(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsNoTabBar")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsNoTabBar(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsRootNode")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsRootNode(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_IsSplitNode")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiDockNodeIsSplitNode(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_Rect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiDockNodeRect(ImRect* pOut, ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_SetLocalFlags")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiDockNodeSetLocalFlags(ImGuiDockNode* self, ImGuiDockNodeFlags flags);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiDockNode_UpdateMergedFlags")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiDockNodeUpdateMergedFlags(ImGuiDockNode* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIDStackTool_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIDStackToolDestroy(ImGuiIDStackTool* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIDStackTool_ImGuiIDStackTool")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiIDStackTool* ImGuiIDStackToolImGuiIDStackTool();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddFocusEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddFocusEvent(ImGuiIO* self, CBool focused);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddInputCharacter")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddInputCharacter(ImGuiIO* self, uint c);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddInputCharacterUTF16")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddInputCharacterUTF16(ImGuiIO* self, ushort c);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddInputCharactersUTF8")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddInputCharactersUTF8(ImGuiIO* self, CString str);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddKeyAnalogEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddKeyAnalogEvent(ImGuiIO* self, ImGuiKey key, CBool down, float v);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddKeyEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddKeyEvent(ImGuiIO* self, ImGuiKey key, CBool down);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddMouseButtonEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddMouseButtonEvent(ImGuiIO* self, int button, CBool down);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddMousePosEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddMousePosEvent(ImGuiIO* self, float x, float y);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddMouseSourceEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddMouseSourceEvent(ImGuiIO* self, ImGuiMouseSource source);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddMouseViewportEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddMouseViewportEvent(ImGuiIO* self, ImGuiID id);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_AddMouseWheelEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOAddMouseWheelEvent(ImGuiIO* self, float wheelX, float wheelY);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_ClearEventsQueue")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOClearEventsQueue(ImGuiIO* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_ClearInputKeys")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOClearInputKeys(ImGuiIO* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIODestroy(ImGuiIO* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_ImGuiIO")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiIO* ImGuiIOImGuiIO();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_SetAppAcceptingEvents")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOSetAppAcceptingEvents(ImGuiIO* self, CBool acceptingEvents);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiIO_SetKeyEventNativeData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiIOSetKeyEventNativeData(ImGuiIO* self, ImGuiKey key, int nativeKeycode, int nativeScancode, int nativeLegacyIndex);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputEvent_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputEventDestroy(ImGuiInputEvent* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputEvent_ImGuiInputEvent")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiInputEvent* ImGuiInputEventImGuiInputEvent();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextCallbackData_ClearSelection")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextCallbackDataClearSelection(ImGuiInputTextCallbackData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextCallbackData_DeleteChars")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextCallbackDataDeleteChars(ImGuiInputTextCallbackData* self, int pos, int bytesCount);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextCallbackData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextCallbackDataDestroy(ImGuiInputTextCallbackData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextCallbackData_HasSelection")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiInputTextCallbackDataHasSelection(ImGuiInputTextCallbackData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextCallbackData_ImGuiInputTextCallbackData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiInputTextCallbackData* ImGuiInputTextCallbackDataImGuiInputTextCallbackData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextCallbackData_InsertChars")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextCallbackDataInsertChars(ImGuiInputTextCallbackData* self, int pos, CString text, CString textEnd);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextCallbackData_SelectAll")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextCallbackDataSelectAll(ImGuiInputTextCallbackData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextDeactivatedState_ClearFreeMemory")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextDeactivatedStateClearFreeMemory(ImGuiInputTextDeactivatedState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextDeactivatedState_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextDeactivatedStateDestroy(ImGuiInputTextDeactivatedState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextDeactivatedState_ImGuiInputTextDeactivatedState")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiInputTextDeactivatedState* ImGuiInputTextDeactivatedStateImGuiInputTextDeactivatedState();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_ClearFreeMemory")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateClearFreeMemory(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_ClearSelection")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateClearSelection(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_ClearText")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateClearText(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_CursorAnimReset")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateCursorAnimReset(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_CursorClamp")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateCursorClamp(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateDestroy(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_GetCursorPos")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiInputTextStateGetCursorPos(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_GetRedoAvailCount")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiInputTextStateGetRedoAvailCount(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_GetSelectionEnd")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiInputTextStateGetSelectionEnd(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_GetSelectionStart")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiInputTextStateGetSelectionStart(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_GetUndoAvailCount")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiInputTextStateGetUndoAvailCount(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_HasSelection")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiInputTextStateHasSelection(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_ImGuiInputTextState")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiInputTextState* ImGuiInputTextStateImGuiInputTextState();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_OnKeyPressed")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateOnKeyPressed(ImGuiInputTextState* self, int key);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiInputTextState_SelectAll")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiInputTextStateSelectAll(ImGuiInputTextState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiKeyOwnerData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiKeyOwnerDataDestroy(ImGuiKeyOwnerData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiKeyOwnerData_ImGuiKeyOwnerData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiKeyOwnerData* ImGuiKeyOwnerDataImGuiKeyOwnerData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiKeyRoutingData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiKeyRoutingDataDestroy(ImGuiKeyRoutingData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiKeyRoutingData_ImGuiKeyRoutingData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiKeyRoutingData* ImGuiKeyRoutingDataImGuiKeyRoutingData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiKeyRoutingTable_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiKeyRoutingTableClear(ImGuiKeyRoutingTable* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiKeyRoutingTable_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiKeyRoutingTableDestroy(ImGuiKeyRoutingTable* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiKeyRoutingTable_ImGuiKeyRoutingTable")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiKeyRoutingTable* ImGuiKeyRoutingTableImGuiKeyRoutingTable();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiLastItemData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiLastItemDataDestroy(ImGuiLastItemData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiLastItemData_ImGuiLastItemData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiLastItemData* ImGuiLastItemDataImGuiLastItemData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipper_Begin")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiListClipperBegin(ImGuiListClipper* self, int itemsCount, float itemsHeight);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipperData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiListClipperDataDestroy(ImGuiListClipperData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipperData_ImGuiListClipperData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiListClipperData* ImGuiListClipperDataImGuiListClipperData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipperData_Reset")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiListClipperDataReset(ImGuiListClipperData* self, ImGuiListClipper* clipper);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipper_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiListClipperDestroy(ImGuiListClipper* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipper_End")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiListClipperEnd(ImGuiListClipper* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipper_ImGuiListClipper")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiListClipper* ImGuiListClipperImGuiListClipper();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipper_IncludeItemByIndex")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiListClipperIncludeItemByIndex(ImGuiListClipper* self, int itemIndex);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipper_IncludeItemsByIndex")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiListClipperIncludeItemsByIndex(ImGuiListClipper* self, int itemBegin, int itemEnd);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipperRange_FromIndices")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiListClipperRange ImGuiListClipperRangeFromIndices(int min, int max);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipperRange_FromPositions")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiListClipperRange ImGuiListClipperRangeFromPositions(float y1, float y2, int offMin, int offMax);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiListClipper_Step")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiListClipperStep(ImGuiListClipper* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiMenuColumns_CalcNextTotalWidth")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiMenuColumnsCalcNextTotalWidth(ImGuiMenuColumns* self, CBool updateOffsets);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiMenuColumns_DeclColumns")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImGuiMenuColumnsDeclColumns(ImGuiMenuColumns* self, float wIcon, float wLabel, float wShortcut, float wMark);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiMenuColumns_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiMenuColumnsDestroy(ImGuiMenuColumns* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiMenuColumns_ImGuiMenuColumns")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiMenuColumns* ImGuiMenuColumnsImGuiMenuColumns();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiMenuColumns_Update")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiMenuColumnsUpdate(ImGuiMenuColumns* self, float spacing, CBool windowReappearing);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNavItemData_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiNavItemDataClear(ImGuiNavItemData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNavItemData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiNavItemDataDestroy(ImGuiNavItemData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNavItemData_ImGuiNavItemData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiNavItemData* ImGuiNavItemDataImGuiNavItemData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNextItemData_ClearFlags")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiNextItemDataClearFlags(ImGuiNextItemData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNextItemData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiNextItemDataDestroy(ImGuiNextItemData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNextItemData_ImGuiNextItemData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiNextItemData* ImGuiNextItemDataImGuiNextItemData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNextWindowData_ClearFlags")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiNextWindowDataClearFlags(ImGuiNextWindowData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNextWindowData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiNextWindowDataDestroy(ImGuiNextWindowData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiNextWindowData_ImGuiNextWindowData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiNextWindowData* ImGuiNextWindowDataImGuiNextWindowData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiOldColumnData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiOldColumnDataDestroy(ImGuiOldColumnData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiOldColumnData_ImGuiOldColumnData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiOldColumnData* ImGuiOldColumnDataImGuiOldColumnData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiOldColumns_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiOldColumnsDestroy(ImGuiOldColumns* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiOldColumns_ImGuiOldColumns")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiOldColumns* ImGuiOldColumnsImGuiOldColumns();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiOnceUponAFrame_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiOnceUponAFrameDestroy(ImGuiOnceUponAFrame* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiOnceUponAFrame_ImGuiOnceUponAFrame")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiOnceUponAFrame* ImGuiOnceUponAFrameImGuiOnceUponAFrame();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPayload_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiPayloadClear(ImGuiPayload* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPayload_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiPayloadDestroy(ImGuiPayload* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPayload_ImGuiPayload")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiPayload* ImGuiPayloadImGuiPayload();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPayload_IsDataType")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiPayloadIsDataType(ImGuiPayload* self, CString type);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPayload_IsDelivery")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiPayloadIsDelivery(ImGuiPayload* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPayload_IsPreview")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiPayloadIsPreview(ImGuiPayload* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPlatformIO_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiPlatformIODestroy(ImGuiPlatformIO* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPlatformIO_ImGuiPlatformIO")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiPlatformIO* ImGuiPlatformIOImGuiPlatformIO();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPlatformImeData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiPlatformImeDataDestroy(ImGuiPlatformImeData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPlatformImeData_ImGuiPlatformImeData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiPlatformImeData* ImGuiPlatformImeDataImGuiPlatformImeData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPlatformMonitor_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiPlatformMonitorDestroy(ImGuiPlatformMonitor* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPlatformMonitor_ImGuiPlatformMonitor")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiPlatformMonitor* ImGuiPlatformMonitorImGuiPlatformMonitor();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPopupData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiPopupDataDestroy(ImGuiPopupData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPopupData_ImGuiPopupData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiPopupData* ImGuiPopupDataImGuiPopupData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPtrOrIndex_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiPtrOrIndexDestroy(ImGuiPtrOrIndex* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiPtrOrIndex* ImGuiPtrOrIndexImGuiPtrOrIndexInt(int index);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiPtrOrIndex* ImGuiPtrOrIndexImGuiPtrOrIndexPtr(void* ptr);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiSettingsHandler_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiSettingsHandlerDestroy(ImGuiSettingsHandler* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiSettingsHandler_ImGuiSettingsHandler")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiSettingsHandler* ImGuiSettingsHandlerImGuiSettingsHandler();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStackLevelInfo_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStackLevelInfoDestroy(ImGuiStackLevelInfo* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStackLevelInfo_ImGuiStackLevelInfo")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStackLevelInfo* ImGuiStackLevelInfoImGuiStackLevelInfo();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStackSizes_CompareWithContextState")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStackSizesCompareWithContextState(ImGuiStackSizes* self, ImGuiContext* ctx);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStackSizes_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStackSizesDestroy(ImGuiStackSizes* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStackSizes_ImGuiStackSizes")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStackSizes* ImGuiStackSizesImGuiStackSizes();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStackSizes_SetToContextState")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStackSizesSetToContextState(ImGuiStackSizes* self, ImGuiContext* ctx);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_BuildSortByKey")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStorageBuildSortByKey(ImGuiStorage* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStorageClear(ImGuiStorage* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetBool")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiStorageGetBool(ImGuiStorage* self, ImGuiID key, CBool defaultVal);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetBoolRef")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool* ImGuiStorageGetBoolRef(ImGuiStorage* self, ImGuiID key, CBool defaultVal);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetFloat")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImGuiStorageGetFloat(ImGuiStorage* self, ImGuiID key, float defaultVal);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetFloatRef")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float* ImGuiStorageGetFloatRef(ImGuiStorage* self, ImGuiID key, float defaultVal);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetInt")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiStorageGetInt(ImGuiStorage* self, ImGuiID key, int defaultVal);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetIntRef")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int* ImGuiStorageGetIntRef(ImGuiStorage* self, ImGuiID key, int defaultVal);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetVoidPtr")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void* ImGuiStorageGetVoidPtr(ImGuiStorage* self, ImGuiID key);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_GetVoidPtrRef")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void** ImGuiStorageGetVoidPtrRef(ImGuiStorage* self, ImGuiID key, void* defaultVal);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStoragePair_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStoragePairDestroy(ImGuiStoragePair* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStoragePair_ImGuiStoragePair_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStoragePair* ImGuiStoragePairImGuiStoragePairFloat(ImGuiID key, float val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStoragePair_ImGuiStoragePair_Int")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStoragePair* ImGuiStoragePairImGuiStoragePairInt(ImGuiID key, int val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStoragePair_ImGuiStoragePair_Ptr")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStoragePair* ImGuiStoragePairImGuiStoragePairPtr(ImGuiID key, void* val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_SetAllInt")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStorageSetAllInt(ImGuiStorage* self, int val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_SetBool")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStorageSetBool(ImGuiStorage* self, ImGuiID key, CBool val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_SetFloat")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStorageSetFloat(ImGuiStorage* self, ImGuiID key, float val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_SetInt")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStorageSetInt(ImGuiStorage* self, ImGuiID key, int val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStorage_SetVoidPtr")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStorageSetVoidPtr(ImGuiStorage* self, ImGuiID key, void* val);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStyle_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStyleDestroy(ImGuiStyle* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStyle_ImGuiStyle")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStyle* ImGuiStyleImGuiStyle();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStyleMod_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStyleModDestroy(ImGuiStyleMod* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStyleMod_ImGuiStyleMod_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStyleMod* ImGuiStyleModImGuiStyleModFloat(ImGuiStyleVar idx, float v);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStyleMod_ImGuiStyleMod_Int")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStyleMod* ImGuiStyleModImGuiStyleModInt(ImGuiStyleVar idx, int v);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStyleMod_ImGuiStyleMod_Vec2")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiStyleMod* ImGuiStyleModImGuiStyleModVec2(ImGuiStyleVar idx, Vector2 v);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiStyle_ScaleAllSizes")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiStyleScaleAllSizes(ImGuiStyle* self, float scaleFactor);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTabBar_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTabBarDestroy(ImGuiTabBar* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTabBar_ImGuiTabBar")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTabBar* ImGuiTabBarImGuiTabBar();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTabItem_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTabItemDestroy(ImGuiTabItem* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTabItem_ImGuiTabItem")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTabItem* ImGuiTabItemImGuiTabItem();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableColumn_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableColumnDestroy(ImGuiTableColumn* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableColumn_ImGuiTableColumn")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableColumn* ImGuiTableColumnImGuiTableColumn();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableColumnSettings_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableColumnSettingsDestroy(ImGuiTableColumnSettings* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableColumnSettings_ImGuiTableColumnSettings")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableColumnSettings* ImGuiTableColumnSettingsImGuiTableColumnSettings();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableColumnSortSpecs_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableColumnSortSpecsDestroy(ImGuiTableColumnSortSpecs* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableColumnSortSpecs* ImGuiTableColumnSortSpecsImGuiTableColumnSortSpecs();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTable_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableDestroy(ImGuiTable* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTable_ImGuiTable")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTable* ImGuiTableImGuiTable();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableInstanceData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableInstanceDataDestroy(ImGuiTableInstanceData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableInstanceData_ImGuiTableInstanceData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableInstanceData* ImGuiTableInstanceDataImGuiTableInstanceData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableSettings_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableSettingsDestroy(ImGuiTableSettings* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableSettings_GetColumnSettings")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableColumnSettings* ImGuiTableSettingsGetColumnSettings(ImGuiTableSettings* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableSettings_ImGuiTableSettings")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableSettings* ImGuiTableSettingsImGuiTableSettings();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableSortSpecs_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableSortSpecsDestroy(ImGuiTableSortSpecs* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableSortSpecs_ImGuiTableSortSpecs")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableSortSpecs* ImGuiTableSortSpecsImGuiTableSortSpecs();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableTempData_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTableTempDataDestroy(ImGuiTableTempData* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTableTempData_ImGuiTableTempData")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTableTempData* ImGuiTableTempDataImGuiTableTempData();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_append")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextBufferAppend(ImGuiTextBuffer* self, CString str, CString strEnd);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_appendf")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextBufferAppendf(ImGuiTextBuffer* buffer, CString fmt);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_appendfv")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextBufferAppendfv(ImGuiTextBuffer* self, CString fmt, void* args);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_begin")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImGuiTextBufferBegin(ImGuiTextBuffer* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_c_str")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImGuiTextBufferCStr(ImGuiTextBuffer* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextBufferClear(ImGuiTextBuffer* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextBufferDestroy(ImGuiTextBuffer* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_empty")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiTextBufferEmpty(ImGuiTextBuffer* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_end")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImGuiTextBufferEnd(ImGuiTextBuffer* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_ImGuiTextBuffer")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTextBuffer* ImGuiTextBufferImGuiTextBuffer();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_reserve")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextBufferReserve(ImGuiTextBuffer* self, int capacity);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextBuffer_size")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiTextBufferSize(ImGuiTextBuffer* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextFilter_Build")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextFilterBuild(ImGuiTextFilter* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextFilter_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextFilterClear(ImGuiTextFilter* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextFilter_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextFilterDestroy(ImGuiTextFilter* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextFilter_Draw")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiTextFilterDraw(ImGuiTextFilter* self, CString label, float width);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextFilter_ImGuiTextFilter")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTextFilter* ImGuiTextFilterImGuiTextFilter(CString defaultFilter);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextFilter_IsActive")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiTextFilterIsActive(ImGuiTextFilter* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextFilter_PassFilter")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiTextFilterPassFilter(ImGuiTextFilter* self, CString text, CString textEnd);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextIndex_append")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextIndexAppend(ImGuiTextIndex* self, CString @base, int oldSize, int newSize);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextIndex_clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextIndexClear(ImGuiTextIndex* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextIndex_get_line_begin")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImGuiTextIndexGetLineBegin(ImGuiTextIndex* self, CString @base, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextIndex_get_line_end")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImGuiTextIndexGetLineEnd(ImGuiTextIndex* self, CString @base, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextIndex_size")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial int ImGuiTextIndexSize(ImGuiTextIndex* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextRange_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextRangeDestroy(ImGuiTextRange* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextRange_empty")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImGuiTextRangeEmpty(ImGuiTextRange* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextRange_ImGuiTextRange_Nil")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTextRange* ImGuiTextRangeImGuiTextRangeNil();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextRange_ImGuiTextRange_Str")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTextRange* ImGuiTextRangeImGuiTextRangeStr(CString b, CString e);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTextRange_split")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTextRangeSplit(ImGuiTextRange* self, CChar separator, ImVectorImGuiTextRange* @out);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTypingSelectState_Clear")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTypingSelectStateClear(ImGuiTypingSelectState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTypingSelectState_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiTypingSelectStateDestroy(ImGuiTypingSelectState* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiTypingSelectState_ImGuiTypingSelectState")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiTypingSelectState* ImGuiTypingSelectStateImGuiTypingSelectState();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewport_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportDestroy(ImGuiViewport* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewport_GetCenter")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportGetCenter(Vector2* pOut, ImGuiViewport* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewport_GetWorkCenter")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportGetWorkCenter(Vector2* pOut, ImGuiViewport* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewport_ImGuiViewport")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiViewport* ImGuiViewportImGuiViewport();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_CalcWorkRectPos")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPCalcWorkRectPos(Vector2* pOut, ImGuiViewportP* self, Vector2 offMin);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_CalcWorkRectSize")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPCalcWorkRectSize(Vector2* pOut, ImGuiViewportP* self, Vector2 offMin, Vector2 offMax);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_ClearRequestFlags")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPClearRequestFlags(ImGuiViewportP* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPDestroy(ImGuiViewportP* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_GetBuildWorkRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPGetBuildWorkRect(ImRect* pOut, ImGuiViewportP* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_GetMainRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPGetMainRect(ImRect* pOut, ImGuiViewportP* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_GetWorkRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPGetWorkRect(ImRect* pOut, ImGuiViewportP* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_ImGuiViewportP")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiViewportP* ImGuiViewportPImGuiViewportP();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiViewportP_UpdateWorkRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiViewportPUpdateWorkRect(ImGuiViewportP* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_CalcFontSize")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImGuiWindowCalcFontSize(ImGuiWindow* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindowClass_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiWindowClassDestroy(ImGuiWindowClass* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindowClass_ImGuiWindowClass")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiWindowClass* ImGuiWindowClassImGuiWindowClass();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiWindowDestroy(ImGuiWindow* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_GetIDFromRectangle")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiID ImGuiWindowGetIDFromRectangle(ImGuiWindow* self, ImRect rAbs);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_GetID_Int")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiID ImGuiWindowGetIDInt(ImGuiWindow* self, int n);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_GetID_Ptr")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiID ImGuiWindowGetIDPtr(ImGuiWindow* self, void* ptr);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_GetID_Str")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiID ImGuiWindowGetIDStr(ImGuiWindow* self, CString str, CString strEnd);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_ImGuiWindow")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiWindow* ImGuiWindowImGuiWindow(ImGuiContext* context, CString name);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_MenuBarHeight")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImGuiWindowMenuBarHeight(ImGuiWindow* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_MenuBarRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiWindowMenuBarRect(ImRect* pOut, ImGuiWindow* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_Rect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiWindowRect(ImRect* pOut, ImGuiWindow* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindowSettings_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiWindowSettingsDestroy(ImGuiWindowSettings* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindowSettings_GetName")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CString ImGuiWindowSettingsGetName(ImGuiWindowSettings* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindowSettings_ImGuiWindowSettings")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImGuiWindowSettings* ImGuiWindowSettingsImGuiWindowSettings();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_TitleBarHeight")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImGuiWindowTitleBarHeight(ImGuiWindow* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImGuiWindow_TitleBarRect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImGuiWindowTitleBarRect(ImRect* pOut, ImGuiWindow* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Add_Rect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectAddRect(ImRect* self, ImRect r);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Add_Vec2")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectAddVec2(ImRect* self, Vector2 p);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ClipWith")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectClipWith(ImRect* self, ImRect r);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ClipWithFull")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectClipWithFull(ImRect* self, ImRect r);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Contains_Rect")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImRectContainsRect(ImRect* self, ImRect r);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Contains_Vec2")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImRectContainsVec2(ImRect* self, Vector2 p);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ContainsWithPad")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImRectContainsWithPad(ImRect* self, Vector2 p, Vector2 pad);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectDestroy(ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Expand_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectExpandFloat(ImRect* self, float amount);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Expand_Vec2")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectExpandVec2(ImRect* self, Vector2 amount);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Floor")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectFloor(ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetArea")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImRectGetArea(ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetBL")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectGetBL(Vector2* pOut, ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetBR")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectGetBR(Vector2* pOut, ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetCenter")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectGetCenter(Vector2* pOut, ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetHeight")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImRectGetHeight(ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetSize")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectGetSize(Vector2* pOut, ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetTL")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectGetTL(Vector2* pOut, ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetTR")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectGetTR(Vector2* pOut, ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_GetWidth")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float ImRectGetWidth(ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ImRect_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImRect* ImRectImRectFloat(float x1, float y1, float x2, float y2);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ImRect_Nil")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImRect* ImRectImRectNil();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ImRect_Vec2")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImRect* ImRectImRectVec2(Vector2 min, Vector2 max);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ImRect_Vec4")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImRect* ImRectImRectVec4(Vector4 v);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_IsInverted")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImRectIsInverted(ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Overlaps")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial CBool ImRectOverlaps(ImRect* self, ImRect r);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_ToVec4")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectToVec4(Vector4* pOut, ImRect* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_Translate")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectTranslate(ImRect* self, Vector2 d);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_TranslateX")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectTranslateX(ImRect* self, float dx);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImRect_TranslateY")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImRectTranslateY(ImRect* self, float dy);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec1_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImVec1Destroy(float* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec1_ImVec1_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float* ImVec1ImVec1Float(float x);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec1_ImVec1_Nil")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial float* ImVec1ImVec1Nil();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec2_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImVec2Destroy(Vector2* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec2_ImVec2_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial Vector2* ImVec2ImVec2Float(float x, float y);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec2_ImVec2_Nil")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial Vector2* ImVec2ImVec2Nil();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec2ih_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImVec2ihDestroy(ImVec2ih* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec2ih_ImVec2ih_Nil")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImVec2ih* ImVec2ihImVec2ihNil();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec2ih_ImVec2ih_short")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImVec2ih* ImVec2ihImVec2ihShort(short x, short y);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec2ih_ImVec2ih_Vec2")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImVec2ih* ImVec2ihImVec2ihVec2(Vector2 rhs);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec4_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImVec4Destroy(Vector4* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec4_ImVec4_Float")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial Vector4* ImVec4ImVec4Float(float x, float y, float z, float w);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVec4_ImVec4_Nil")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial Vector4* ImVec4ImVec4Nil();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVector_ImWchar_create")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial ImVectorImWchar* ImVectorImWcharCreate();

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVector_ImWchar_destroy")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImVectorImWcharDestroy(ImVectorImWchar* self);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVector_ImWchar_Init")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImVectorImWcharInit(ImVectorImWchar* p);

    [CNode(Kind = "Function")]
    [LibraryImport(LibraryName, EntryPoint = "ImVector_ImWchar_UnInit")]
    [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
    public static partial void ImVectorImWcharUnInit(ImVectorImWchar* p);

    #endregion

    #region Types

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImDrawListPtr_ImDrawCmdPtr_Void
    {
        public delegate* unmanaged<ImDrawList*, ImDrawCmd*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImFontAtlasPtr_CBool
    {
        public delegate* unmanaged<ImFontAtlas*, CBool> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiContextPtr_ImGuiContextHookPtr_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiContextHook*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiContextPtr_ImGuiDockNodePtr_ImGuiTabBarPtr_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiDockNode*, ImGuiTabBar*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_CString_VoidPtr
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, CString, void*> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_ImGuiTextBufferPtr_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_VoidPtr_CString_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, void*, CString, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiInputTextCallbackDataPtr_Int
    {
        public delegate* unmanaged<ImGuiInputTextCallbackData*, int> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiSizeCallbackDataPtr_Void
    {
        public delegate* unmanaged<ImGuiSizeCallbackData*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_CBool
    {
        public delegate* unmanaged<ImGuiViewport*, CBool> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_CString_Void
    {
        public delegate* unmanaged<ImGuiViewport*, CString, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_Float
    {
        public delegate* unmanaged<ImGuiViewport*, float> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_Float_Void
    {
        public delegate* unmanaged<ImGuiViewport*, float, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_ImGuiPlatformImeDataPtr_Void
    {
        public delegate* unmanaged<ImGuiViewport*, ImGuiPlatformImeData*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_Ulong_VoidPtr_UlongPtr_Int
    {
        public delegate* unmanaged<ImGuiViewport*, ulong, void*, ulong*, int> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_Vector2
    {
        public delegate* unmanaged<ImGuiViewport*, Vector2> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_Vector2_Void
    {
        public delegate* unmanaged<ImGuiViewport*, Vector2, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_Void
    {
        public delegate* unmanaged<ImGuiViewport*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_ImGuiViewportPtr_VoidPtr_Void
    {
        public delegate* unmanaged<ImGuiViewport*, void*, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_Int_VoidPtr_VoidPtr
    {
        public delegate* unmanaged<int, void*, void*> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_VoidPtr_CString
    {
        public delegate* unmanaged<void*, CString> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_VoidPtr_CString_Void
    {
        public delegate* unmanaged<void*, CString, void> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_VoidPtr_Int_CString
    {
        public delegate* unmanaged<void*, int, CString> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_VoidPtr_Int_Float
    {
        public delegate* unmanaged<void*, int, float> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_VoidPtr_VoidPtr_Int
    {
        public delegate* unmanaged<void*, void*, int> Pointer;
    }

    [CNode(Kind = "FunctionPointer")]
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_VoidPtr_VoidPtr_Void
    {
        public delegate* unmanaged<void*, void*, void> Pointer;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImBitArrayImGuiKeyNamedKeyCOUNTLessImGuiKeyNamedKeyBEGIN
    {
        [FieldOffset(0)] // size = 20
        public fixed byte _Storage[20]; // ImU32[5]

        public readonly Span<uint> Storage
        {
            get
            {
                fixed (ImBitArrayImGuiKeyNamedKeyCOUNTLessImGuiKeyNamedKeyBEGIN* @this = &this)
                {
                    var pointer = &@this->_Storage[0];
                    var span = new Span<uint>(pointer, 5);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImBitVector
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImU32 Storage;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImChunkStreamImGuiTableSettings
    {
        [FieldOffset(0)] // size = 16
        public ImVectorChar Buf;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImChunkStreamImGuiWindowSettings
    {
        [FieldOffset(0)] // size = 16
        public ImVectorChar Buf;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImColor
    {
        [FieldOffset(0)] // size = 16
        public Vector4 Value;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImDrawChannel
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImDrawCmd CmdBuffer;

        [FieldOffset(16)] // size = 16
        public ImVectorImDrawIdx IdxBuffer;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
    public struct ImDrawCmd
    {
        [FieldOffset(0)] // size = 16
        public Vector4 ClipRect;

        [FieldOffset(16)] // size = 8
        public ImTextureID TextureId;

        [FieldOffset(24)] // size = 4
        public uint VtxOffset;

        [FieldOffset(28)] // size = 4
        public uint IdxOffset;

        [FieldOffset(32)] // size = 4
        public uint ElemCount;

        [FieldOffset(40)] // size = 8
        public ImDrawCallback UserCallback;

        [FieldOffset(48)] // size = 8
        public void* UserCallbackData;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImDrawCmdHeader
    {
        [FieldOffset(0)] // size = 16
        public Vector4 ClipRect;

        [FieldOffset(16)] // size = 8
        public ImTextureID TextureId;

        [FieldOffset(24)] // size = 4
        public uint VtxOffset;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
    public struct ImDrawData
    {
        [FieldOffset(0)] // size = 1
        public CBool Valid;

        [FieldOffset(4)] // size = 4
        public int CmdListsCount;

        [FieldOffset(8)] // size = 4
        public int TotalIdxCount;

        [FieldOffset(12)] // size = 4
        public int TotalVtxCount;

        [FieldOffset(16)] // size = 16
        public ImVectorImDrawListPtr CmdLists;

        [FieldOffset(32)] // size = 8
        public Vector2 DisplayPos;

        [FieldOffset(40)] // size = 8
        public Vector2 DisplaySize;

        [FieldOffset(48)] // size = 8
        public Vector2 FramebufferScale;

        [FieldOffset(56)] // size = 8
        public ImGuiViewport* OwnerViewport;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImDrawDataBuilder
    {
        [FieldOffset(0)] // size = 16
        public fixed byte _Layers[16]; // ImVector_ImDrawListPtr*[2]

        public readonly Span<nint> Layers
        {
            get
            {
                fixed (ImDrawDataBuilder* @this = &this)
                {
                    var pointer = &@this->_Layers[0];
                    var span = new Span<nint>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(16)] // size = 16
        public ImVectorImDrawListPtr LayerData1;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 200, Pack = 8)]
    public struct ImDrawList
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImDrawCmd CmdBuffer;

        [FieldOffset(16)] // size = 16
        public ImVectorImDrawIdx IdxBuffer;

        [FieldOffset(32)] // size = 16
        public ImVectorImDrawVert VtxBuffer;

        [FieldOffset(48)] // size = 4
        public ImDrawListFlags Flags;

        [FieldOffset(52)] // size = 4
        public uint VtxCurrentIdx;

        [FieldOffset(56)] // size = 8
        public ImDrawListSharedData* Data;

        [FieldOffset(64)] // size = 8
        public CString _OwnerName;

        public string OwnerName
        {
            get
            {
                return CString.ToString(_OwnerName);
            }
            set
            {
                _OwnerName = CString.FromString(value);
            }
        }

        [FieldOffset(72)] // size = 8
        public ImDrawVert* VtxWritePtr;

        [FieldOffset(80)] // size = 8
        public ImDrawIdx* IdxWritePtr;

        [FieldOffset(88)] // size = 16
        public ImVectorImVec4 ClipRectStack;

        [FieldOffset(104)] // size = 16
        public ImVectorImTextureID TextureIdStack;

        [FieldOffset(120)] // size = 16
        public ImVectorImVec2 Path;

        [FieldOffset(136)] // size = 32
        public ImDrawCmdHeader CmdHeader;

        [FieldOffset(168)] // size = 24
        public ImDrawListSplitter Splitter;

        [FieldOffset(192)] // size = 4
        public float FringeScale;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 528, Pack = 8)]
    public struct ImDrawListSharedData
    {
        [FieldOffset(0)] // size = 8
        public Vector2 TexUvWhitePixel;

        [FieldOffset(8)] // size = 8
        public ImFont* Font;

        [FieldOffset(16)] // size = 4
        public float FontSize;

        [FieldOffset(20)] // size = 4
        public float CurveTessellationTol;

        [FieldOffset(24)] // size = 4
        public float CircleSegmentMaxError;

        [FieldOffset(28)] // size = 16
        public Vector4 ClipRectFullscreen;

        [FieldOffset(44)] // size = 4
        public ImDrawListFlags InitialFlags;

        [FieldOffset(48)] // size = 16
        public ImVectorImVec2 TempBuffer;

        [FieldOffset(64)] // size = 384
        public fixed byte _ArcFastVtx[384]; // ImVec2[48]

        public readonly Span<Vector2> ArcFastVtx
        {
            get
            {
                fixed (ImDrawListSharedData* @this = &this)
                {
                    var pointer = &@this->_ArcFastVtx[0];
                    var span = new Span<Vector2>(pointer, 48);
                    return span;
                }
            }
        }

        [FieldOffset(448)] // size = 4
        public float ArcFastRadiusCutoff;

        [FieldOffset(452)] // size = 64
        public fixed byte _CircleSegmentCounts[64]; // ImU8[64]

        public readonly Span<byte> CircleSegmentCounts
        {
            get
            {
                fixed (ImDrawListSharedData* @this = &this)
                {
                    var pointer = &@this->_CircleSegmentCounts[0];
                    var span = new Span<byte>(pointer, 64);
                    return span;
                }
            }
        }

        [FieldOffset(520)] // size = 8
        public Vector4* TexUvLines;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ImDrawListSplitter
    {
        [FieldOffset(0)] // size = 4
        public int Current;

        [FieldOffset(4)] // size = 4
        public int Count;

        [FieldOffset(8)] // size = 16
        public ImVectorImDrawChannel Channels;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImDrawVert
    {
        [FieldOffset(0)] // size = 8
        public Vector2 Pos;

        [FieldOffset(8)] // size = 8
        public Vector2 Uv;

        [FieldOffset(16)] // size = 4
        public uint Col;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 120, Pack = 8)]
    public struct ImFont
    {
        [FieldOffset(0)] // size = 16
        public ImVectorFloat IndexAdvanceX;

        [FieldOffset(16)] // size = 4
        public float FallbackAdvanceX;

        [FieldOffset(20)] // size = 4
        public float FontSize;

        [FieldOffset(24)] // size = 16
        public ImVectorImWchar IndexLookup;

        [FieldOffset(40)] // size = 16
        public ImVectorImFontGlyph Glyphs;

        [FieldOffset(56)] // size = 8
        public ImFontGlyph* FallbackGlyph;

        [FieldOffset(64)] // size = 8
        public ImFontAtlas* ContainerAtlas;

        [FieldOffset(72)] // size = 8
        public ImFontConfig* ConfigData;

        [FieldOffset(80)] // size = 2
        public short ConfigDataCount;

        [FieldOffset(82)] // size = 2
        public ushort FallbackChar;

        [FieldOffset(84)] // size = 2
        public ushort EllipsisChar;

        [FieldOffset(86)] // size = 2
        public short EllipsisCharCount;

        [FieldOffset(88)] // size = 4
        public float EllipsisWidth;

        [FieldOffset(92)] // size = 4
        public float EllipsisCharStep;

        [FieldOffset(96)] // size = 1
        public CBool DirtyLookupTables;

        [FieldOffset(100)] // size = 4
        public float Scale;

        [FieldOffset(104)] // size = 4
        public float Ascent;

        [FieldOffset(108)] // size = 4
        public float Descent;

        [FieldOffset(112)] // size = 4
        public int MetricsTotalSurface;

        [FieldOffset(116)] // size = 2
        public fixed byte _Used4kPagesMap[2]; // ImU8[2]

        public readonly Span<byte> Used4kPagesMap
        {
            get
            {
                fixed (ImFont* @this = &this)
                {
                    var pointer = &@this->_Used4kPagesMap[0];
                    var span = new Span<byte>(pointer, 2);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 1184, Pack = 8)]
    public struct ImFontAtlas
    {
        [FieldOffset(0)] // size = 4
        public ImFontAtlasFlags Flags;

        [FieldOffset(8)] // size = 8
        public ImTextureID TexID;

        [FieldOffset(16)] // size = 4
        public int TexDesiredWidth;

        [FieldOffset(20)] // size = 4
        public int TexGlyphPadding;

        [FieldOffset(24)] // size = 1
        public CBool Locked;

        [FieldOffset(32)] // size = 8
        public void* UserData;

        [FieldOffset(40)] // size = 1
        public CBool TexReady;

        [FieldOffset(41)] // size = 1
        public CBool TexPixelsUseColors;

        [FieldOffset(48)] // size = 8
        public byte* TexPixelsAlpha8;

        [FieldOffset(56)] // size = 8
        public uint* TexPixelsRGBA32;

        [FieldOffset(64)] // size = 4
        public int TexWidth;

        [FieldOffset(68)] // size = 4
        public int TexHeight;

        [FieldOffset(72)] // size = 8
        public Vector2 TexUvScale;

        [FieldOffset(80)] // size = 8
        public Vector2 TexUvWhitePixel;

        [FieldOffset(88)] // size = 16
        public ImVectorImFontPtr Fonts;

        [FieldOffset(104)] // size = 16
        public ImVectorImFontAtlasCustomRect CustomRects;

        [FieldOffset(120)] // size = 16
        public ImVectorImFontConfig ConfigData;

        [FieldOffset(136)] // size = 1024
        public fixed byte _TexUvLines[1024]; // ImVec4[64]

        public readonly Span<Vector4> TexUvLines
        {
            get
            {
                fixed (ImFontAtlas* @this = &this)
                {
                    var pointer = &@this->_TexUvLines[0];
                    var span = new Span<Vector4>(pointer, 64);
                    return span;
                }
            }
        }

        [FieldOffset(1160)] // size = 8
        public ImFontBuilderIO* FontBuilderIO;

        [FieldOffset(1168)] // size = 4
        public uint FontBuilderFlags;

        [FieldOffset(1172)] // size = 4
        public int PackIdMouseCursors;

        [FieldOffset(1176)] // size = 4
        public int PackIdLines;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImFontAtlasCustomRect
    {
        [FieldOffset(0)] // size = 2
        public ushort Width;

        [FieldOffset(2)] // size = 2
        public ushort Height;

        [FieldOffset(4)] // size = 2
        public ushort X;

        [FieldOffset(6)] // size = 2
        public ushort Y;

        [FieldOffset(8)] // size = 4
        public uint GlyphID;

        [FieldOffset(12)] // size = 4
        public float GlyphAdvanceX;

        [FieldOffset(16)] // size = 8
        public Vector2 GlyphOffset;

        [FieldOffset(24)] // size = 8
        public ImFont* Font;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImFontBuilderIO
    {
        [FieldOffset(0)] // size = 8
        public FnPtr_ImFontAtlasPtr_CBool FontBuilderBuild;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 144, Pack = 8)]
    public struct ImFontConfig
    {
        [FieldOffset(0)] // size = 8
        public void* FontData;

        [FieldOffset(8)] // size = 4
        public int FontDataSize;

        [FieldOffset(12)] // size = 1
        public CBool FontDataOwnedByAtlas;

        [FieldOffset(16)] // size = 4
        public int FontNo;

        [FieldOffset(20)] // size = 4
        public float SizePixels;

        [FieldOffset(24)] // size = 4
        public int OversampleH;

        [FieldOffset(28)] // size = 4
        public int OversampleV;

        [FieldOffset(32)] // size = 1
        public CBool PixelSnapH;

        [FieldOffset(36)] // size = 8
        public Vector2 GlyphExtraSpacing;

        [FieldOffset(44)] // size = 8
        public Vector2 GlyphOffset;

        [FieldOffset(56)] // size = 8
        public ushort* GlyphRanges;

        [FieldOffset(64)] // size = 4
        public float GlyphMinAdvanceX;

        [FieldOffset(68)] // size = 4
        public float GlyphMaxAdvanceX;

        [FieldOffset(72)] // size = 1
        public CBool MergeMode;

        [FieldOffset(76)] // size = 4
        public uint FontBuilderFlags;

        [FieldOffset(80)] // size = 4
        public float RasterizerMultiply;

        [FieldOffset(84)] // size = 4
        public float RasterizerDensity;

        [FieldOffset(88)] // size = 2
        public ushort EllipsisChar;

        [FieldOffset(90)] // size = 40
        public fixed byte _Name[40]; // char[40]

        public string Name
        {
            get
            {
                fixed (ImFontConfig* @this = &this)
                {
                    var pointer = &@this->_Name[0];
                    var cString = new CString(pointer);
                    return CString.ToString(cString);
                }
            }
        }

        [FieldOffset(136)] // size = 8
        public ImFont* DstFont;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 4)]
    public struct ImFontGlyph
    {
        [FieldOffset(0)] // size = 4
        public uint Colored;

        [FieldOffset(0)] // size = 4
        public uint Visible;

        [FieldOffset(0)] // size = 4
        public uint Codepoint;

        [FieldOffset(4)] // size = 4
        public float AdvanceX;

        [FieldOffset(8)] // size = 4
        public float X0;

        [FieldOffset(12)] // size = 4
        public float Y0;

        [FieldOffset(16)] // size = 4
        public float X1;

        [FieldOffset(20)] // size = 4
        public float Y1;

        [FieldOffset(24)] // size = 4
        public float U0;

        [FieldOffset(28)] // size = 4
        public float V0;

        [FieldOffset(32)] // size = 4
        public float U1;

        [FieldOffset(36)] // size = 4
        public float V1;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImFontGlyphRangesBuilder
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImU32 UsedChars;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImGuiColorMod
    {
        [FieldOffset(0)] // size = 4
        public ImGuiCol Col;

        [FieldOffset(4)] // size = 16
        public Vector4 BackupValue;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 4)]
    public struct ImGuiComboPreviewData
    {
        [FieldOffset(0)] // size = 16
        public ImRect PreviewRect;

        [FieldOffset(16)] // size = 8
        public Vector2 BackupCursorPos;

        [FieldOffset(24)] // size = 8
        public Vector2 BackupCursorMaxPos;

        [FieldOffset(32)] // size = 8
        public Vector2 BackupCursorPosPrevLine;

        [FieldOffset(40)] // size = 4
        public float BackupPrevLineTextBaseOffset;

        [FieldOffset(44)] // size = 4
        public ImGuiLayoutType BackupLayout;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 14048, Pack = 8)]
    public struct ImGuiContext
    {
        [FieldOffset(0)] // size = 1
        public CBool Initialized;

        [FieldOffset(1)] // size = 1
        public CBool FontAtlasOwnedByContext;

        [FieldOffset(8)] // size = 3032
        public ImGuiIO IO;

        [FieldOffset(3040)] // size = 216
        public ImGuiPlatformIO PlatformIO;

        [FieldOffset(3256)] // size = 1132
        public ImGuiStyle Style;

        [FieldOffset(4388)] // size = 4
        public ImGuiConfigFlags ConfigFlagsCurrFrame;

        [FieldOffset(4392)] // size = 4
        public ImGuiConfigFlags ConfigFlagsLastFrame;

        [FieldOffset(4400)] // size = 8
        public ImFont* Font;

        [FieldOffset(4408)] // size = 4
        public float FontSize;

        [FieldOffset(4412)] // size = 4
        public float FontBaseSize;

        [FieldOffset(4416)] // size = 528
        public ImDrawListSharedData DrawListSharedData;

        [FieldOffset(4944)] // size = 8
        public Double Time;

        [FieldOffset(4952)] // size = 4
        public int FrameCount;

        [FieldOffset(4956)] // size = 4
        public int FrameCountEnded;

        [FieldOffset(4960)] // size = 4
        public int FrameCountPlatformEnded;

        [FieldOffset(4964)] // size = 4
        public int FrameCountRendered;

        [FieldOffset(4968)] // size = 1
        public CBool WithinFrameScope;

        [FieldOffset(4969)] // size = 1
        public CBool WithinFrameScopeWithImplicitWindow;

        [FieldOffset(4970)] // size = 1
        public CBool WithinEndChild;

        [FieldOffset(4971)] // size = 1
        public CBool GcCompactAll;

        [FieldOffset(4972)] // size = 1
        public CBool TestEngineHookItems;

        [FieldOffset(4976)] // size = 8
        public void* TestEngine;

        [FieldOffset(4984)] // size = 16
        public ImVectorImGuiInputEvent InputEventsQueue;

        [FieldOffset(5000)] // size = 16
        public ImVectorImGuiInputEvent InputEventsTrail;

        [FieldOffset(5016)] // size = 4
        public ImGuiMouseSource InputEventsNextMouseSource;

        [FieldOffset(5020)] // size = 4
        public uint InputEventsNextEventId;

        [FieldOffset(5024)] // size = 16
        public ImVectorImGuiWindowPtr Windows;

        [FieldOffset(5040)] // size = 16
        public ImVectorImGuiWindowPtr WindowsFocusOrder;

        [FieldOffset(5056)] // size = 16
        public ImVectorImGuiWindowPtr WindowsTempSortBuffer;

        [FieldOffset(5072)] // size = 16
        public ImVectorImGuiWindowStackData CurrentWindowStack;

        [FieldOffset(5088)] // size = 16
        public ImGuiStorage WindowsById;

        [FieldOffset(5104)] // size = 4
        public int WindowsActiveCount;

        [FieldOffset(5108)] // size = 8
        public Vector2 WindowsHoverPadding;

        [FieldOffset(5116)] // size = 4
        public ImGuiID DebugBreakInWindow;

        [FieldOffset(5120)] // size = 8
        public ImGuiWindow* CurrentWindow;

        [FieldOffset(5128)] // size = 8
        public ImGuiWindow* HoveredWindow;

        [FieldOffset(5136)] // size = 8
        public ImGuiWindow* HoveredWindowUnderMovingWindow;

        [FieldOffset(5144)] // size = 8
        public ImGuiWindow* MovingWindow;

        [FieldOffset(5152)] // size = 8
        public ImGuiWindow* WheelingWindow;

        [FieldOffset(5160)] // size = 8
        public Vector2 WheelingWindowRefMousePos;

        [FieldOffset(5168)] // size = 4
        public int WheelingWindowStartFrame;

        [FieldOffset(5172)] // size = 4
        public int WheelingWindowScrolledFrame;

        [FieldOffset(5176)] // size = 4
        public float WheelingWindowReleaseTimer;

        [FieldOffset(5180)] // size = 8
        public Vector2 WheelingWindowWheelRemainder;

        [FieldOffset(5188)] // size = 8
        public Vector2 WheelingAxisAvg;

        [FieldOffset(5196)] // size = 4
        public ImGuiID DebugHookIdInfo;

        [FieldOffset(5200)] // size = 4
        public ImGuiID HoveredId;

        [FieldOffset(5204)] // size = 4
        public ImGuiID HoveredIdPreviousFrame;

        [FieldOffset(5208)] // size = 1
        public CBool HoveredIdAllowOverlap;

        [FieldOffset(5209)] // size = 1
        public CBool HoveredIdDisabled;

        [FieldOffset(5212)] // size = 4
        public float HoveredIdTimer;

        [FieldOffset(5216)] // size = 4
        public float HoveredIdNotActiveTimer;

        [FieldOffset(5220)] // size = 4
        public ImGuiID ActiveId;

        [FieldOffset(5224)] // size = 4
        public ImGuiID ActiveIdIsAlive;

        [FieldOffset(5228)] // size = 4
        public float ActiveIdTimer;

        [FieldOffset(5232)] // size = 1
        public CBool ActiveIdIsJustActivated;

        [FieldOffset(5233)] // size = 1
        public CBool ActiveIdAllowOverlap;

        [FieldOffset(5234)] // size = 1
        public CBool ActiveIdNoClearOnFocusLoss;

        [FieldOffset(5235)] // size = 1
        public CBool ActiveIdHasBeenPressedBefore;

        [FieldOffset(5236)] // size = 1
        public CBool ActiveIdHasBeenEditedBefore;

        [FieldOffset(5237)] // size = 1
        public CBool ActiveIdHasBeenEditedThisFrame;

        [FieldOffset(5240)] // size = 8
        public Vector2 ActiveIdClickOffset;

        [FieldOffset(5248)] // size = 8
        public ImGuiWindow* ActiveIdWindow;

        [FieldOffset(5256)] // size = 4
        public ImGuiInputSource ActiveIdSource;

        [FieldOffset(5260)] // size = 4
        public int ActiveIdMouseButton;

        [FieldOffset(5264)] // size = 4
        public ImGuiID ActiveIdPreviousFrame;

        [FieldOffset(5268)] // size = 1
        public CBool ActiveIdPreviousFrameIsAlive;

        [FieldOffset(5269)] // size = 1
        public CBool ActiveIdPreviousFrameHasBeenEditedBefore;

        [FieldOffset(5272)] // size = 8
        public ImGuiWindow* ActiveIdPreviousFrameWindow;

        [FieldOffset(5280)] // size = 4
        public ImGuiID LastActiveId;

        [FieldOffset(5284)] // size = 4
        public float LastActiveIdTimer;

        [FieldOffset(5288)] // size = 8
        public Double LastKeyModsChangeTime;

        [FieldOffset(5296)] // size = 8
        public Double LastKeyModsChangeFromNoneTime;

        [FieldOffset(5304)] // size = 8
        public Double LastKeyboardKeyPressTime;

        [FieldOffset(5312)] // size = 1848
        public fixed byte _KeysOwnerData[1848]; // ImGuiKeyOwnerData[154]

        public readonly Span<ImGuiKeyOwnerData> KeysOwnerData
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_KeysOwnerData[0];
                    var span = new Span<ImGuiKeyOwnerData>(pointer, 154);
                    return span;
                }
            }
        }

        [FieldOffset(7160)] // size = 344
        public ImGuiKeyRoutingTable KeysRoutingTable;

        [FieldOffset(7504)] // size = 4
        public uint ActiveIdUsingNavDirMask;

        [FieldOffset(7508)] // size = 1
        public CBool ActiveIdUsingAllKeyboardKeys;

        [FieldOffset(7512)] // size = 4
        public ImGuiKeyChord DebugBreakInShortcutRouting;

        [FieldOffset(7516)] // size = 4
        public ImGuiID CurrentFocusScopeId;

        [FieldOffset(7520)] // size = 4
        public ImGuiItemFlags CurrentItemFlags;

        [FieldOffset(7524)] // size = 4
        public ImGuiID DebugLocateId;

        [FieldOffset(7528)] // size = 32
        public ImGuiNextItemData NextItemData;

        [FieldOffset(7560)] // size = 76
        public ImGuiLastItemData LastItemData;

        [FieldOffset(7640)] // size = 152
        public ImGuiNextWindowData NextWindowData;

        [FieldOffset(7792)] // size = 1
        public CBool DebugShowGroupRects;

        [FieldOffset(7796)] // size = 4
        public ImGuiCol DebugFlashStyleColorIdx;

        [FieldOffset(7800)] // size = 16
        public ImVectorImGuiColorMod ColorStack;

        [FieldOffset(7816)] // size = 16
        public ImVectorImGuiStyleMod StyleVarStack;

        [FieldOffset(7832)] // size = 16
        public ImVectorImFontPtr FontStack;

        [FieldOffset(7848)] // size = 16
        public ImVectorImGuiID FocusScopeStack;

        [FieldOffset(7864)] // size = 16
        public ImVectorImGuiItemFlags ItemFlagsStack;

        [FieldOffset(7880)] // size = 16
        public ImVectorImGuiGroupData GroupStack;

        [FieldOffset(7896)] // size = 16
        public ImVectorImGuiPopupData OpenPopupStack;

        [FieldOffset(7912)] // size = 16
        public ImVectorImGuiPopupData BeginPopupStack;

        [FieldOffset(7928)] // size = 16
        public ImVectorImGuiNavTreeNodeData NavTreeNodeStack;

        [FieldOffset(7944)] // size = 4
        public int BeginMenuCount;

        [FieldOffset(7952)] // size = 16
        public ImVectorImGuiViewportPPtr Viewports;

        [FieldOffset(7968)] // size = 4
        public float CurrentDpiScale;

        [FieldOffset(7976)] // size = 8
        public ImGuiViewportP* CurrentViewport;

        [FieldOffset(7984)] // size = 8
        public ImGuiViewportP* MouseViewport;

        [FieldOffset(7992)] // size = 8
        public ImGuiViewportP* MouseLastHoveredViewport;

        [FieldOffset(8000)] // size = 4
        public ImGuiID PlatformLastFocusedViewportId;

        [FieldOffset(8008)] // size = 48
        public ImGuiPlatformMonitor FallbackMonitor;

        [FieldOffset(8056)] // size = 4
        public int ViewportCreatedCount;

        [FieldOffset(8060)] // size = 4
        public int PlatformWindowsCreatedCount;

        [FieldOffset(8064)] // size = 4
        public int ViewportFocusedStampCount;

        [FieldOffset(8072)] // size = 8
        public ImGuiWindow* NavWindow;

        [FieldOffset(8080)] // size = 4
        public ImGuiID NavId;

        [FieldOffset(8084)] // size = 4
        public ImGuiID NavFocusScopeId;

        [FieldOffset(8088)] // size = 4
        public ImGuiID NavActivateId;

        [FieldOffset(8092)] // size = 4
        public ImGuiID NavActivateDownId;

        [FieldOffset(8096)] // size = 4
        public ImGuiID NavActivatePressedId;

        [FieldOffset(8100)] // size = 4
        public ImGuiActivateFlags NavActivateFlags;

        [FieldOffset(8104)] // size = 4
        public ImGuiID NavJustMovedToId;

        [FieldOffset(8108)] // size = 4
        public ImGuiID NavJustMovedToFocusScopeId;

        [FieldOffset(8112)] // size = 4
        public ImGuiKeyChord NavJustMovedToKeyMods;

        [FieldOffset(8116)] // size = 4
        public ImGuiID NavNextActivateId;

        [FieldOffset(8120)] // size = 4
        public ImGuiActivateFlags NavNextActivateFlags;

        [FieldOffset(8124)] // size = 4
        public ImGuiInputSource NavInputSource;

        [FieldOffset(8128)] // size = 4
        public ImGuiNavLayer NavLayer;

        [FieldOffset(8136)] // size = 8
        public ImGuiSelectionUserData NavLastValidSelectionUserData;

        [FieldOffset(8144)] // size = 1
        public CBool NavIdIsAlive;

        [FieldOffset(8145)] // size = 1
        public CBool NavMousePosDirty;

        [FieldOffset(8146)] // size = 1
        public CBool NavDisableHighlight;

        [FieldOffset(8147)] // size = 1
        public CBool NavDisableMouseHover;

        [FieldOffset(8148)] // size = 1
        public CBool NavAnyRequest;

        [FieldOffset(8149)] // size = 1
        public CBool NavInitRequest;

        [FieldOffset(8150)] // size = 1
        public CBool NavInitRequestFromMove;

        [FieldOffset(8152)] // size = 64
        public ImGuiNavItemData NavInitResult;

        [FieldOffset(8216)] // size = 1
        public CBool NavMoveSubmitted;

        [FieldOffset(8217)] // size = 1
        public CBool NavMoveScoringItems;

        [FieldOffset(8218)] // size = 1
        public CBool NavMoveForwardToNextFrame;

        [FieldOffset(8220)] // size = 4
        public ImGuiNavMoveFlags NavMoveFlags;

        [FieldOffset(8224)] // size = 4
        public ImGuiScrollFlags NavMoveScrollFlags;

        [FieldOffset(8228)] // size = 4
        public ImGuiKeyChord NavMoveKeyMods;

        [FieldOffset(8232)] // size = 4
        public ImGuiDir NavMoveDir;

        [FieldOffset(8236)] // size = 4
        public ImGuiDir NavMoveDirForDebug;

        [FieldOffset(8240)] // size = 4
        public ImGuiDir NavMoveClipDir;

        [FieldOffset(8244)] // size = 16
        public ImRect NavScoringRect;

        [FieldOffset(8260)] // size = 16
        public ImRect NavScoringNoClipRect;

        [FieldOffset(8276)] // size = 4
        public int NavScoringDebugCount;

        [FieldOffset(8280)] // size = 4
        public int NavTabbingDir;

        [FieldOffset(8284)] // size = 4
        public int NavTabbingCounter;

        [FieldOffset(8288)] // size = 64
        public ImGuiNavItemData NavMoveResultLocal;

        [FieldOffset(8352)] // size = 64
        public ImGuiNavItemData NavMoveResultLocalVisible;

        [FieldOffset(8416)] // size = 64
        public ImGuiNavItemData NavMoveResultOther;

        [FieldOffset(8480)] // size = 64
        public ImGuiNavItemData NavTabbingResultFirst;

        [FieldOffset(8544)] // size = 4
        public ImGuiKeyChord ConfigNavWindowingKeyNext;

        [FieldOffset(8548)] // size = 4
        public ImGuiKeyChord ConfigNavWindowingKeyPrev;

        [FieldOffset(8552)] // size = 8
        public ImGuiWindow* NavWindowingTarget;

        [FieldOffset(8560)] // size = 8
        public ImGuiWindow* NavWindowingTargetAnim;

        [FieldOffset(8568)] // size = 8
        public ImGuiWindow* NavWindowingListWindow;

        [FieldOffset(8576)] // size = 4
        public float NavWindowingTimer;

        [FieldOffset(8580)] // size = 4
        public float NavWindowingHighlightAlpha;

        [FieldOffset(8584)] // size = 1
        public CBool NavWindowingToggleLayer;

        [FieldOffset(8588)] // size = 8
        public Vector2 NavWindowingAccumDeltaPos;

        [FieldOffset(8596)] // size = 8
        public Vector2 NavWindowingAccumDeltaSize;

        [FieldOffset(8604)] // size = 4
        public float DimBgRatio;

        [FieldOffset(8608)] // size = 1
        public CBool DragDropActive;

        [FieldOffset(8609)] // size = 1
        public CBool DragDropWithinSource;

        [FieldOffset(8610)] // size = 1
        public CBool DragDropWithinTarget;

        [FieldOffset(8612)] // size = 4
        public ImGuiDragDropFlags DragDropSourceFlags;

        [FieldOffset(8616)] // size = 4
        public int DragDropSourceFrameCount;

        [FieldOffset(8620)] // size = 4
        public int DragDropMouseButton;

        [FieldOffset(8624)] // size = 64
        public ImGuiPayload DragDropPayload;

        [FieldOffset(8688)] // size = 16
        public ImRect DragDropTargetRect;

        [FieldOffset(8704)] // size = 16
        public ImRect DragDropTargetClipRect;

        [FieldOffset(8720)] // size = 4
        public ImGuiID DragDropTargetId;

        [FieldOffset(8724)] // size = 4
        public ImGuiDragDropFlags DragDropAcceptFlags;

        [FieldOffset(8728)] // size = 4
        public float DragDropAcceptIdCurrRectSurface;

        [FieldOffset(8732)] // size = 4
        public ImGuiID DragDropAcceptIdCurr;

        [FieldOffset(8736)] // size = 4
        public ImGuiID DragDropAcceptIdPrev;

        [FieldOffset(8740)] // size = 4
        public int DragDropAcceptFrameCount;

        [FieldOffset(8744)] // size = 4
        public ImGuiID DragDropHoldJustPressedId;

        [FieldOffset(8752)] // size = 16
        public ImVectorUnsignedChar DragDropPayloadBufHeap;

        [FieldOffset(8768)] // size = 16
        public fixed byte _DragDropPayloadBufLocal[16]; // unsigned char[16]

        public readonly Span<byte> DragDropPayloadBufLocal
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_DragDropPayloadBufLocal[0];
                    var span = new Span<byte>(pointer, 16);
                    return span;
                }
            }
        }

        [FieldOffset(8784)] // size = 4
        public int ClipperTempDataStacked;

        [FieldOffset(8792)] // size = 16
        public ImVectorImGuiListClipperData ClipperTempData;

        [FieldOffset(8808)] // size = 8
        public ImGuiTable* CurrentTable;

        [FieldOffset(8816)] // size = 4
        public ImGuiID DebugBreakInTable;

        [FieldOffset(8820)] // size = 4
        public int TablesTempDataStacked;

        [FieldOffset(8824)] // size = 16
        public ImVectorImGuiTableTempData TablesTempData;

        [FieldOffset(8840)] // size = 40
        public ImPoolImGuiTable Tables;

        [FieldOffset(8880)] // size = 16
        public ImVectorFloat TablesLastTimeActive;

        [FieldOffset(8896)] // size = 16
        public ImVectorImDrawChannel DrawChannelsTempMergeBuffer;

        [FieldOffset(8912)] // size = 8
        public ImGuiTabBar* CurrentTabBar;

        [FieldOffset(8920)] // size = 40
        public ImPoolImGuiTabBar TabBars;

        [FieldOffset(8960)] // size = 16
        public ImVectorImGuiPtrOrIndex CurrentTabBarStack;

        [FieldOffset(8976)] // size = 16
        public ImVectorImGuiShrinkWidthItem ShrinkWidthBuffer;

        [FieldOffset(8992)] // size = 4
        public ImGuiID HoverItemDelayId;

        [FieldOffset(8996)] // size = 4
        public ImGuiID HoverItemDelayIdPreviousFrame;

        [FieldOffset(9000)] // size = 4
        public float HoverItemDelayTimer;

        [FieldOffset(9004)] // size = 4
        public float HoverItemDelayClearTimer;

        [FieldOffset(9008)] // size = 4
        public ImGuiID HoverItemUnlockedStationaryId;

        [FieldOffset(9012)] // size = 4
        public ImGuiID HoverWindowUnlockedStationaryId;

        [FieldOffset(9016)] // size = 4
        public ImGuiMouseCursor MouseCursor;

        [FieldOffset(9020)] // size = 4
        public float MouseStationaryTimer;

        [FieldOffset(9024)] // size = 8
        public Vector2 MouseLastValidPos;

        [FieldOffset(9032)] // size = 3728
        public ImGuiInputTextState InputTextState;

        [FieldOffset(12760)] // size = 24
        public ImGuiInputTextDeactivatedState InputTextDeactivatedState;

        [FieldOffset(12784)] // size = 120
        public ImFont InputTextPasswordFont;

        [FieldOffset(12904)] // size = 4
        public ImGuiID TempInputId;

        [FieldOffset(12908)] // size = 4
        public ImGuiColorEditFlags ColorEditOptions;

        [FieldOffset(12912)] // size = 4
        public ImGuiID ColorEditCurrentID;

        [FieldOffset(12916)] // size = 4
        public ImGuiID ColorEditSavedID;

        [FieldOffset(12920)] // size = 4
        public float ColorEditSavedHue;

        [FieldOffset(12924)] // size = 4
        public float ColorEditSavedSat;

        [FieldOffset(12928)] // size = 4
        public uint ColorEditSavedColor;

        [FieldOffset(12932)] // size = 16
        public Vector4 ColorPickerRef;

        [FieldOffset(12948)] // size = 48
        public ImGuiComboPreviewData ComboPreviewData;

        [FieldOffset(12996)] // size = 16
        public ImRect WindowResizeBorderExpectedRect;

        [FieldOffset(13012)] // size = 1
        public CBool WindowResizeRelativeMode;

        [FieldOffset(13016)] // size = 4
        public float SliderGrabClickOffset;

        [FieldOffset(13020)] // size = 4
        public float SliderCurrentAccum;

        [FieldOffset(13024)] // size = 1
        public CBool SliderCurrentAccumDirty;

        [FieldOffset(13025)] // size = 1
        public CBool DragCurrentAccumDirty;

        [FieldOffset(13028)] // size = 4
        public float DragCurrentAccum;

        [FieldOffset(13032)] // size = 4
        public float DragSpeedDefaultRatio;

        [FieldOffset(13036)] // size = 4
        public float ScrollbarClickDeltaToGrabCenter;

        [FieldOffset(13040)] // size = 4
        public float DisabledAlphaBackup;

        [FieldOffset(13044)] // size = 2
        public short DisabledStackSize;

        [FieldOffset(13046)] // size = 2
        public short LockMarkEdited;

        [FieldOffset(13048)] // size = 2
        public short TooltipOverrideCount;

        [FieldOffset(13056)] // size = 16
        public ImVectorChar ClipboardHandlerData;

        [FieldOffset(13072)] // size = 16
        public ImVectorImGuiID MenusIdSubmittedThisFrame;

        [FieldOffset(13088)] // size = 104
        public ImGuiTypingSelectState TypingSelectState;

        [FieldOffset(13192)] // size = 16
        public ImGuiPlatformImeData PlatformImeData;

        [FieldOffset(13208)] // size = 16
        public ImGuiPlatformImeData PlatformImeDataPrev;

        [FieldOffset(13224)] // size = 4
        public ImGuiID PlatformImeViewport;

        [FieldOffset(13232)] // size = 56
        public ImGuiDockContext DockContext;

        [FieldOffset(13288)] // size = 8
        public FnPtr_ImGuiContextPtr_ImGuiDockNodePtr_ImGuiTabBarPtr_Void DockNodeWindowMenuHandler;

        [FieldOffset(13296)] // size = 1
        public CBool SettingsLoaded;

        [FieldOffset(13300)] // size = 4
        public float SettingsDirtyTimer;

        [FieldOffset(13304)] // size = 16
        public ImGuiTextBuffer SettingsIniData;

        [FieldOffset(13320)] // size = 16
        public ImVectorImGuiSettingsHandler SettingsHandlers;

        [FieldOffset(13336)] // size = 16
        public ImChunkStreamImGuiWindowSettings SettingsWindows;

        [FieldOffset(13352)] // size = 16
        public ImChunkStreamImGuiTableSettings SettingsTables;

        [FieldOffset(13368)] // size = 16
        public ImVectorImGuiContextHook Hooks;

        [FieldOffset(13384)] // size = 4
        public ImGuiID HookIdNext;

        [FieldOffset(13392)] // size = 88
        public fixed byte _LocalizationTable[88]; // const char*[11]

        public readonly Span<CString> LocalizationTable
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_LocalizationTable[0];
                    var span = new Span<CString>(pointer, 11);
                    return span;
                }
            }
        }

        [FieldOffset(13480)] // size = 1
        public CBool LogEnabled;

        [FieldOffset(13484)] // size = 4
        public ImGuiLogType LogType;

        [FieldOffset(13488)] // size = 8
        public ImFileHandle LogFile;

        [FieldOffset(13496)] // size = 16
        public ImGuiTextBuffer LogBuffer;

        [FieldOffset(13512)] // size = 8
        public CString _LogNextPrefix;

        public string LogNextPrefix
        {
            get
            {
                return CString.ToString(_LogNextPrefix);
            }
            set
            {
                _LogNextPrefix = CString.FromString(value);
            }
        }

        [FieldOffset(13520)] // size = 8
        public CString _LogNextSuffix;

        public string LogNextSuffix
        {
            get
            {
                return CString.ToString(_LogNextSuffix);
            }
            set
            {
                _LogNextSuffix = CString.FromString(value);
            }
        }

        [FieldOffset(13528)] // size = 4
        public float LogLinePosY;

        [FieldOffset(13532)] // size = 1
        public CBool LogLineFirstItem;

        [FieldOffset(13536)] // size = 4
        public int LogDepthRef;

        [FieldOffset(13540)] // size = 4
        public int LogDepthToExpand;

        [FieldOffset(13544)] // size = 4
        public int LogDepthToExpandDefault;

        [FieldOffset(13548)] // size = 4
        public ImGuiDebugLogFlags DebugLogFlags;

        [FieldOffset(13552)] // size = 16
        public ImGuiTextBuffer DebugLogBuf;

        [FieldOffset(13568)] // size = 24
        public ImGuiTextIndex DebugLogIndex;

        [FieldOffset(13592)] // size = 4
        public ImGuiDebugLogFlags DebugLogAutoDisableFlags;

        [FieldOffset(13596)] // size = 1
        public byte DebugLogAutoDisableFrames;

        [FieldOffset(13597)] // size = 1
        public byte DebugLocateFrames;

        [FieldOffset(13598)] // size = 1
        public CBool DebugBreakInLocateId;

        [FieldOffset(13600)] // size = 4
        public ImGuiKeyChord DebugBreakKeyChord;

        [FieldOffset(13604)] // size = 1
        public sbyte DebugBeginReturnValueCullDepth;

        [FieldOffset(13605)] // size = 1
        public CBool DebugItemPickerActive;

        [FieldOffset(13606)] // size = 1
        public byte DebugItemPickerMouseButton;

        [FieldOffset(13608)] // size = 4
        public ImGuiID DebugItemPickerBreakId;

        [FieldOffset(13612)] // size = 4
        public float DebugFlashStyleColorTime;

        [FieldOffset(13616)] // size = 16
        public Vector4 DebugFlashStyleColorBackup;

        [FieldOffset(13632)] // size = 20
        public ImGuiMetricsConfig DebugMetricsConfig;

        [FieldOffset(13656)] // size = 40
        public ImGuiIDStackTool DebugIDStackTool;

        [FieldOffset(13696)] // size = 60
        public ImGuiDebugAllocInfo DebugAllocInfo;

        [FieldOffset(13760)] // size = 8
        public ImGuiDockNode* DebugHoveredDockNode;

        [FieldOffset(13768)] // size = 240
        public fixed byte _FramerateSecPerFrame[240]; // float[60]

        public readonly Span<float> FramerateSecPerFrame
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_FramerateSecPerFrame[0];
                    var span = new Span<float>(pointer, 60);
                    return span;
                }
            }
        }

        [FieldOffset(14008)] // size = 4
        public int FramerateSecPerFrameIdx;

        [FieldOffset(14012)] // size = 4
        public int FramerateSecPerFrameCount;

        [FieldOffset(14016)] // size = 4
        public float FramerateSecPerFrameAccum;

        [FieldOffset(14020)] // size = 4
        public int WantCaptureMouseNextFrame;

        [FieldOffset(14024)] // size = 4
        public int WantCaptureKeyboardNextFrame;

        [FieldOffset(14028)] // size = 4
        public int WantTextInputNextFrame;

        [FieldOffset(14032)] // size = 16
        public ImVectorChar TempBuffer;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImGuiContextHook
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID HookId;

        [FieldOffset(4)] // size = 4
        public ImGuiContextHookType Type;

        [FieldOffset(8)] // size = 4
        public ImGuiID Owner;

        [FieldOffset(16)] // size = 8
        public ImGuiContextHookCallback Callback;

        [FieldOffset(24)] // size = 8
        public void* UserData;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
    public struct ImGuiDataTypeInfo
    {

    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 1)]
    public struct ImGuiDataTypeTempStorage
    {
        [FieldOffset(0)] // size = 8
        public fixed byte _Data[8]; // ImU8[8]

        public readonly Span<byte> Data
        {
            get
            {
                fixed (ImGuiDataTypeTempStorage* @this = &this)
                {
                    var pointer = &@this->_Data[0];
                    var span = new Span<byte>(pointer, 8);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiDataVarInfo
    {
        [FieldOffset(0)] // size = 4
        public ImGuiDataType Type;

        [FieldOffset(4)] // size = 4
        public uint Count;

        [FieldOffset(8)] // size = 4
        public uint Offset;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ImGuiDebugAllocEntry
    {
        [FieldOffset(0)] // size = 4
        public int FrameCount;

        [FieldOffset(4)] // size = 2
        public short AllocCount;

        [FieldOffset(6)] // size = 2
        public short FreeCount;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 60, Pack = 4)]
    public struct ImGuiDebugAllocInfo
    {
        [FieldOffset(0)] // size = 4
        public int TotalAllocCount;

        [FieldOffset(4)] // size = 4
        public int TotalFreeCount;

        [FieldOffset(8)] // size = 2
        public short LastEntriesIdx;

        [FieldOffset(12)] // size = 48
        public fixed byte _LastEntriesBuf[48]; // ImGuiDebugAllocEntry[6]

        public readonly Span<ImGuiDebugAllocEntry> LastEntriesBuf
        {
            get
            {
                fixed (ImGuiDebugAllocInfo* @this = &this)
                {
                    var pointer = &@this->_LastEntriesBuf[0];
                    var span = new Span<ImGuiDebugAllocEntry>(pointer, 6);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
    public struct ImGuiDockContext
    {
        [FieldOffset(0)] // size = 16
        public ImGuiStorage Nodes;

        [FieldOffset(16)] // size = 16
        public ImVectorImGuiDockRequest Requests;

        [FieldOffset(32)] // size = 16
        public ImVectorImGuiDockNodeSettings NodesSettings;

        [FieldOffset(48)] // size = 1
        public CBool WantFullRebuild;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 4)]
    public struct ImGuiGroupData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID WindowID;

        [FieldOffset(4)] // size = 8
        public Vector2 BackupCursorPos;

        [FieldOffset(12)] // size = 8
        public Vector2 BackupCursorMaxPos;

        [FieldOffset(20)] // size = 8
        public Vector2 BackupCursorPosPrevLine;

        [FieldOffset(28)] // size = 4
        public float BackupIndent;

        [FieldOffset(32)] // size = 4
        public float BackupGroupOffset;

        [FieldOffset(36)] // size = 8
        public Vector2 BackupCurrLineSize;

        [FieldOffset(44)] // size = 4
        public float BackupCurrLineTextBaseOffset;

        [FieldOffset(48)] // size = 4
        public ImGuiID BackupActiveIdIsAlive;

        [FieldOffset(52)] // size = 1
        public CBool BackupActiveIdPreviousFrameIsAlive;

        [FieldOffset(53)] // size = 1
        public CBool BackupHoveredIdIsAlive;

        [FieldOffset(54)] // size = 1
        public CBool BackupIsSameLine;

        [FieldOffset(55)] // size = 1
        public CBool EmitItem;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct ImGuiIDStackTool
    {
        [FieldOffset(0)] // size = 4
        public int LastActiveFrame;

        [FieldOffset(4)] // size = 4
        public int StackLevel;

        [FieldOffset(8)] // size = 4
        public ImGuiID QueryId;

        [FieldOffset(16)] // size = 16
        public ImVectorImGuiStackLevelInfo Results;

        [FieldOffset(32)] // size = 1
        public CBool CopyToClipboardOnCtrlC;

        [FieldOffset(36)] // size = 4
        public float CopyToClipboardLastTime;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 3032, Pack = 8)]
    public struct ImGuiIO
    {
        [FieldOffset(0)] // size = 4
        public ImGuiConfigFlags ConfigFlags;

        [FieldOffset(4)] // size = 4
        public ImGuiBackendFlags BackendFlags;

        [FieldOffset(8)] // size = 8
        public Vector2 DisplaySize;

        [FieldOffset(16)] // size = 4
        public float DeltaTime;

        [FieldOffset(20)] // size = 4
        public float IniSavingRate;

        [FieldOffset(24)] // size = 8
        public CString _IniFilename;

        public string IniFilename
        {
            get
            {
                return CString.ToString(_IniFilename);
            }
            set
            {
                _IniFilename = CString.FromString(value);
            }
        }

        [FieldOffset(32)] // size = 8
        public CString _LogFilename;

        public string LogFilename
        {
            get
            {
                return CString.ToString(_LogFilename);
            }
            set
            {
                _LogFilename = CString.FromString(value);
            }
        }

        [FieldOffset(40)] // size = 8
        public void* UserData;

        [FieldOffset(48)] // size = 8
        public ImFontAtlas* Fonts;

        [FieldOffset(56)] // size = 4
        public float FontGlobalScale;

        [FieldOffset(60)] // size = 1
        public CBool FontAllowUserScaling;

        [FieldOffset(64)] // size = 8
        public ImFont* FontDefault;

        [FieldOffset(72)] // size = 8
        public Vector2 DisplayFramebufferScale;

        [FieldOffset(80)] // size = 1
        public CBool ConfigDockingNoSplit;

        [FieldOffset(81)] // size = 1
        public CBool ConfigDockingWithShift;

        [FieldOffset(82)] // size = 1
        public CBool ConfigDockingAlwaysTabBar;

        [FieldOffset(83)] // size = 1
        public CBool ConfigDockingTransparentPayload;

        [FieldOffset(84)] // size = 1
        public CBool ConfigViewportsNoAutoMerge;

        [FieldOffset(85)] // size = 1
        public CBool ConfigViewportsNoTaskBarIcon;

        [FieldOffset(86)] // size = 1
        public CBool ConfigViewportsNoDecoration;

        [FieldOffset(87)] // size = 1
        public CBool ConfigViewportsNoDefaultParent;

        [FieldOffset(88)] // size = 1
        public CBool MouseDrawCursor;

        [FieldOffset(89)] // size = 1
        public CBool ConfigMacOSXBehaviors;

        [FieldOffset(90)] // size = 1
        public CBool ConfigInputTrickleEventQueue;

        [FieldOffset(91)] // size = 1
        public CBool ConfigInputTextCursorBlink;

        [FieldOffset(92)] // size = 1
        public CBool ConfigInputTextEnterKeepActive;

        [FieldOffset(93)] // size = 1
        public CBool ConfigDragClickToInputText;

        [FieldOffset(94)] // size = 1
        public CBool ConfigWindowsResizeFromEdges;

        [FieldOffset(95)] // size = 1
        public CBool ConfigWindowsMoveFromTitleBarOnly;

        [FieldOffset(96)] // size = 4
        public float ConfigMemoryCompactTimer;

        [FieldOffset(100)] // size = 4
        public float MouseDoubleClickTime;

        [FieldOffset(104)] // size = 4
        public float MouseDoubleClickMaxDist;

        [FieldOffset(108)] // size = 4
        public float MouseDragThreshold;

        [FieldOffset(112)] // size = 4
        public float KeyRepeatDelay;

        [FieldOffset(116)] // size = 4
        public float KeyRepeatRate;

        [FieldOffset(120)] // size = 1
        public CBool ConfigDebugIsDebuggerPresent;

        [FieldOffset(121)] // size = 1
        public CBool ConfigDebugBeginReturnValueOnce;

        [FieldOffset(122)] // size = 1
        public CBool ConfigDebugBeginReturnValueLoop;

        [FieldOffset(123)] // size = 1
        public CBool ConfigDebugIgnoreFocusLoss;

        [FieldOffset(124)] // size = 1
        public CBool ConfigDebugIniSettings;

        [FieldOffset(128)] // size = 8
        public CString _BackendPlatformName;

        public string BackendPlatformName
        {
            get
            {
                return CString.ToString(_BackendPlatformName);
            }
            set
            {
                _BackendPlatformName = CString.FromString(value);
            }
        }

        [FieldOffset(136)] // size = 8
        public CString _BackendRendererName;

        public string BackendRendererName
        {
            get
            {
                return CString.ToString(_BackendRendererName);
            }
            set
            {
                _BackendRendererName = CString.FromString(value);
            }
        }

        [FieldOffset(144)] // size = 8
        public void* BackendPlatformUserData;

        [FieldOffset(152)] // size = 8
        public void* BackendRendererUserData;

        [FieldOffset(160)] // size = 8
        public void* BackendLanguageUserData;

        [FieldOffset(168)] // size = 8
        public FnPtr_VoidPtr_CString GetClipboardTextFn;

        [FieldOffset(176)] // size = 8
        public FnPtr_VoidPtr_CString_Void SetClipboardTextFn;

        [FieldOffset(184)] // size = 8
        public void* ClipboardUserData;

        [FieldOffset(192)] // size = 8
        public FnPtr_ImGuiViewportPtr_ImGuiPlatformImeDataPtr_Void SetPlatformImeDataFn;

        [FieldOffset(200)] // size = 2
        public ushort PlatformLocaleDecimalPoint;

        [FieldOffset(202)] // size = 1
        public CBool WantCaptureMouse;

        [FieldOffset(203)] // size = 1
        public CBool WantCaptureKeyboard;

        [FieldOffset(204)] // size = 1
        public CBool WantTextInput;

        [FieldOffset(205)] // size = 1
        public CBool WantSetMousePos;

        [FieldOffset(206)] // size = 1
        public CBool WantSaveIniSettings;

        [FieldOffset(207)] // size = 1
        public CBool NavActive;

        [FieldOffset(208)] // size = 1
        public CBool NavVisible;

        [FieldOffset(212)] // size = 4
        public float Framerate;

        [FieldOffset(216)] // size = 4
        public int MetricsRenderVertices;

        [FieldOffset(220)] // size = 4
        public int MetricsRenderIndices;

        [FieldOffset(224)] // size = 4
        public int MetricsRenderWindows;

        [FieldOffset(228)] // size = 4
        public int MetricsActiveWindows;

        [FieldOffset(232)] // size = 8
        public Vector2 MouseDelta;

        [FieldOffset(240)] // size = 8
        public void* UnusedPadding;

        [FieldOffset(248)] // size = 8
        public ImGuiContext* Ctx;

        [FieldOffset(256)] // size = 8
        public Vector2 MousePos;

        [FieldOffset(264)] // size = 5
        public fixed byte _MouseDown[5]; // _Bool[5]

        public readonly Span<CBool> MouseDown
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDown[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(272)] // size = 4
        public float MouseWheel;

        [FieldOffset(276)] // size = 4
        public float MouseWheelH;

        [FieldOffset(280)] // size = 4
        public ImGuiMouseSource MouseSource;

        [FieldOffset(284)] // size = 4
        public ImGuiID MouseHoveredViewport;

        [FieldOffset(288)] // size = 1
        public CBool KeyCtrl;

        [FieldOffset(289)] // size = 1
        public CBool KeyShift;

        [FieldOffset(290)] // size = 1
        public CBool KeyAlt;

        [FieldOffset(291)] // size = 1
        public CBool KeySuper;

        [FieldOffset(292)] // size = 4
        public ImGuiKeyChord KeyMods;

        [FieldOffset(296)] // size = 2464
        public fixed byte _KeysData[2464]; // ImGuiKeyData[154]

        public readonly Span<ImGuiKeyData> KeysData
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_KeysData[0];
                    var span = new Span<ImGuiKeyData>(pointer, 154);
                    return span;
                }
            }
        }

        [FieldOffset(2760)] // size = 1
        public CBool WantCaptureMouseUnlessPopupClose;

        [FieldOffset(2764)] // size = 8
        public Vector2 MousePosPrev;

        [FieldOffset(2772)] // size = 40
        public fixed byte _MouseClickedPos[40]; // ImVec2[5]

        public readonly Span<Vector2> MouseClickedPos
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClickedPos[0];
                    var span = new Span<Vector2>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2816)] // size = 40
        public fixed byte _MouseClickedTime[40]; // double[5]

        public readonly Span<Double> MouseClickedTime
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClickedTime[0];
                    var span = new Span<Double>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2856)] // size = 5
        public fixed byte _MouseClicked[5]; // _Bool[5]

        public readonly Span<CBool> MouseClicked
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClicked[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2861)] // size = 5
        public fixed byte _MouseDoubleClicked[5]; // _Bool[5]

        public readonly Span<CBool> MouseDoubleClicked
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDoubleClicked[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2866)] // size = 10
        public fixed byte _MouseClickedCount[10]; // ImU16[5]

        public readonly Span<ushort> MouseClickedCount
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClickedCount[0];
                    var span = new Span<ushort>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2876)] // size = 10
        public fixed byte _MouseClickedLastCount[10]; // ImU16[5]

        public readonly Span<ushort> MouseClickedLastCount
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClickedLastCount[0];
                    var span = new Span<ushort>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2886)] // size = 5
        public fixed byte _MouseReleased[5]; // _Bool[5]

        public readonly Span<CBool> MouseReleased
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseReleased[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2891)] // size = 5
        public fixed byte _MouseDownOwned[5]; // _Bool[5]

        public readonly Span<CBool> MouseDownOwned
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownOwned[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2896)] // size = 5
        public fixed byte _MouseDownOwnedUnlessPopupClose[5]; // _Bool[5]

        public readonly Span<CBool> MouseDownOwnedUnlessPopupClose
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownOwnedUnlessPopupClose[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2901)] // size = 1
        public CBool MouseWheelRequestAxisSwap;

        [FieldOffset(2904)] // size = 20
        public fixed byte _MouseDownDuration[20]; // float[5]

        public readonly Span<float> MouseDownDuration
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownDuration[0];
                    var span = new Span<float>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2924)] // size = 20
        public fixed byte _MouseDownDurationPrev[20]; // float[5]

        public readonly Span<float> MouseDownDurationPrev
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownDurationPrev[0];
                    var span = new Span<float>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2944)] // size = 40
        public fixed byte _MouseDragMaxDistanceAbs[40]; // ImVec2[5]

        public readonly Span<Vector2> MouseDragMaxDistanceAbs
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDragMaxDistanceAbs[0];
                    var span = new Span<Vector2>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(2984)] // size = 20
        public fixed byte _MouseDragMaxDistanceSqr[20]; // float[5]

        public readonly Span<float> MouseDragMaxDistanceSqr
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDragMaxDistanceSqr[0];
                    var span = new Span<float>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(3004)] // size = 4
        public float PenPressure;

        [FieldOffset(3008)] // size = 1
        public CBool AppFocusLost;

        [FieldOffset(3009)] // size = 1
        public CBool AppAcceptingEvents;

        [FieldOffset(3010)] // size = 1
        public sbyte BackendUsingLegacyKeyArrays;

        [FieldOffset(3011)] // size = 1
        public CBool BackendUsingLegacyNavInputArray;

        [FieldOffset(3012)] // size = 2
        public ushort InputQueueSurrogate;

        [FieldOffset(3016)] // size = 16
        public ImVectorImWchar InputQueueCharacters;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 28, Pack = 4)]
    public struct ImGuiInputEvent
    {
        [FieldOffset(0)] // size = 4
        public ImGuiInputEventType Type;

        [FieldOffset(4)] // size = 4
        public ImGuiInputSource Source;

        [FieldOffset(8)] // size = 4
        public uint EventId;

        [FieldOffset(0)] // size = 12
        public ImGuiInputEventMousePos MousePos;

        [FieldOffset(0)] // size = 12
        public ImGuiInputEventMouseWheel MouseWheel;

        [FieldOffset(0)] // size = 12
        public ImGuiInputEventMouseButton MouseButton;

        [FieldOffset(0)] // size = 4
        public ImGuiInputEventMouseViewport MouseViewport;

        [FieldOffset(0)] // size = 12
        public ImGuiInputEventKey Key;

        [FieldOffset(0)] // size = 4
        public ImGuiInputEventText Text;

        [FieldOffset(0)] // size = 1
        public ImGuiInputEventAppFocused AppFocused;

        [FieldOffset(24)] // size = 1
        public CBool AddedByTestEngine;
    }

    [CNode(Kind = "Union")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiInputEventANONYMOUSFIELD3
    {
        [FieldOffset(0)] // size = 12
        public ImGuiInputEventMousePos MousePos;

        [FieldOffset(0)] // size = 12
        public ImGuiInputEventMouseWheel MouseWheel;

        [FieldOffset(0)] // size = 12
        public ImGuiInputEventMouseButton MouseButton;

        [FieldOffset(0)] // size = 4
        public ImGuiInputEventMouseViewport MouseViewport;

        [FieldOffset(0)] // size = 12
        public ImGuiInputEventKey Key;

        [FieldOffset(0)] // size = 4
        public ImGuiInputEventText Text;

        [FieldOffset(0)] // size = 1
        public ImGuiInputEventAppFocused AppFocused;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
    public struct ImGuiInputEventAppFocused
    {
        [FieldOffset(0)] // size = 1
        public CBool Focused;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiInputEventKey
    {
        [FieldOffset(0)] // size = 4
        public ImGuiKey Key;

        [FieldOffset(4)] // size = 1
        public CBool Down;

        [FieldOffset(8)] // size = 4
        public float AnalogValue;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiInputEventMouseButton
    {
        [FieldOffset(0)] // size = 4
        public int Button;

        [FieldOffset(4)] // size = 1
        public CBool Down;

        [FieldOffset(8)] // size = 4
        public ImGuiMouseSource MouseSource;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiInputEventMousePos
    {
        [FieldOffset(0)] // size = 4
        public float PosX;

        [FieldOffset(4)] // size = 4
        public float PosY;

        [FieldOffset(8)] // size = 4
        public ImGuiMouseSource MouseSource;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiInputEventMouseViewport
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID HoveredViewportID;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiInputEventMouseWheel
    {
        [FieldOffset(0)] // size = 4
        public float WheelX;

        [FieldOffset(4)] // size = 4
        public float WheelY;

        [FieldOffset(8)] // size = 4
        public ImGuiMouseSource MouseSource;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiInputEventText
    {
        [FieldOffset(0)] // size = 4
        public uint Char;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
    public struct ImGuiInputTextCallbackData
    {
        [FieldOffset(0)] // size = 8
        public ImGuiContext* Ctx;

        [FieldOffset(8)] // size = 4
        public ImGuiInputTextFlags EventFlag;

        [FieldOffset(12)] // size = 4
        public ImGuiInputTextFlags Flags;

        [FieldOffset(16)] // size = 8
        public void* UserData;

        [FieldOffset(24)] // size = 2
        public ushort EventChar;

        [FieldOffset(28)] // size = 4
        public ImGuiKey EventKey;

        [FieldOffset(32)] // size = 8
        public CString _Buf;

        public string Buf
        {
            get
            {
                return CString.ToString(_Buf);
            }
            set
            {
                _Buf = CString.FromString(value);
            }
        }

        [FieldOffset(40)] // size = 4
        public int BufTextLen;

        [FieldOffset(44)] // size = 4
        public int BufSize;

        [FieldOffset(48)] // size = 1
        public CBool BufDirty;

        [FieldOffset(52)] // size = 4
        public int CursorPos;

        [FieldOffset(56)] // size = 4
        public int SelectionStart;

        [FieldOffset(60)] // size = 4
        public int SelectionEnd;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ImGuiInputTextDeactivatedState
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(8)] // size = 16
        public ImVectorChar TextA;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 3728, Pack = 8)]
    public struct ImGuiInputTextState
    {
        [FieldOffset(0)] // size = 8
        public ImGuiContext* Ctx;

        [FieldOffset(8)] // size = 4
        public ImGuiID ID;

        [FieldOffset(12)] // size = 4
        public int CurLenW;

        [FieldOffset(16)] // size = 4
        public int CurLenA;

        [FieldOffset(24)] // size = 16
        public ImVectorImWchar TextW;

        [FieldOffset(40)] // size = 16
        public ImVectorChar TextA;

        [FieldOffset(56)] // size = 16
        public ImVectorChar InitialTextA;

        [FieldOffset(72)] // size = 1
        public CBool TextAIsValid;

        [FieldOffset(76)] // size = 4
        public int BufCapacityA;

        [FieldOffset(80)] // size = 4
        public float ScrollX;

        [FieldOffset(84)] // size = 3628
        public STBTexteditState Stb;

        [FieldOffset(3712)] // size = 4
        public float CursorAnim;

        [FieldOffset(3716)] // size = 1
        public CBool CursorFollow;

        [FieldOffset(3717)] // size = 1
        public CBool SelectedAllMouseLock;

        [FieldOffset(3718)] // size = 1
        public CBool Edited;

        [FieldOffset(3720)] // size = 4
        public ImGuiInputTextFlags Flags;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImGuiKeyData
    {
        [FieldOffset(0)] // size = 1
        public CBool Down;

        [FieldOffset(4)] // size = 4
        public float DownDuration;

        [FieldOffset(8)] // size = 4
        public float DownDurationPrev;

        [FieldOffset(12)] // size = 4
        public float AnalogValue;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiKeyOwnerData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID OwnerCurr;

        [FieldOffset(4)] // size = 4
        public ImGuiID OwnerNext;

        [FieldOffset(8)] // size = 1
        public CBool LockThisFrame;

        [FieldOffset(9)] // size = 1
        public CBool LockUntilRelease;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImGuiKeyRoutingData
    {
        [FieldOffset(0)] // size = 2
        public ImGuiKeyRoutingIndex NextEntryIndex;

        [FieldOffset(2)] // size = 2
        public ushort Mods;

        [FieldOffset(4)] // size = 1
        public byte RoutingNextScore;

        [FieldOffset(8)] // size = 4
        public ImGuiID RoutingCurr;

        [FieldOffset(12)] // size = 4
        public ImGuiID RoutingNext;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 344, Pack = 8)]
    public struct ImGuiKeyRoutingTable
    {
        [FieldOffset(0)] // size = 308
        public fixed byte _Index[308]; // ImGuiKeyRoutingIndex[154]

        public readonly Span<ImGuiKeyRoutingIndex> Index
        {
            get
            {
                fixed (ImGuiKeyRoutingTable* @this = &this)
                {
                    var pointer = &@this->_Index[0];
                    var span = new Span<ImGuiKeyRoutingIndex>(pointer, 154);
                    return span;
                }
            }
        }

        [FieldOffset(312)] // size = 16
        public ImVectorImGuiKeyRoutingData Entries;

        [FieldOffset(328)] // size = 16
        public ImVectorImGuiKeyRoutingData EntriesNext;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 76, Pack = 4)]
    public struct ImGuiLastItemData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImGuiItemFlags InFlags;

        [FieldOffset(8)] // size = 4
        public ImGuiItemStatusFlags StatusFlags;

        [FieldOffset(12)] // size = 16
        public ImRect Rect;

        [FieldOffset(28)] // size = 16
        public ImRect NavRect;

        [FieldOffset(44)] // size = 16
        public ImRect DisplayRect;

        [FieldOffset(60)] // size = 16
        public ImRect ClipRect;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct ImGuiListClipper
    {
        [FieldOffset(0)] // size = 8
        public ImGuiContext* Ctx;

        [FieldOffset(8)] // size = 4
        public int DisplayStart;

        [FieldOffset(12)] // size = 4
        public int DisplayEnd;

        [FieldOffset(16)] // size = 4
        public int ItemsCount;

        [FieldOffset(20)] // size = 4
        public float ItemsHeight;

        [FieldOffset(24)] // size = 4
        public float StartPosY;

        [FieldOffset(32)] // size = 8
        public void* TempData;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct ImGuiListClipperData
    {
        [FieldOffset(0)] // size = 8
        public ImGuiListClipper* ListClipper;

        [FieldOffset(8)] // size = 4
        public float LossynessOffset;

        [FieldOffset(12)] // size = 4
        public int StepNo;

        [FieldOffset(16)] // size = 4
        public int ItemsFrozen;

        [FieldOffset(24)] // size = 16
        public ImVectorImGuiListClipperRange Ranges;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiListClipperRange
    {
        [FieldOffset(0)] // size = 4
        public int Min;

        [FieldOffset(4)] // size = 4
        public int Max;

        [FieldOffset(8)] // size = 1
        public CBool PosToIndexConvert;

        [FieldOffset(9)] // size = 1
        public sbyte PosToIndexOffsetMin;

        [FieldOffset(10)] // size = 1
        public sbyte PosToIndexOffsetMax;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiLocEntry
    {
        [FieldOffset(0)] // size = 4
        public ImGuiLocKey Key;

        [FieldOffset(8)] // size = 8
        public CString _Text;

        public string Text
        {
            get
            {
                return CString.ToString(_Text);
            }
            set
            {
                _Text = CString.FromString(value);
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 28, Pack = 4)]
    public struct ImGuiMenuColumns
    {
        [FieldOffset(0)] // size = 4
        public uint TotalWidth;

        [FieldOffset(4)] // size = 4
        public uint NextTotalWidth;

        [FieldOffset(8)] // size = 2
        public ushort Spacing;

        [FieldOffset(10)] // size = 2
        public ushort OffsetIcon;

        [FieldOffset(12)] // size = 2
        public ushort OffsetLabel;

        [FieldOffset(14)] // size = 2
        public ushort OffsetShortcut;

        [FieldOffset(16)] // size = 2
        public ushort OffsetMark;

        [FieldOffset(18)] // size = 8
        public fixed byte _Widths[8]; // ImU16[4]

        public readonly Span<ushort> Widths
        {
            get
            {
                fixed (ImGuiMenuColumns* @this = &this)
                {
                    var pointer = &@this->_Widths[0];
                    var span = new Span<ushort>(pointer, 4);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImGuiMetricsConfig
    {
        [FieldOffset(0)] // size = 1
        public CBool ShowDebugLog;

        [FieldOffset(1)] // size = 1
        public CBool ShowIDStackTool;

        [FieldOffset(2)] // size = 1
        public CBool ShowWindowsRects;

        [FieldOffset(3)] // size = 1
        public CBool ShowWindowsBeginOrder;

        [FieldOffset(4)] // size = 1
        public CBool ShowTablesRects;

        [FieldOffset(5)] // size = 1
        public CBool ShowDrawCmdMesh;

        [FieldOffset(6)] // size = 1
        public CBool ShowDrawCmdBoundingBoxes;

        [FieldOffset(7)] // size = 1
        public CBool ShowTextEncodingViewer;

        [FieldOffset(8)] // size = 1
        public CBool ShowAtlasTintedWithTextColor;

        [FieldOffset(9)] // size = 1
        public CBool ShowDockingNodes;

        [FieldOffset(12)] // size = 4
        public int ShowWindowsRectsType;

        [FieldOffset(16)] // size = 4
        public int ShowTablesRectsType;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
    public struct ImGuiNavItemData
    {
        [FieldOffset(0)] // size = 8
        public ImGuiWindow* Window;

        [FieldOffset(8)] // size = 4
        public ImGuiID ID;

        [FieldOffset(12)] // size = 4
        public ImGuiID FocusScopeId;

        [FieldOffset(16)] // size = 16
        public ImRect RectRel;

        [FieldOffset(32)] // size = 4
        public ImGuiItemFlags InFlags;

        [FieldOffset(40)] // size = 8
        public ImGuiSelectionUserData SelectionUserData;

        [FieldOffset(48)] // size = 4
        public float DistBox;

        [FieldOffset(52)] // size = 4
        public float DistCenter;

        [FieldOffset(56)] // size = 4
        public float DistAxial;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 4)]
    public struct ImGuiNavTreeNodeData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImGuiItemFlags InFlags;

        [FieldOffset(8)] // size = 16
        public ImRect NavRect;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImGuiNextItemData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiNextItemDataFlags Flags;

        [FieldOffset(4)] // size = 4
        public ImGuiItemFlags ItemFlags;

        [FieldOffset(8)] // size = 4
        public float Width;

        [FieldOffset(16)] // size = 8
        public ImGuiSelectionUserData SelectionUserData;

        [FieldOffset(24)] // size = 4
        public ImGuiCond OpenCond;

        [FieldOffset(28)] // size = 1
        public CBool OpenVal;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 152, Pack = 8)]
    public struct ImGuiNextWindowData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiNextWindowDataFlags Flags;

        [FieldOffset(4)] // size = 4
        public ImGuiCond PosCond;

        [FieldOffset(8)] // size = 4
        public ImGuiCond SizeCond;

        [FieldOffset(12)] // size = 4
        public ImGuiCond CollapsedCond;

        [FieldOffset(16)] // size = 4
        public ImGuiCond DockCond;

        [FieldOffset(20)] // size = 8
        public Vector2 PosVal;

        [FieldOffset(28)] // size = 8
        public Vector2 PosPivotVal;

        [FieldOffset(36)] // size = 8
        public Vector2 SizeVal;

        [FieldOffset(44)] // size = 8
        public Vector2 ContentSizeVal;

        [FieldOffset(52)] // size = 8
        public Vector2 ScrollVal;

        [FieldOffset(60)] // size = 4
        public ImGuiChildFlags ChildFlags;

        [FieldOffset(64)] // size = 1
        public CBool PosUndock;

        [FieldOffset(65)] // size = 1
        public CBool CollapsedVal;

        [FieldOffset(68)] // size = 16
        public ImRect SizeConstraintRect;

        [FieldOffset(88)] // size = 8
        public ImGuiSizeCallback SizeCallback;

        [FieldOffset(96)] // size = 8
        public void* SizeCallbackUserData;

        [FieldOffset(104)] // size = 4
        public float BgAlphaVal;

        [FieldOffset(108)] // size = 4
        public ImGuiID ViewportId;

        [FieldOffset(112)] // size = 4
        public ImGuiID DockId;

        [FieldOffset(116)] // size = 28
        public ImGuiWindowClass WindowClass;

        [FieldOffset(144)] // size = 8
        public Vector2 MenuBarOffsetMinVal;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 28, Pack = 4)]
    public struct ImGuiOldColumnData
    {
        [FieldOffset(0)] // size = 4
        public float OffsetNorm;

        [FieldOffset(4)] // size = 4
        public float OffsetNormBeforeResize;

        [FieldOffset(8)] // size = 4
        public ImGuiOldColumnFlags Flags;

        [FieldOffset(12)] // size = 16
        public ImRect ClipRect;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 136, Pack = 8)]
    public struct ImGuiOldColumns
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImGuiOldColumnFlags Flags;

        [FieldOffset(8)] // size = 1
        public CBool IsFirstFrame;

        [FieldOffset(9)] // size = 1
        public CBool IsBeingResized;

        [FieldOffset(12)] // size = 4
        public int Current;

        [FieldOffset(16)] // size = 4
        public int Count;

        [FieldOffset(20)] // size = 4
        public float OffMinX;

        [FieldOffset(24)] // size = 4
        public float OffMaxX;

        [FieldOffset(28)] // size = 4
        public float LineMinY;

        [FieldOffset(32)] // size = 4
        public float LineMaxY;

        [FieldOffset(36)] // size = 4
        public float HostCursorPosY;

        [FieldOffset(40)] // size = 4
        public float HostCursorMaxPosX;

        [FieldOffset(44)] // size = 16
        public ImRect HostInitialClipRect;

        [FieldOffset(60)] // size = 16
        public ImRect HostBackupClipRect;

        [FieldOffset(76)] // size = 16
        public ImRect HostBackupParentWorkRect;

        [FieldOffset(96)] // size = 16
        public ImVectorImGuiOldColumnData Columns;

        [FieldOffset(112)] // size = 24
        public ImDrawListSplitter Splitter;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiOnceUponAFrame
    {
        [FieldOffset(0)] // size = 4
        public int RefFrame;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
    public struct ImGuiPayload
    {
        [FieldOffset(0)] // size = 8
        public void* Data;

        [FieldOffset(8)] // size = 4
        public int DataSize;

        [FieldOffset(12)] // size = 4
        public ImGuiID SourceId;

        [FieldOffset(16)] // size = 4
        public ImGuiID SourceParentId;

        [FieldOffset(20)] // size = 4
        public int DataFrameCount;

        [FieldOffset(24)] // size = 33
        public fixed byte _DataType[33]; // char[33]

        public string DataType
        {
            get
            {
                fixed (ImGuiPayload* @this = &this)
                {
                    var pointer = &@this->_DataType[0];
                    var cString = new CString(pointer);
                    return CString.ToString(cString);
                }
            }
        }

        [FieldOffset(57)] // size = 1
        public CBool Preview;

        [FieldOffset(58)] // size = 1
        public CBool Delivery;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 216, Pack = 8)]
    public struct ImGuiPlatformIO
    {
        [FieldOffset(0)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void PlatformCreateWindow;

        [FieldOffset(8)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void PlatformDestroyWindow;

        [FieldOffset(16)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void PlatformShowWindow;

        [FieldOffset(24)] // size = 8
        public FnPtr_ImGuiViewportPtr_Vector2_Void PlatformSetWindowPos;

        [FieldOffset(32)] // size = 8
        public FnPtr_ImGuiViewportPtr_Vector2 PlatformGetWindowPos;

        [FieldOffset(40)] // size = 8
        public FnPtr_ImGuiViewportPtr_Vector2_Void PlatformSetWindowSize;

        [FieldOffset(48)] // size = 8
        public FnPtr_ImGuiViewportPtr_Vector2 PlatformGetWindowSize;

        [FieldOffset(56)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void PlatformSetWindowFocus;

        [FieldOffset(64)] // size = 8
        public FnPtr_ImGuiViewportPtr_CBool PlatformGetWindowFocus;

        [FieldOffset(72)] // size = 8
        public FnPtr_ImGuiViewportPtr_CBool PlatformGetWindowMinimized;

        [FieldOffset(80)] // size = 8
        public FnPtr_ImGuiViewportPtr_CString_Void PlatformSetWindowTitle;

        [FieldOffset(88)] // size = 8
        public FnPtr_ImGuiViewportPtr_Float_Void PlatformSetWindowAlpha;

        [FieldOffset(96)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void PlatformUpdateWindow;

        [FieldOffset(104)] // size = 8
        public FnPtr_ImGuiViewportPtr_VoidPtr_Void PlatformRenderWindow;

        [FieldOffset(112)] // size = 8
        public FnPtr_ImGuiViewportPtr_VoidPtr_Void PlatformSwapBuffers;

        [FieldOffset(120)] // size = 8
        public FnPtr_ImGuiViewportPtr_Float PlatformGetWindowDpiScale;

        [FieldOffset(128)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void PlatformOnChangedViewport;

        [FieldOffset(136)] // size = 8
        public FnPtr_ImGuiViewportPtr_Ulong_VoidPtr_UlongPtr_Int PlatformCreateVkSurface;

        [FieldOffset(144)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void RendererCreateWindow;

        [FieldOffset(152)] // size = 8
        public FnPtr_ImGuiViewportPtr_Void RendererDestroyWindow;

        [FieldOffset(160)] // size = 8
        public FnPtr_ImGuiViewportPtr_Vector2_Void RendererSetWindowSize;

        [FieldOffset(168)] // size = 8
        public FnPtr_ImGuiViewportPtr_VoidPtr_Void RendererRenderWindow;

        [FieldOffset(176)] // size = 8
        public FnPtr_ImGuiViewportPtr_VoidPtr_Void RendererSwapBuffers;

        [FieldOffset(184)] // size = 16
        public ImVectorImGuiPlatformMonitor Monitors;

        [FieldOffset(200)] // size = 16
        public ImVectorImGuiViewportPtr Viewports;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImGuiPlatformImeData
    {
        [FieldOffset(0)] // size = 1
        public CBool WantVisible;

        [FieldOffset(4)] // size = 8
        public Vector2 InputPos;

        [FieldOffset(12)] // size = 4
        public float InputLineHeight;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
    public struct ImGuiPlatformMonitor
    {
        [FieldOffset(0)] // size = 8
        public Vector2 MainPos;

        [FieldOffset(8)] // size = 8
        public Vector2 MainSize;

        [FieldOffset(16)] // size = 8
        public Vector2 WorkPos;

        [FieldOffset(24)] // size = 8
        public Vector2 WorkSize;

        [FieldOffset(32)] // size = 4
        public float DpiScale;

        [FieldOffset(40)] // size = 8
        public void* PlatformHandle;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
    public struct ImGuiPopupData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID PopupId;

        [FieldOffset(8)] // size = 8
        public ImGuiWindow* Window;

        [FieldOffset(16)] // size = 8
        public ImGuiWindow* BackupNavWindow;

        [FieldOffset(24)] // size = 4
        public int ParentNavLayer;

        [FieldOffset(28)] // size = 4
        public int OpenFrameCount;

        [FieldOffset(32)] // size = 4
        public ImGuiID OpenParentId;

        [FieldOffset(36)] // size = 8
        public Vector2 OpenPopupPos;

        [FieldOffset(44)] // size = 8
        public Vector2 OpenMousePos;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiPtrOrIndex
    {
        [FieldOffset(0)] // size = 8
        public void* Ptr;

        [FieldOffset(8)] // size = 4
        public int Index;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
    public struct ImGuiSettingsHandler
    {
        [FieldOffset(0)] // size = 8
        public CString _TypeName;

        public string TypeName
        {
            get
            {
                return CString.ToString(_TypeName);
            }
            set
            {
                _TypeName = CString.FromString(value);
            }
        }

        [FieldOffset(8)] // size = 4
        public ImGuiID TypeHash;

        [FieldOffset(16)] // size = 8
        public FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void ClearAllFn;

        [FieldOffset(24)] // size = 8
        public FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void ReadInitFn;

        [FieldOffset(32)] // size = 8
        public FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_CString_VoidPtr ReadOpenFn;

        [FieldOffset(40)] // size = 8
        public FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_VoidPtr_CString_Void ReadLineFn;

        [FieldOffset(48)] // size = 8
        public FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void ApplyAllFn;

        [FieldOffset(56)] // size = 8
        public FnPtr_ImGuiContextPtr_ImGuiSettingsHandlerPtr_ImGuiTextBufferPtr_Void WriteAllFn;

        [FieldOffset(64)] // size = 8
        public void* UserData;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiShrinkWidthItem
    {
        [FieldOffset(0)] // size = 4
        public int Index;

        [FieldOffset(4)] // size = 4
        public float Width;

        [FieldOffset(8)] // size = 4
        public float InitialWidth;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImGuiSizeCallbackData
    {
        [FieldOffset(0)] // size = 8
        public void* UserData;

        [FieldOffset(8)] // size = 8
        public Vector2 Pos;

        [FieldOffset(16)] // size = 8
        public Vector2 CurrentSize;

        [FieldOffset(24)] // size = 8
        public Vector2 DesiredSize;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 18, Pack = 2)]
    public struct ImGuiStackSizes
    {
        [FieldOffset(0)] // size = 2
        public short SizeOfIDStack;

        [FieldOffset(2)] // size = 2
        public short SizeOfColorStack;

        [FieldOffset(4)] // size = 2
        public short SizeOfStyleVarStack;

        [FieldOffset(6)] // size = 2
        public short SizeOfFontStack;

        [FieldOffset(8)] // size = 2
        public short SizeOfFocusScopeStack;

        [FieldOffset(10)] // size = 2
        public short SizeOfGroupStack;

        [FieldOffset(12)] // size = 2
        public short SizeOfItemFlagsStack;

        [FieldOffset(14)] // size = 2
        public short SizeOfBeginPopupStack;

        [FieldOffset(16)] // size = 2
        public short SizeOfDisabledStack;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiStorage
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImGuiStoragePair Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiStoragePair
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID Key;

        [FieldOffset(0)] // size = 4
        public int ValI;

        [FieldOffset(0)] // size = 4
        public float ValF;

        [FieldOffset(0)] // size = 8
        public void* ValP;
    }

    [CNode(Kind = "Union")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiStoragePairANONYMOUSFIELD1
    {
        [FieldOffset(0)] // size = 4
        public int ValI;

        [FieldOffset(0)] // size = 4
        public float ValF;

        [FieldOffset(0)] // size = 8
        public void* ValP;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 1132, Pack = 4)]
    public struct ImGuiStyle
    {
        [FieldOffset(0)] // size = 4
        public float Alpha;

        [FieldOffset(4)] // size = 4
        public float DisabledAlpha;

        [FieldOffset(8)] // size = 8
        public Vector2 WindowPadding;

        [FieldOffset(16)] // size = 4
        public float WindowRounding;

        [FieldOffset(20)] // size = 4
        public float WindowBorderSize;

        [FieldOffset(24)] // size = 8
        public Vector2 WindowMinSize;

        [FieldOffset(32)] // size = 8
        public Vector2 WindowTitleAlign;

        [FieldOffset(40)] // size = 4
        public ImGuiDir WindowMenuButtonPosition;

        [FieldOffset(44)] // size = 4
        public float ChildRounding;

        [FieldOffset(48)] // size = 4
        public float ChildBorderSize;

        [FieldOffset(52)] // size = 4
        public float PopupRounding;

        [FieldOffset(56)] // size = 4
        public float PopupBorderSize;

        [FieldOffset(60)] // size = 8
        public Vector2 FramePadding;

        [FieldOffset(68)] // size = 4
        public float FrameRounding;

        [FieldOffset(72)] // size = 4
        public float FrameBorderSize;

        [FieldOffset(76)] // size = 8
        public Vector2 ItemSpacing;

        [FieldOffset(84)] // size = 8
        public Vector2 ItemInnerSpacing;

        [FieldOffset(92)] // size = 8
        public Vector2 CellPadding;

        [FieldOffset(100)] // size = 8
        public Vector2 TouchExtraPadding;

        [FieldOffset(108)] // size = 4
        public float IndentSpacing;

        [FieldOffset(112)] // size = 4
        public float ColumnsMinSpacing;

        [FieldOffset(116)] // size = 4
        public float ScrollbarSize;

        [FieldOffset(120)] // size = 4
        public float ScrollbarRounding;

        [FieldOffset(124)] // size = 4
        public float GrabMinSize;

        [FieldOffset(128)] // size = 4
        public float GrabRounding;

        [FieldOffset(132)] // size = 4
        public float LogSliderDeadzone;

        [FieldOffset(136)] // size = 4
        public float TabRounding;

        [FieldOffset(140)] // size = 4
        public float TabBorderSize;

        [FieldOffset(144)] // size = 4
        public float TabMinWidthForCloseButton;

        [FieldOffset(148)] // size = 4
        public float TabBarBorderSize;

        [FieldOffset(152)] // size = 4
        public float TableAngledHeadersAngle;

        [FieldOffset(156)] // size = 4
        public ImGuiDir ColorButtonPosition;

        [FieldOffset(160)] // size = 8
        public Vector2 ButtonTextAlign;

        [FieldOffset(168)] // size = 8
        public Vector2 SelectableTextAlign;

        [FieldOffset(176)] // size = 4
        public float SeparatorTextBorderSize;

        [FieldOffset(180)] // size = 8
        public Vector2 SeparatorTextAlign;

        [FieldOffset(188)] // size = 8
        public Vector2 SeparatorTextPadding;

        [FieldOffset(196)] // size = 8
        public Vector2 DisplayWindowPadding;

        [FieldOffset(204)] // size = 8
        public Vector2 DisplaySafeAreaPadding;

        [FieldOffset(212)] // size = 4
        public float DockingSeparatorSize;

        [FieldOffset(216)] // size = 4
        public float MouseCursorScale;

        [FieldOffset(220)] // size = 1
        public CBool AntiAliasedLines;

        [FieldOffset(221)] // size = 1
        public CBool AntiAliasedLinesUseTex;

        [FieldOffset(222)] // size = 1
        public CBool AntiAliasedFill;

        [FieldOffset(224)] // size = 4
        public float CurveTessellationTol;

        [FieldOffset(228)] // size = 4
        public float CircleTessellationMaxError;

        [FieldOffset(232)] // size = 880
        public fixed byte _Colors[880]; // ImVec4[55]

        public readonly Span<Vector4> Colors
        {
            get
            {
                fixed (ImGuiStyle* @this = &this)
                {
                    var pointer = &@this->_Colors[0];
                    var span = new Span<Vector4>(pointer, 55);
                    return span;
                }
            }
        }

        [FieldOffset(1112)] // size = 4
        public float HoverStationaryDelay;

        [FieldOffset(1116)] // size = 4
        public float HoverDelayShort;

        [FieldOffset(1120)] // size = 4
        public float HoverDelayNormal;

        [FieldOffset(1124)] // size = 4
        public ImGuiHoveredFlags HoverFlagsForTooltipMouse;

        [FieldOffset(1128)] // size = 4
        public ImGuiHoveredFlags HoverFlagsForTooltipNav;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiStyleMod
    {
        [FieldOffset(0)] // size = 4
        public ImGuiStyleVar VarIdx;

        [FieldOffset(0)] // size = 8
        public fixed byte _BackupInt[8]; // int[2]

        public readonly Span<int> BackupInt
        {
            get
            {
                fixed (ImGuiStyleMod* @this = &this)
                {
                    var pointer = &@this->_BackupInt[0];
                    var span = new Span<int>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(0)] // size = 8
        public fixed byte _BackupFloat[8]; // float[2]

        public readonly Span<float> BackupFloat
        {
            get
            {
                fixed (ImGuiStyleMod* @this = &this)
                {
                    var pointer = &@this->_BackupFloat[0];
                    var span = new Span<float>(pointer, 2);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Union")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ImGuiStyleModANONYMOUSFIELD1
    {
        [FieldOffset(0)] // size = 8
        public fixed byte _BackupInt[8]; // int[2]

        public readonly Span<int> BackupInt
        {
            get
            {
                fixed (ImGuiStyleModANONYMOUSFIELD1* @this = &this)
                {
                    var pointer = &@this->_BackupInt[0];
                    var span = new Span<int>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(0)] // size = 8
        public fixed byte _BackupFloat[8]; // float[2]

        public readonly Span<float> BackupFloat
        {
            get
            {
                fixed (ImGuiStyleModANONYMOUSFIELD1* @this = &this)
                {
                    var pointer = &@this->_BackupFloat[0];
                    var span = new Span<float>(pointer, 2);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 160, Pack = 8)]
    public struct ImGuiTabBar
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImGuiTabItem Tabs;

        [FieldOffset(16)] // size = 4
        public ImGuiTabBarFlags Flags;

        [FieldOffset(20)] // size = 4
        public ImGuiID ID;

        [FieldOffset(24)] // size = 4
        public ImGuiID SelectedTabId;

        [FieldOffset(28)] // size = 4
        public ImGuiID NextSelectedTabId;

        [FieldOffset(32)] // size = 4
        public ImGuiID VisibleTabId;

        [FieldOffset(36)] // size = 4
        public int CurrFrameVisible;

        [FieldOffset(40)] // size = 4
        public int PrevFrameVisible;

        [FieldOffset(44)] // size = 16
        public ImRect BarRect;

        [FieldOffset(60)] // size = 4
        public float CurrTabsContentsHeight;

        [FieldOffset(64)] // size = 4
        public float PrevTabsContentsHeight;

        [FieldOffset(68)] // size = 4
        public float WidthAllTabs;

        [FieldOffset(72)] // size = 4
        public float WidthAllTabsIdeal;

        [FieldOffset(76)] // size = 4
        public float ScrollingAnim;

        [FieldOffset(80)] // size = 4
        public float ScrollingTarget;

        [FieldOffset(84)] // size = 4
        public float ScrollingTargetDistToVisibility;

        [FieldOffset(88)] // size = 4
        public float ScrollingSpeed;

        [FieldOffset(92)] // size = 4
        public float ScrollingRectMinX;

        [FieldOffset(96)] // size = 4
        public float ScrollingRectMaxX;

        [FieldOffset(100)] // size = 4
        public float SeparatorMinX;

        [FieldOffset(104)] // size = 4
        public float SeparatorMaxX;

        [FieldOffset(108)] // size = 4
        public ImGuiID ReorderRequestTabId;

        [FieldOffset(112)] // size = 2
        public short ReorderRequestOffset;

        [FieldOffset(114)] // size = 1
        public sbyte BeginCount;

        [FieldOffset(115)] // size = 1
        public CBool WantLayout;

        [FieldOffset(116)] // size = 1
        public CBool VisibleTabWasSubmitted;

        [FieldOffset(117)] // size = 1
        public CBool TabsAddedNew;

        [FieldOffset(118)] // size = 2
        public short TabsActiveCount;

        [FieldOffset(120)] // size = 2
        public short LastTabItemIdx;

        [FieldOffset(124)] // size = 4
        public float ItemSpacingY;

        [FieldOffset(128)] // size = 8
        public Vector2 FramePadding;

        [FieldOffset(136)] // size = 8
        public Vector2 BackupCursorPos;

        [FieldOffset(144)] // size = 16
        public ImGuiTextBuffer TabsNames;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
    public struct ImGuiTabItem
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImGuiTabItemFlags Flags;

        [FieldOffset(8)] // size = 8
        public ImGuiWindow* Window;

        [FieldOffset(16)] // size = 4
        public int LastFrameVisible;

        [FieldOffset(20)] // size = 4
        public int LastFrameSelected;

        [FieldOffset(24)] // size = 4
        public float Offset;

        [FieldOffset(28)] // size = 4
        public float Width;

        [FieldOffset(32)] // size = 4
        public float ContentWidth;

        [FieldOffset(36)] // size = 4
        public float RequestedWidth;

        [FieldOffset(40)] // size = 4
        public int NameOffset;

        [FieldOffset(44)] // size = 2
        public short BeginOrder;

        [FieldOffset(46)] // size = 2
        public short IndexDuringLayout;

        [FieldOffset(48)] // size = 1
        public CBool WantClose;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 592, Pack = 8)]
    public struct ImGuiTable
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImGuiTableFlags Flags;

        [FieldOffset(8)] // size = 8
        public void* RawData;

        [FieldOffset(16)] // size = 8
        public ImGuiTableTempData* TempData;

        [FieldOffset(24)] // size = 16
        public ImSpanImGuiTableColumn Columns;

        [FieldOffset(40)] // size = 16
        public ImSpanImGuiTableColumnIdx DisplayOrderToIndex;

        [FieldOffset(56)] // size = 16
        public ImSpanImGuiTableCellData RowCellData;

        [FieldOffset(72)] // size = 8
        public ImBitArrayPtr EnabledMaskByDisplayOrder;

        [FieldOffset(80)] // size = 8
        public ImBitArrayPtr EnabledMaskByIndex;

        [FieldOffset(88)] // size = 8
        public ImBitArrayPtr VisibleMaskByIndex;

        [FieldOffset(96)] // size = 4
        public ImGuiTableFlags SettingsLoadedFlags;

        [FieldOffset(100)] // size = 4
        public int SettingsOffset;

        [FieldOffset(104)] // size = 4
        public int LastFrameActive;

        [FieldOffset(108)] // size = 4
        public int ColumnsCount;

        [FieldOffset(112)] // size = 4
        public int CurrentRow;

        [FieldOffset(116)] // size = 4
        public int CurrentColumn;

        [FieldOffset(120)] // size = 2
        public short InstanceCurrent;

        [FieldOffset(122)] // size = 2
        public short InstanceInteracted;

        [FieldOffset(124)] // size = 4
        public float RowPosY1;

        [FieldOffset(128)] // size = 4
        public float RowPosY2;

        [FieldOffset(132)] // size = 4
        public float RowMinHeight;

        [FieldOffset(136)] // size = 4
        public float RowCellPaddingY;

        [FieldOffset(140)] // size = 4
        public float RowTextBaseline;

        [FieldOffset(144)] // size = 4
        public float RowIndentOffsetX;

        [FieldOffset(148)] // size = 4
        public ImGuiTableRowFlags RowFlags;

        [FieldOffset(150)] // size = 4
        public ImGuiTableRowFlags LastRowFlags;

        [FieldOffset(152)] // size = 4
        public int RowBgColorCounter;

        [FieldOffset(156)] // size = 8
        public fixed byte _RowBgColor[8]; // ImU32[2]

        public readonly Span<uint> RowBgColor
        {
            get
            {
                fixed (ImGuiTable* @this = &this)
                {
                    var pointer = &@this->_RowBgColor[0];
                    var span = new Span<uint>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(164)] // size = 4
        public uint BorderColorStrong;

        [FieldOffset(168)] // size = 4
        public uint BorderColorLight;

        [FieldOffset(172)] // size = 4
        public float BorderX1;

        [FieldOffset(176)] // size = 4
        public float BorderX2;

        [FieldOffset(180)] // size = 4
        public float HostIndentX;

        [FieldOffset(184)] // size = 4
        public float MinColumnWidth;

        [FieldOffset(188)] // size = 4
        public float OuterPaddingX;

        [FieldOffset(192)] // size = 4
        public float CellPaddingX;

        [FieldOffset(196)] // size = 4
        public float CellSpacingX1;

        [FieldOffset(200)] // size = 4
        public float CellSpacingX2;

        [FieldOffset(204)] // size = 4
        public float InnerWidth;

        [FieldOffset(208)] // size = 4
        public float ColumnsGivenWidth;

        [FieldOffset(212)] // size = 4
        public float ColumnsAutoFitWidth;

        [FieldOffset(216)] // size = 4
        public float ColumnsStretchSumWeights;

        [FieldOffset(220)] // size = 4
        public float ResizedColumnNextWidth;

        [FieldOffset(224)] // size = 4
        public float ResizeLockMinContentsX2;

        [FieldOffset(228)] // size = 4
        public float RefScale;

        [FieldOffset(232)] // size = 4
        public float AngledHeadersHeight;

        [FieldOffset(236)] // size = 4
        public float AngledHeadersSlope;

        [FieldOffset(240)] // size = 16
        public ImRect OuterRect;

        [FieldOffset(256)] // size = 16
        public ImRect InnerRect;

        [FieldOffset(272)] // size = 16
        public ImRect WorkRect;

        [FieldOffset(288)] // size = 16
        public ImRect InnerClipRect;

        [FieldOffset(304)] // size = 16
        public ImRect BgClipRect;

        [FieldOffset(320)] // size = 16
        public ImRect Bg0ClipRectForDrawCmd;

        [FieldOffset(336)] // size = 16
        public ImRect Bg2ClipRectForDrawCmd;

        [FieldOffset(352)] // size = 16
        public ImRect HostClipRect;

        [FieldOffset(368)] // size = 16
        public ImRect HostBackupInnerClipRect;

        [FieldOffset(384)] // size = 8
        public ImGuiWindow* OuterWindow;

        [FieldOffset(392)] // size = 8
        public ImGuiWindow* InnerWindow;

        [FieldOffset(400)] // size = 16
        public ImGuiTextBuffer ColumnsNames;

        [FieldOffset(416)] // size = 8
        public ImDrawListSplitter* DrawSplitter;

        [FieldOffset(424)] // size = 24
        public ImGuiTableInstanceData InstanceDataFirst;

        [FieldOffset(448)] // size = 16
        public ImVectorImGuiTableInstanceData InstanceDataExtra;

        [FieldOffset(464)] // size = 12
        public ImGuiTableColumnSortSpecs SortSpecsSingle;

        [FieldOffset(480)] // size = 16
        public ImVectorImGuiTableColumnSortSpecs SortSpecsMulti;

        [FieldOffset(496)] // size = 16
        public ImGuiTableSortSpecs SortSpecs;

        [FieldOffset(512)] // size = 2
        public ImGuiTableColumnIdx SortSpecsCount;

        [FieldOffset(514)] // size = 2
        public ImGuiTableColumnIdx ColumnsEnabledCount;

        [FieldOffset(516)] // size = 2
        public ImGuiTableColumnIdx ColumnsEnabledFixedCount;

        [FieldOffset(518)] // size = 2
        public ImGuiTableColumnIdx DeclColumnsCount;

        [FieldOffset(520)] // size = 2
        public ImGuiTableColumnIdx AngledHeadersCount;

        [FieldOffset(522)] // size = 2
        public ImGuiTableColumnIdx HoveredColumnBody;

        [FieldOffset(524)] // size = 2
        public ImGuiTableColumnIdx HoveredColumnBorder;

        [FieldOffset(526)] // size = 2
        public ImGuiTableColumnIdx HighlightColumnHeader;

        [FieldOffset(528)] // size = 2
        public ImGuiTableColumnIdx AutoFitSingleColumn;

        [FieldOffset(530)] // size = 2
        public ImGuiTableColumnIdx ResizedColumn;

        [FieldOffset(532)] // size = 2
        public ImGuiTableColumnIdx LastResizedColumn;

        [FieldOffset(534)] // size = 2
        public ImGuiTableColumnIdx HeldHeaderColumn;

        [FieldOffset(536)] // size = 2
        public ImGuiTableColumnIdx ReorderColumn;

        [FieldOffset(538)] // size = 2
        public ImGuiTableColumnIdx ReorderColumnDir;

        [FieldOffset(540)] // size = 2
        public ImGuiTableColumnIdx LeftMostEnabledColumn;

        [FieldOffset(542)] // size = 2
        public ImGuiTableColumnIdx RightMostEnabledColumn;

        [FieldOffset(544)] // size = 2
        public ImGuiTableColumnIdx LeftMostStretchedColumn;

        [FieldOffset(546)] // size = 2
        public ImGuiTableColumnIdx RightMostStretchedColumn;

        [FieldOffset(548)] // size = 2
        public ImGuiTableColumnIdx ContextPopupColumn;

        [FieldOffset(550)] // size = 2
        public ImGuiTableColumnIdx FreezeRowsRequest;

        [FieldOffset(552)] // size = 2
        public ImGuiTableColumnIdx FreezeRowsCount;

        [FieldOffset(554)] // size = 2
        public ImGuiTableColumnIdx FreezeColumnsRequest;

        [FieldOffset(556)] // size = 2
        public ImGuiTableColumnIdx FreezeColumnsCount;

        [FieldOffset(558)] // size = 2
        public ImGuiTableColumnIdx RowCellDataCurrent;

        [FieldOffset(560)] // size = 2
        public ImGuiTableDrawChannelIdx DummyDrawChannel;

        [FieldOffset(562)] // size = 2
        public ImGuiTableDrawChannelIdx Bg2DrawChannelCurrent;

        [FieldOffset(564)] // size = 2
        public ImGuiTableDrawChannelIdx Bg2DrawChannelUnfrozen;

        [FieldOffset(566)] // size = 1
        public CBool IsLayoutLocked;

        [FieldOffset(567)] // size = 1
        public CBool IsInsideRow;

        [FieldOffset(568)] // size = 1
        public CBool IsInitializing;

        [FieldOffset(569)] // size = 1
        public CBool IsSortSpecsDirty;

        [FieldOffset(570)] // size = 1
        public CBool IsUsingHeaders;

        [FieldOffset(571)] // size = 1
        public CBool IsContextPopupOpen;

        [FieldOffset(572)] // size = 1
        public CBool DisableDefaultContextMenu;

        [FieldOffset(573)] // size = 1
        public CBool IsSettingsRequestLoad;

        [FieldOffset(574)] // size = 1
        public CBool IsSettingsDirty;

        [FieldOffset(575)] // size = 1
        public CBool IsDefaultDisplayOrder;

        [FieldOffset(576)] // size = 1
        public CBool IsResetAllRequest;

        [FieldOffset(577)] // size = 1
        public CBool IsResetDisplayOrderRequest;

        [FieldOffset(578)] // size = 1
        public CBool IsUnfrozenRows;

        [FieldOffset(579)] // size = 1
        public CBool IsDefaultSizingPolicy;

        [FieldOffset(580)] // size = 1
        public CBool IsActiveIdAliveBeforeTable;

        [FieldOffset(581)] // size = 1
        public CBool IsActiveIdInTable;

        [FieldOffset(582)] // size = 1
        public CBool HasScrollbarYCurr;

        [FieldOffset(583)] // size = 1
        public CBool HasScrollbarYPrev;

        [FieldOffset(584)] // size = 1
        public CBool MemoryCompacted;

        [FieldOffset(585)] // size = 1
        public CBool HostSkipItems;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ImGuiTableCellData
    {
        [FieldOffset(0)] // size = 4
        public uint BgColor;

        [FieldOffset(4)] // size = 2
        public ImGuiTableColumnIdx Column;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 112, Pack = 4)]
    public struct ImGuiTableColumn
    {
        [FieldOffset(0)] // size = 4
        public ImGuiTableColumnFlags Flags;

        [FieldOffset(4)] // size = 4
        public float WidthGiven;

        [FieldOffset(8)] // size = 4
        public float MinX;

        [FieldOffset(12)] // size = 4
        public float MaxX;

        [FieldOffset(16)] // size = 4
        public float WidthRequest;

        [FieldOffset(20)] // size = 4
        public float WidthAuto;

        [FieldOffset(24)] // size = 4
        public float StretchWeight;

        [FieldOffset(28)] // size = 4
        public float InitStretchWeightOrWidth;

        [FieldOffset(32)] // size = 16
        public ImRect ClipRect;

        [FieldOffset(48)] // size = 4
        public ImGuiID UserID;

        [FieldOffset(52)] // size = 4
        public float WorkMinX;

        [FieldOffset(56)] // size = 4
        public float WorkMaxX;

        [FieldOffset(60)] // size = 4
        public float ItemWidth;

        [FieldOffset(64)] // size = 4
        public float ContentMaxXFrozen;

        [FieldOffset(68)] // size = 4
        public float ContentMaxXUnfrozen;

        [FieldOffset(72)] // size = 4
        public float ContentMaxXHeadersUsed;

        [FieldOffset(76)] // size = 4
        public float ContentMaxXHeadersIdeal;

        [FieldOffset(80)] // size = 2
        public short NameOffset;

        [FieldOffset(82)] // size = 2
        public ImGuiTableColumnIdx DisplayOrder;

        [FieldOffset(84)] // size = 2
        public ImGuiTableColumnIdx IndexWithinEnabledSet;

        [FieldOffset(86)] // size = 2
        public ImGuiTableColumnIdx PrevEnabledColumn;

        [FieldOffset(88)] // size = 2
        public ImGuiTableColumnIdx NextEnabledColumn;

        [FieldOffset(90)] // size = 2
        public ImGuiTableColumnIdx SortOrder;

        [FieldOffset(92)] // size = 2
        public ImGuiTableDrawChannelIdx DrawChannelCurrent;

        [FieldOffset(94)] // size = 2
        public ImGuiTableDrawChannelIdx DrawChannelFrozen;

        [FieldOffset(96)] // size = 2
        public ImGuiTableDrawChannelIdx DrawChannelUnfrozen;

        [FieldOffset(98)] // size = 1
        public CBool IsEnabled;

        [FieldOffset(99)] // size = 1
        public CBool IsUserEnabled;

        [FieldOffset(100)] // size = 1
        public CBool IsUserEnabledNextFrame;

        [FieldOffset(101)] // size = 1
        public CBool IsVisibleX;

        [FieldOffset(102)] // size = 1
        public CBool IsVisibleY;

        [FieldOffset(103)] // size = 1
        public CBool IsRequestOutput;

        [FieldOffset(104)] // size = 1
        public CBool IsSkipItems;

        [FieldOffset(105)] // size = 1
        public CBool IsPreserveWidthAuto;

        [FieldOffset(106)] // size = 1
        public sbyte NavLayerCurrent;

        [FieldOffset(107)] // size = 1
        public byte AutoFitQueue;

        [FieldOffset(108)] // size = 1
        public byte CannotSkipItemsQueue;

        [FieldOffset(109)] // size = 1
        public byte SortDirection;

        [FieldOffset(109)] // size = 1
        public byte SortDirectionsAvailCount;

        [FieldOffset(109)] // size = 1
        public byte SortDirectionsAvailMask;

        [FieldOffset(110)] // size = 1
        public byte SortDirectionsAvailList;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImGuiTableColumnSettings
    {
        [FieldOffset(0)] // size = 4
        public float WidthOrWeight;

        [FieldOffset(4)] // size = 4
        public ImGuiID UserID;

        [FieldOffset(8)] // size = 2
        public ImGuiTableColumnIdx Index;

        [FieldOffset(10)] // size = 2
        public ImGuiTableColumnIdx DisplayOrder;

        [FieldOffset(12)] // size = 2
        public ImGuiTableColumnIdx SortOrder;

        [FieldOffset(14)] // size = 1
        public byte SortDirection;

        [FieldOffset(14)] // size = 1
        public byte IsEnabled;

        [FieldOffset(14)] // size = 1
        public byte IsStretch;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiTableColumnSortSpecs
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ColumnUserID;

        [FieldOffset(4)] // size = 2
        public short ColumnIndex;

        [FieldOffset(6)] // size = 2
        public short SortOrder;

        [FieldOffset(8)] // size = 4
        public ImGuiSortDirection SortDirection;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 4)]
    public struct ImGuiTableInstanceData
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID TableInstanceID;

        [FieldOffset(4)] // size = 4
        public float LastOuterHeight;

        [FieldOffset(8)] // size = 4
        public float LastTopHeadersRowHeight;

        [FieldOffset(12)] // size = 4
        public float LastFrozenHeight;

        [FieldOffset(16)] // size = 4
        public int HoveredRowLast;

        [FieldOffset(20)] // size = 4
        public int HoveredRowNext;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImGuiTableSettings
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImGuiTableFlags SaveFlags;

        [FieldOffset(8)] // size = 4
        public float RefScale;

        [FieldOffset(12)] // size = 2
        public ImGuiTableColumnIdx ColumnsCount;

        [FieldOffset(14)] // size = 2
        public ImGuiTableColumnIdx ColumnsCountMax;

        [FieldOffset(16)] // size = 1
        public CBool WantApply;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiTableSortSpecs
    {
        [FieldOffset(0)] // size = 8
        public ImGuiTableColumnSortSpecs* Specs;

        [FieldOffset(8)] // size = 4
        public int SpecsCount;

        [FieldOffset(12)] // size = 1
        public CBool SpecsDirty;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 120, Pack = 8)]
    public struct ImGuiTableTempData
    {
        [FieldOffset(0)] // size = 4
        public int TableIndex;

        [FieldOffset(4)] // size = 4
        public float LastTimeActive;

        [FieldOffset(8)] // size = 4
        public float AngledheadersExtraWidth;

        [FieldOffset(12)] // size = 8
        public Vector2 UserOuterSize;

        [FieldOffset(24)] // size = 24
        public ImDrawListSplitter DrawSplitter;

        [FieldOffset(48)] // size = 16
        public ImRect HostBackupWorkRect;

        [FieldOffset(64)] // size = 16
        public ImRect HostBackupParentWorkRect;

        [FieldOffset(80)] // size = 8
        public Vector2 HostBackupPrevLineSize;

        [FieldOffset(88)] // size = 8
        public Vector2 HostBackupCurrLineSize;

        [FieldOffset(96)] // size = 8
        public Vector2 HostBackupCursorMaxPos;

        [FieldOffset(104)] // size = 4
        public float HostBackupColumnsOffset;

        [FieldOffset(108)] // size = 4
        public float HostBackupItemWidth;

        [FieldOffset(112)] // size = 4
        public int HostBackupItemWidthStackSize;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiTextBuffer
    {
        [FieldOffset(0)] // size = 16
        public ImVectorChar Buf;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 280, Pack = 8)]
    public struct ImGuiTextFilter
    {
        [FieldOffset(0)] // size = 256
        public fixed byte _InputBuf[256]; // char[256]

        public string InputBuf
        {
            get
            {
                fixed (ImGuiTextFilter* @this = &this)
                {
                    var pointer = &@this->_InputBuf[0];
                    var cString = new CString(pointer);
                    return CString.ToString(cString);
                }
            }
        }

        [FieldOffset(256)] // size = 16
        public ImVectorImGuiTextRange Filters;

        [FieldOffset(272)] // size = 4
        public int CountGrep;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ImGuiTextIndex
    {
        [FieldOffset(0)] // size = 16
        public ImVectorInt LineOffsets;

        [FieldOffset(16)] // size = 4
        public int EndOffset;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiTextRange
    {
        [FieldOffset(0)] // size = 8
        public CString _B;

        public string B
        {
            get
            {
                return CString.ToString(_B);
            }
            set
            {
                _B = CString.FromString(value);
            }
        }

        [FieldOffset(8)] // size = 8
        public CString _E;

        public string E
        {
            get
            {
                return CString.ToString(_E);
            }
            set
            {
                _E = CString.FromString(value);
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ImGuiTypingSelectRequest
    {
        [FieldOffset(0)] // size = 4
        public ImGuiTypingSelectFlags Flags;

        [FieldOffset(4)] // size = 4
        public int SearchBufferLen;

        [FieldOffset(8)] // size = 8
        public CString _SearchBuffer;

        public string SearchBuffer
        {
            get
            {
                return CString.ToString(_SearchBuffer);
            }
            set
            {
                _SearchBuffer = CString.FromString(value);
            }
        }

        [FieldOffset(16)] // size = 1
        public CBool SelectRequest;

        [FieldOffset(17)] // size = 1
        public CBool SingleCharMode;

        [FieldOffset(18)] // size = 1
        public sbyte SingleCharSize;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 8)]
    public struct ImGuiTypingSelectState
    {
        [FieldOffset(0)] // size = 24
        public ImGuiTypingSelectRequest Request;

        [FieldOffset(24)] // size = 64
        public fixed byte _SearchBuffer[64]; // char[64]

        public string SearchBuffer
        {
            get
            {
                fixed (ImGuiTypingSelectState* @this = &this)
                {
                    var pointer = &@this->_SearchBuffer[0];
                    var cString = new CString(pointer);
                    return CString.ToString(cString);
                }
            }
        }

        [FieldOffset(88)] // size = 4
        public ImGuiID FocusScope;

        [FieldOffset(92)] // size = 4
        public int LastRequestFrame;

        [FieldOffset(96)] // size = 4
        public float LastRequestTime;

        [FieldOffset(100)] // size = 1
        public CBool SingleCharModeLock;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 96, Pack = 8)]
    public struct ImGuiViewport
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImGuiViewportFlags Flags;

        [FieldOffset(8)] // size = 8
        public Vector2 Pos;

        [FieldOffset(16)] // size = 8
        public Vector2 Size;

        [FieldOffset(24)] // size = 8
        public Vector2 WorkPos;

        [FieldOffset(32)] // size = 8
        public Vector2 WorkSize;

        [FieldOffset(40)] // size = 4
        public float DpiScale;

        [FieldOffset(44)] // size = 4
        public ImGuiID ParentViewportId;

        [FieldOffset(48)] // size = 8
        public ImDrawData* DrawData;

        [FieldOffset(56)] // size = 8
        public void* RendererUserData;

        [FieldOffset(64)] // size = 8
        public void* PlatformUserData;

        [FieldOffset(72)] // size = 8
        public void* PlatformHandle;

        [FieldOffset(80)] // size = 8
        public void* PlatformHandleRaw;

        [FieldOffset(88)] // size = 1
        public CBool PlatformWindowCreated;

        [FieldOffset(89)] // size = 1
        public CBool PlatformRequestMove;

        [FieldOffset(90)] // size = 1
        public CBool PlatformRequestResize;

        [FieldOffset(91)] // size = 1
        public CBool PlatformRequestClose;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 320, Pack = 8)]
    public struct ImGuiViewportP
    {
        [FieldOffset(0)] // size = 96
        public ImGuiViewport ImGuiViewport;

        [FieldOffset(96)] // size = 8
        public ImGuiWindow* Window;

        [FieldOffset(104)] // size = 4
        public int Idx;

        [FieldOffset(108)] // size = 4
        public int LastFrameActive;

        [FieldOffset(112)] // size = 4
        public int LastFocusedStampCount;

        [FieldOffset(116)] // size = 4
        public ImGuiID LastNameHash;

        [FieldOffset(120)] // size = 8
        public Vector2 LastPos;

        [FieldOffset(128)] // size = 4
        public float Alpha;

        [FieldOffset(132)] // size = 4
        public float LastAlpha;

        [FieldOffset(136)] // size = 1
        public CBool LastFocusedHadNavWindow;

        [FieldOffset(138)] // size = 2
        public short PlatformMonitor;

        [FieldOffset(140)] // size = 8
        public fixed byte _BgFgDrawListsLastFrame[8]; // int[2]

        public readonly Span<int> BgFgDrawListsLastFrame
        {
            get
            {
                fixed (ImGuiViewportP* @this = &this)
                {
                    var pointer = &@this->_BgFgDrawListsLastFrame[0];
                    var span = new Span<int>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(152)] // size = 16
        public fixed byte _BgFgDrawLists[16]; // ImDrawList*[2]

        public readonly Span<nint> BgFgDrawLists
        {
            get
            {
                fixed (ImGuiViewportP* @this = &this)
                {
                    var pointer = &@this->_BgFgDrawLists[0];
                    var span = new Span<nint>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(168)] // size = 64
        public ImDrawData DrawDataP;

        [FieldOffset(232)] // size = 32
        public ImDrawDataBuilder DrawDataBuilder;

        [FieldOffset(264)] // size = 8
        public Vector2 LastPlatformPos;

        [FieldOffset(272)] // size = 8
        public Vector2 LastPlatformSize;

        [FieldOffset(280)] // size = 8
        public Vector2 LastRendererSize;

        [FieldOffset(288)] // size = 8
        public Vector2 WorkOffsetMin;

        [FieldOffset(296)] // size = 8
        public Vector2 WorkOffsetMax;

        [FieldOffset(304)] // size = 8
        public Vector2 BuildWorkOffsetMin;

        [FieldOffset(312)] // size = 8
        public Vector2 BuildWorkOffsetMax;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 1144, Pack = 8)]
    public struct ImGuiWindow
    {
        [FieldOffset(0)] // size = 8
        public ImGuiContext* Ctx;

        [FieldOffset(8)] // size = 8
        public CString _Name;

        public string Name
        {
            get
            {
                return CString.ToString(_Name);
            }
            set
            {
                _Name = CString.FromString(value);
            }
        }

        [FieldOffset(16)] // size = 4
        public ImGuiID ID;

        [FieldOffset(20)] // size = 4
        public ImGuiWindowFlags Flags;

        [FieldOffset(24)] // size = 4
        public ImGuiWindowFlags FlagsPreviousFrame;

        [FieldOffset(28)] // size = 4
        public ImGuiChildFlags ChildFlags;

        [FieldOffset(32)] // size = 28
        public ImGuiWindowClass WindowClass;

        [FieldOffset(64)] // size = 8
        public ImGuiViewportP* Viewport;

        [FieldOffset(72)] // size = 4
        public ImGuiID ViewportId;

        [FieldOffset(76)] // size = 8
        public Vector2 ViewportPos;

        [FieldOffset(84)] // size = 4
        public int ViewportAllowPlatformMonitorExtend;

        [FieldOffset(88)] // size = 8
        public Vector2 Pos;

        [FieldOffset(96)] // size = 8
        public Vector2 Size;

        [FieldOffset(104)] // size = 8
        public Vector2 SizeFull;

        [FieldOffset(112)] // size = 8
        public Vector2 ContentSize;

        [FieldOffset(120)] // size = 8
        public Vector2 ContentSizeIdeal;

        [FieldOffset(128)] // size = 8
        public Vector2 ContentSizeExplicit;

        [FieldOffset(136)] // size = 8
        public Vector2 WindowPadding;

        [FieldOffset(144)] // size = 4
        public float WindowRounding;

        [FieldOffset(148)] // size = 4
        public float WindowBorderSize;

        [FieldOffset(152)] // size = 4
        public float DecoOuterSizeX1;

        [FieldOffset(156)] // size = 4
        public float DecoOuterSizeY1;

        [FieldOffset(160)] // size = 4
        public float DecoOuterSizeX2;

        [FieldOffset(164)] // size = 4
        public float DecoOuterSizeY2;

        [FieldOffset(168)] // size = 4
        public float DecoInnerSizeX1;

        [FieldOffset(172)] // size = 4
        public float DecoInnerSizeY1;

        [FieldOffset(176)] // size = 4
        public int NameBufLen;

        [FieldOffset(180)] // size = 4
        public ImGuiID MoveId;

        [FieldOffset(184)] // size = 4
        public ImGuiID TabId;

        [FieldOffset(188)] // size = 4
        public ImGuiID ChildId;

        [FieldOffset(192)] // size = 8
        public Vector2 Scroll;

        [FieldOffset(200)] // size = 8
        public Vector2 ScrollMax;

        [FieldOffset(208)] // size = 8
        public Vector2 ScrollTarget;

        [FieldOffset(216)] // size = 8
        public Vector2 ScrollTargetCenterRatio;

        [FieldOffset(224)] // size = 8
        public Vector2 ScrollTargetEdgeSnapDist;

        [FieldOffset(232)] // size = 8
        public Vector2 ScrollbarSizes;

        [FieldOffset(240)] // size = 1
        public CBool ScrollbarX;

        [FieldOffset(241)] // size = 1
        public CBool ScrollbarY;

        [FieldOffset(242)] // size = 1
        public CBool ViewportOwned;

        [FieldOffset(243)] // size = 1
        public CBool Active;

        [FieldOffset(244)] // size = 1
        public CBool WasActive;

        [FieldOffset(245)] // size = 1
        public CBool WriteAccessed;

        [FieldOffset(246)] // size = 1
        public CBool Collapsed;

        [FieldOffset(247)] // size = 1
        public CBool WantCollapseToggle;

        [FieldOffset(248)] // size = 1
        public CBool SkipItems;

        [FieldOffset(249)] // size = 1
        public CBool Appearing;

        [FieldOffset(250)] // size = 1
        public CBool Hidden;

        [FieldOffset(251)] // size = 1
        public CBool IsFallbackWindow;

        [FieldOffset(252)] // size = 1
        public CBool IsExplicitChild;

        [FieldOffset(253)] // size = 1
        public CBool HasCloseButton;

        [FieldOffset(254)] // size = 1
        public sbyte ResizeBorderHovered;

        [FieldOffset(255)] // size = 1
        public sbyte ResizeBorderHeld;

        [FieldOffset(256)] // size = 2
        public short BeginCount;

        [FieldOffset(258)] // size = 2
        public short BeginCountPreviousFrame;

        [FieldOffset(260)] // size = 2
        public short BeginOrderWithinParent;

        [FieldOffset(262)] // size = 2
        public short BeginOrderWithinContext;

        [FieldOffset(264)] // size = 2
        public short FocusOrder;

        [FieldOffset(268)] // size = 4
        public ImGuiID PopupId;

        [FieldOffset(272)] // size = 1
        public sbyte AutoFitFramesX;

        [FieldOffset(273)] // size = 1
        public sbyte AutoFitFramesY;

        [FieldOffset(274)] // size = 1
        public CBool AutoFitOnlyGrows;

        [FieldOffset(276)] // size = 4
        public ImGuiDir AutoPosLastDirection;

        [FieldOffset(280)] // size = 1
        public sbyte HiddenFramesCanSkipItems;

        [FieldOffset(281)] // size = 1
        public sbyte HiddenFramesCannotSkipItems;

        [FieldOffset(282)] // size = 1
        public sbyte HiddenFramesForRenderOnly;

        [FieldOffset(283)] // size = 1
        public sbyte DisableInputsFrames;

        [FieldOffset(284)] // size = 4
        public ImGuiCond SetWindowPosAllowFlags;

        [FieldOffset(285)] // size = 4
        public ImGuiCond SetWindowSizeAllowFlags;

        [FieldOffset(286)] // size = 4
        public ImGuiCond SetWindowCollapsedAllowFlags;

        [FieldOffset(287)] // size = 4
        public ImGuiCond SetWindowDockAllowFlags;

        [FieldOffset(288)] // size = 8
        public Vector2 SetWindowPosVal;

        [FieldOffset(296)] // size = 8
        public Vector2 SetWindowPosPivot;

        [FieldOffset(304)] // size = 16
        public ImVectorImGuiID IDStack;

        [FieldOffset(320)] // size = 232
        public ImGuiWindowTempData DC;

        [FieldOffset(552)] // size = 16
        public ImRect OuterRectClipped;

        [FieldOffset(568)] // size = 16
        public ImRect InnerRect;

        [FieldOffset(584)] // size = 16
        public ImRect InnerClipRect;

        [FieldOffset(600)] // size = 16
        public ImRect WorkRect;

        [FieldOffset(616)] // size = 16
        public ImRect ParentWorkRect;

        [FieldOffset(632)] // size = 16
        public ImRect ClipRect;

        [FieldOffset(648)] // size = 16
        public ImRect ContentRegionRect;

        [FieldOffset(664)] // size = 4
        public ImVec2ih HitTestHoleSize;

        [FieldOffset(668)] // size = 4
        public ImVec2ih HitTestHoleOffset;

        [FieldOffset(672)] // size = 4
        public int LastFrameActive;

        [FieldOffset(676)] // size = 4
        public int LastFrameJustFocused;

        [FieldOffset(680)] // size = 4
        public float LastTimeActive;

        [FieldOffset(684)] // size = 4
        public float ItemWidthDefault;

        [FieldOffset(688)] // size = 16
        public ImGuiStorage StateStorage;

        [FieldOffset(704)] // size = 16
        public ImVectorImGuiOldColumns ColumnsStorage;

        [FieldOffset(720)] // size = 4
        public float FontWindowScale;

        [FieldOffset(724)] // size = 4
        public float FontDpiScale;

        [FieldOffset(728)] // size = 4
        public int SettingsOffset;

        [FieldOffset(736)] // size = 8
        public ImDrawList* DrawList;

        [FieldOffset(744)] // size = 200
        public ImDrawList DrawListInst;

        [FieldOffset(944)] // size = 8
        public ImGuiWindow* ParentWindow;

        [FieldOffset(952)] // size = 8
        public ImGuiWindow* ParentWindowInBeginStack;

        [FieldOffset(960)] // size = 8
        public ImGuiWindow* RootWindow;

        [FieldOffset(968)] // size = 8
        public ImGuiWindow* RootWindowPopupTree;

        [FieldOffset(976)] // size = 8
        public ImGuiWindow* RootWindowDockTree;

        [FieldOffset(984)] // size = 8
        public ImGuiWindow* RootWindowForTitleBarHighlight;

        [FieldOffset(992)] // size = 8
        public ImGuiWindow* RootWindowForNav;

        [FieldOffset(1000)] // size = 8
        public ImGuiWindow* NavLastChildNavWindow;

        [FieldOffset(1008)] // size = 8
        public fixed byte _NavLastIds[8]; // ImGuiID[2]

        public readonly Span<ImGuiID> NavLastIds
        {
            get
            {
                fixed (ImGuiWindow* @this = &this)
                {
                    var pointer = &@this->_NavLastIds[0];
                    var span = new Span<ImGuiID>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(1016)] // size = 32
        public fixed byte _NavRectRel[32]; // ImRect[2]

        public readonly Span<ImRect> NavRectRel
        {
            get
            {
                fixed (ImGuiWindow* @this = &this)
                {
                    var pointer = &@this->_NavRectRel[0];
                    var span = new Span<ImRect>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(1048)] // size = 16
        public fixed byte _NavPreferredScoringPosRel[16]; // ImVec2[2]

        public readonly Span<Vector2> NavPreferredScoringPosRel
        {
            get
            {
                fixed (ImGuiWindow* @this = &this)
                {
                    var pointer = &@this->_NavPreferredScoringPosRel[0];
                    var span = new Span<Vector2>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(1064)] // size = 4
        public ImGuiID NavRootFocusScopeId;

        [FieldOffset(1068)] // size = 4
        public int MemoryDrawListIdxCapacity;

        [FieldOffset(1072)] // size = 4
        public int MemoryDrawListVtxCapacity;

        [FieldOffset(1076)] // size = 1
        public CBool MemoryCompacted;

        [FieldOffset(1077)] // size = 1
        public CBool DockIsActive;

        [FieldOffset(1077)] // size = 1
        public CBool DockNodeIsVisible;

        [FieldOffset(1077)] // size = 1
        public CBool DockTabIsVisible;

        [FieldOffset(1077)] // size = 1
        public CBool DockTabWantClose;

        [FieldOffset(1078)] // size = 2
        public short DockOrder;

        [FieldOffset(1080)] // size = 24
        public ImGuiWindowDockStyle DockStyle;

        [FieldOffset(1104)] // size = 8
        public ImGuiDockNode* DockNode;

        [FieldOffset(1112)] // size = 8
        public ImGuiDockNode* DockNodeAsHost;

        [FieldOffset(1120)] // size = 4
        public ImGuiID DockId;

        [FieldOffset(1124)] // size = 4
        public ImGuiItemStatusFlags DockTabItemStatusFlags;

        [FieldOffset(1128)] // size = 16
        public ImRect DockTabItemRect;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 28, Pack = 4)]
    public struct ImGuiWindowClass
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ClassId;

        [FieldOffset(4)] // size = 4
        public ImGuiID ParentViewportId;

        [FieldOffset(8)] // size = 4
        public ImGuiViewportFlags ViewportFlagsOverrideSet;

        [FieldOffset(12)] // size = 4
        public ImGuiViewportFlags ViewportFlagsOverrideClear;

        [FieldOffset(16)] // size = 4
        public ImGuiTabItemFlags TabItemFlagsOverrideSet;

        [FieldOffset(20)] // size = 4
        public ImGuiDockNodeFlags DockNodeFlagsOverrideSet;

        [FieldOffset(24)] // size = 1
        public CBool DockingAlwaysTabBar;

        [FieldOffset(25)] // size = 1
        public CBool DockingAllowUnclassed;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 4)]
    public struct ImGuiWindowDockStyle
    {
        [FieldOffset(0)] // size = 24
        public fixed byte _Colors[24]; // ImU32[6]

        public readonly Span<uint> Colors
        {
            get
            {
                fixed (ImGuiWindowDockStyle* @this = &this)
                {
                    var pointer = &@this->_Colors[0];
                    var span = new Span<uint>(pointer, 6);
                    return span;
                }
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 36, Pack = 4)]
    public struct ImGuiWindowSettings
    {
        [FieldOffset(0)] // size = 4
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4
        public ImVec2ih Pos;

        [FieldOffset(8)] // size = 4
        public ImVec2ih Size;

        [FieldOffset(12)] // size = 4
        public ImVec2ih ViewportPos;

        [FieldOffset(16)] // size = 4
        public ImGuiID ViewportId;

        [FieldOffset(20)] // size = 4
        public ImGuiID DockId;

        [FieldOffset(24)] // size = 4
        public ImGuiID ClassId;

        [FieldOffset(28)] // size = 2
        public short DockOrder;

        [FieldOffset(30)] // size = 1
        public CBool Collapsed;

        [FieldOffset(31)] // size = 1
        public CBool IsChild;

        [FieldOffset(32)] // size = 1
        public CBool WantApply;

        [FieldOffset(33)] // size = 1
        public CBool WantDelete;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 8)]
    public struct ImGuiWindowStackData
    {
        [FieldOffset(0)] // size = 8
        public ImGuiWindow* Window;

        [FieldOffset(8)] // size = 76
        public ImGuiLastItemData ParentLastItemDataBackup;

        [FieldOffset(84)] // size = 18
        public ImGuiStackSizes StackSizesOnBegin;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 232, Pack = 8)]
    public struct ImGuiWindowTempData
    {
        [FieldOffset(0)] // size = 8
        public Vector2 CursorPos;

        [FieldOffset(8)] // size = 8
        public Vector2 CursorPosPrevLine;

        [FieldOffset(16)] // size = 8
        public Vector2 CursorStartPos;

        [FieldOffset(24)] // size = 8
        public Vector2 CursorMaxPos;

        [FieldOffset(32)] // size = 8
        public Vector2 IdealMaxPos;

        [FieldOffset(40)] // size = 8
        public Vector2 CurrLineSize;

        [FieldOffset(48)] // size = 8
        public Vector2 PrevLineSize;

        [FieldOffset(56)] // size = 4
        public float CurrLineTextBaseOffset;

        [FieldOffset(60)] // size = 4
        public float PrevLineTextBaseOffset;

        [FieldOffset(64)] // size = 1
        public CBool IsSameLine;

        [FieldOffset(65)] // size = 1
        public CBool IsSetPos;

        [FieldOffset(68)] // size = 4
        public float Indent;

        [FieldOffset(72)] // size = 4
        public float ColumnsOffset;

        [FieldOffset(76)] // size = 4
        public float GroupOffset;

        [FieldOffset(80)] // size = 8
        public Vector2 CursorStartPosLossyness;

        [FieldOffset(88)] // size = 4
        public ImGuiNavLayer NavLayerCurrent;

        [FieldOffset(92)] // size = 2
        public short NavLayersActiveMask;

        [FieldOffset(94)] // size = 2
        public short NavLayersActiveMaskNext;

        [FieldOffset(96)] // size = 1
        public CBool NavIsScrollPushableX;

        [FieldOffset(97)] // size = 1
        public CBool NavHideHighlightOneFrame;

        [FieldOffset(98)] // size = 1
        public CBool NavWindowHasScrollY;

        [FieldOffset(99)] // size = 1
        public CBool MenuBarAppending;

        [FieldOffset(100)] // size = 8
        public Vector2 MenuBarOffset;

        [FieldOffset(108)] // size = 28
        public ImGuiMenuColumns MenuColumns;

        [FieldOffset(136)] // size = 4
        public int TreeDepth;

        [FieldOffset(140)] // size = 4
        public uint TreeJumpToParentOnPopMask;

        [FieldOffset(144)] // size = 16
        public ImVectorImGuiWindowPtr ChildWindows;

        [FieldOffset(160)] // size = 8
        public ImGuiStorage* StateStorage;

        [FieldOffset(168)] // size = 8
        public ImGuiOldColumns* CurrentColumns;

        [FieldOffset(176)] // size = 4
        public int CurrentTableIdx;

        [FieldOffset(180)] // size = 4
        public ImGuiLayoutType LayoutType;

        [FieldOffset(184)] // size = 4
        public ImGuiLayoutType ParentLayoutType;

        [FieldOffset(188)] // size = 4
        public float ItemWidth;

        [FieldOffset(192)] // size = 4
        public float TextWrapPos;

        [FieldOffset(200)] // size = 16
        public ImVectorFloat ItemWidthStack;

        [FieldOffset(216)] // size = 16
        public ImVectorFloat TextWrapPosStack;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct ImPoolImGuiTabBar
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImGuiTabBar Buf;

        [FieldOffset(16)] // size = 16
        public ImGuiStorage Map;

        [FieldOffset(32)] // size = 4
        public ImPoolIdx FreeIdx;

        [FieldOffset(36)] // size = 4
        public ImPoolIdx AliveCount;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct ImPoolImGuiTable
    {
        [FieldOffset(0)] // size = 16
        public ImVectorImGuiTable Buf;

        [FieldOffset(16)] // size = 16
        public ImGuiStorage Map;

        [FieldOffset(32)] // size = 4
        public ImPoolIdx FreeIdx;

        [FieldOffset(36)] // size = 4
        public ImPoolIdx AliveCount;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImRect
    {
        [FieldOffset(0)] // size = 8
        public Vector2 Min;

        [FieldOffset(8)] // size = 8
        public Vector2 Max;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImSpanImGuiTableCellData
    {
        [FieldOffset(0)] // size = 8
        public ImGuiTableCellData* Data;

        [FieldOffset(8)] // size = 8
        public ImGuiTableCellData* DataEnd;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImSpanImGuiTableColumn
    {
        [FieldOffset(0)] // size = 8
        public ImGuiTableColumn* Data;

        [FieldOffset(8)] // size = 8
        public ImGuiTableColumn* DataEnd;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImSpanImGuiTableColumnIdx
    {
        [FieldOffset(0)] // size = 8
        public ImGuiTableColumnIdx* Data;

        [FieldOffset(8)] // size = 8
        public ImGuiTableColumnIdx* DataEnd;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ImVec2
    {
        [FieldOffset(0)] // size = 4
        public float X;

        [FieldOffset(4)] // size = 4
        public float Y;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 2)]
    public struct ImVec2ih
    {
        [FieldOffset(0)] // size = 2
        public short X;

        [FieldOffset(2)] // size = 2
        public short Y;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImVec4
    {
        [FieldOffset(0)] // size = 4
        public float X;

        [FieldOffset(4)] // size = 4
        public float Y;

        [FieldOffset(8)] // size = 4
        public float Z;

        [FieldOffset(12)] // size = 4
        public float W;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorChar
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public CString _Data;

        public string Data
        {
            get
            {
                return CString.ToString(_Data);
            }
            set
            {
                _Data = CString.FromString(value);
            }
        }
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorConstCharPtr
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public CString* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorFloat
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public float* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImDrawChannel
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImDrawChannel* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImDrawCmd
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImDrawCmd* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImDrawIdx
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImDrawIdx* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImDrawListPtr
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImDrawList** Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImDrawVert
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImDrawVert* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImFontAtlasCustomRect
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImFontAtlasCustomRect* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImFontConfig
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImFontConfig* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImFontGlyph
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImFontGlyph* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImFontPtr
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImFont** Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiColorMod
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiColorMod* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiContextHook
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiContextHook* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiDockNodeSettings
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiDockNodeSettings* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiDockRequest
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiDockRequest* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiGroupData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiGroupData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiID
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiID* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiInputEvent
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiInputEvent* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiItemFlags
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiItemFlags* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiKeyRoutingData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiKeyRoutingData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiListClipperData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiListClipperData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiListClipperRange
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiListClipperRange* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiNavTreeNodeData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiNavTreeNodeData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiOldColumnData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiOldColumnData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiOldColumns
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiOldColumns* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiPlatformMonitor
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiPlatformMonitor* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiPopupData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiPopupData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiPtrOrIndex
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiPtrOrIndex* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiSettingsHandler
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiSettingsHandler* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiShrinkWidthItem
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiShrinkWidthItem* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiStackLevelInfo
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiStackLevelInfo* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiStoragePair
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiStoragePair* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiStyleMod
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiStyleMod* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiTabBar
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiTabBar* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiTabItem
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiTabItem* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiTable
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiTable* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiTableColumnSortSpecs
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiTableColumnSortSpecs* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiTableInstanceData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiTableInstanceData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiTableTempData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiTableTempData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiTextRange
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiTextRange* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiViewportPPtr
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiViewportP** Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiViewportPtr
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiViewport** Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiWindowPtr
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiWindow** Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImGuiWindowStackData
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImGuiWindowStackData* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImTextureID
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ImTextureID* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImU32
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public uint* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImVec2
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public Vector2* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImVec4
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public Vector4* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorImWchar
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public ushort* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorInt
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public int* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVectorUnsignedChar
    {
        [FieldOffset(0)] // size = 4
        public int Size;

        [FieldOffset(4)] // size = 4
        public int Capacity;

        [FieldOffset(8)] // size = 8
        public byte* Data;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 3628, Pack = 4)]
    public struct STBTexteditState
    {
        [FieldOffset(0)] // size = 4
        public int Cursor;

        [FieldOffset(4)] // size = 4
        public int SelectStart;

        [FieldOffset(8)] // size = 4
        public int SelectEnd;

        [FieldOffset(12)] // size = 1
        public byte InsertMode;

        [FieldOffset(16)] // size = 4
        public int RowCountPerPage;

        [FieldOffset(20)] // size = 1
        public byte CursorAtEndOfLine;

        [FieldOffset(21)] // size = 1
        public byte Initialized;

        [FieldOffset(22)] // size = 1
        public byte HasPreferredX;

        [FieldOffset(23)] // size = 1
        public byte SingleLine;

        [FieldOffset(24)] // size = 1
        public byte Padding1;

        [FieldOffset(25)] // size = 1
        public byte Padding2;

        [FieldOffset(26)] // size = 1
        public byte Padding3;

        [FieldOffset(28)] // size = 4
        public float PreferredX;

        [FieldOffset(32)] // size = 3596
        public StbUndoState Undostate;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 4)]
    public struct StbTexteditRow
    {
        [FieldOffset(0)] // size = 4
        public float X0;

        [FieldOffset(4)] // size = 4
        public float X1;

        [FieldOffset(8)] // size = 4
        public float BaselineYDelta;

        [FieldOffset(12)] // size = 4
        public float Ymin;

        [FieldOffset(16)] // size = 4
        public float Ymax;

        [FieldOffset(20)] // size = 4
        public int NumChars;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct StbUndoRecord
    {
        [FieldOffset(0)] // size = 4
        public int Where;

        [FieldOffset(4)] // size = 4
        public int InsertLength;

        [FieldOffset(8)] // size = 4
        public int DeleteLength;

        [FieldOffset(12)] // size = 4
        public int CharStorage;
    }

    [CNode(Kind = "Struct")]
    [StructLayout(LayoutKind.Explicit, Size = 3596, Pack = 4)]
    public struct StbUndoState
    {
        [FieldOffset(0)] // size = 1584
        public fixed byte _UndoRec[1584]; // StbUndoRecord[99]

        public readonly Span<StbUndoRecord> UndoRec
        {
            get
            {
                fixed (StbUndoState* @this = &this)
                {
                    var pointer = &@this->_UndoRec[0];
                    var span = new Span<StbUndoRecord>(pointer, 99);
                    return span;
                }
            }
        }

        [FieldOffset(1584)] // size = 1998
        public fixed byte _UndoChar[1998]; // ImWchar[999]

        public readonly Span<ushort> UndoChar
        {
            get
            {
                fixed (StbUndoState* @this = &this)
                {
                    var pointer = &@this->_UndoChar[0];
                    var span = new Span<ushort>(pointer, 999);
                    return span;
                }
            }
        }

        [FieldOffset(3582)] // size = 2
        public short UndoPoint;

        [FieldOffset(3584)] // size = 2
        public short RedoPoint;

        [FieldOffset(3588)] // size = 4
        public int UndoCharPoint;

        [FieldOffset(3592)] // size = 4
        public int RedoCharPoint;
    }

    [CNode(Kind = "Enum")]
    public enum ImDrawFlags : int
    {
        None = 0,
        Closed = 1,
        RoundCornersTopLeft = 16,
        RoundCornersTopRight = 32,
        RoundCornersBottomLeft = 64,
        RoundCornersBottomRight = 128,
        RoundCornersNone = 256,
        RoundCornersTop = 48,
        RoundCornersBottom = 192,
        RoundCornersLeft = 80,
        RoundCornersRight = 160,
        RoundCornersAll = 240,
        RoundCornersDefault = 240,
        RoundCornersMask = 496
    }

    [CNode(Kind = "Enum")]
    public enum ImDrawListFlags : int
    {
        None = 0,
        AntiAliasedLines = 1,
        AntiAliasedLinesUseTex = 2,
        AntiAliasedFill = 4,
        AllowVtxOffset = 8
    }

    [CNode(Kind = "Enum")]
    public enum ImFontAtlasFlags : int
    {
        None = 0,
        NoPowerOfTwoHeight = 1,
        NoMouseCursors = 2,
        NoBakedLines = 4
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiActivateFlags : int
    {
        None = 0,
        PreferInput = 1,
        PreferTweak = 2,
        TryToPreserveState = 4,
        FromTabbing = 8
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiAxis : int
    {
        None = -1,
        X = 0,
        Y = 1
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiBackendFlags : int
    {
        None = 0,
        HasGamepad = 1,
        HasMouseCursors = 2,
        HasSetMousePos = 4,
        RendererHasVtxOffset = 8,
        PlatformHasViewports = 1024,
        HasMouseHoveredViewport = 2048,
        RendererHasViewports = 4096
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiButtonFlags : int
    {
        None = 0,
        MouseButtonLeft = 1,
        MouseButtonRight = 2,
        MouseButtonMiddle = 4,
        MouseButtonMask = 7,
        MouseButtonDefault = 1
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiButtonFlagsPrivate : int
    {
        ImGuiButtonFlagsPressedOnClick = 16,
        ImGuiButtonFlagsPressedOnClickRelease = 32,
        ImGuiButtonFlagsPressedOnClickReleaseAnywhere = 64,
        ImGuiButtonFlagsPressedOnRelease = 128,
        ImGuiButtonFlagsPressedOnDoubleClick = 256,
        ImGuiButtonFlagsPressedOnDragDropHold = 512,
        ImGuiButtonFlagsRepeat = 1024,
        ImGuiButtonFlagsFlattenChildren = 2048,
        ImGuiButtonFlagsAllowOverlap = 4096,
        ImGuiButtonFlagsDontClosePopups = 8192,
        ImGuiButtonFlagsAlignTextBaseLine = 32768,
        ImGuiButtonFlagsNoKeyModifiers = 65536,
        ImGuiButtonFlagsNoHoldingActiveId = 131072,
        ImGuiButtonFlagsNoNavFocus = 262144,
        ImGuiButtonFlagsNoHoveredOnFocus = 524288,
        ImGuiButtonFlagsNoSetKeyOwner = 1048576,
        ImGuiButtonFlagsNoTestKeyOwner = 2097152,
        ImGuiButtonFlagsPressedOnMask = 1008,
        ImGuiButtonFlagsPressedOnDefault = 32
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiChildFlags : int
    {
        None = 0,
        Border = 1,
        AlwaysUseWindowPadding = 2,
        ResizeX = 4,
        ResizeY = 8,
        AutoResizeX = 16,
        AutoResizeY = 32,
        AlwaysAutoResize = 64,
        FrameStyle = 128
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiCol : int
    {
        Text = 0,
        TextDisabled = 1,
        WindowBg = 2,
        ChildBg = 3,
        PopupBg = 4,
        Border = 5,
        BorderShadow = 6,
        FrameBg = 7,
        FrameBgHovered = 8,
        FrameBgActive = 9,
        TitleBg = 10,
        TitleBgActive = 11,
        TitleBgCollapsed = 12,
        MenuBarBg = 13,
        ScrollbarBg = 14,
        ScrollbarGrab = 15,
        ScrollbarGrabHovered = 16,
        ScrollbarGrabActive = 17,
        CheckMark = 18,
        SliderGrab = 19,
        SliderGrabActive = 20,
        Button = 21,
        ButtonHovered = 22,
        ButtonActive = 23,
        Header = 24,
        HeaderHovered = 25,
        HeaderActive = 26,
        Separator = 27,
        SeparatorHovered = 28,
        SeparatorActive = 29,
        ResizeGrip = 30,
        ResizeGripHovered = 31,
        ResizeGripActive = 32,
        Tab = 33,
        TabHovered = 34,
        TabActive = 35,
        TabUnfocused = 36,
        TabUnfocusedActive = 37,
        DockingPreview = 38,
        DockingEmptyBg = 39,
        PlotLines = 40,
        PlotLinesHovered = 41,
        PlotHistogram = 42,
        PlotHistogramHovered = 43,
        TableHeaderBg = 44,
        TableBorderStrong = 45,
        TableBorderLight = 46,
        TableRowBg = 47,
        TableRowBgAlt = 48,
        TextSelectedBg = 49,
        DragDropTarget = 50,
        NavHighlight = 51,
        NavWindowingHighlight = 52,
        NavWindowingDimBg = 53,
        ModalWindowDimBg = 54,
        COUNT = 55
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiColorEditFlags : int
    {
        None = 0,
        NoAlpha = 2,
        NoPicker = 4,
        NoOptions = 8,
        NoSmallPreview = 16,
        NoInputs = 32,
        NoTooltip = 64,
        NoLabel = 128,
        NoSidePreview = 256,
        NoDragDrop = 512,
        NoBorder = 1024,
        AlphaBar = 65536,
        AlphaPreview = 131072,
        AlphaPreviewHalf = 262144,
        HDR = 524288,
        DisplayRGB = 1048576,
        DisplayHSV = 2097152,
        DisplayHex = 4194304,
        Uint8 = 8388608,
        Float = 16777216,
        PickerHueBar = 33554432,
        PickerHueWheel = 67108864,
        InputRGB = 134217728,
        InputHSV = 268435456,
        DefaultOptions = 177209344,
        DisplayMask = 7340032,
        DataTypeMask = 25165824,
        PickerMask = 100663296,
        InputMask = 402653184
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiComboFlags : int
    {
        None = 0,
        PopupAlignLeft = 1,
        HeightSmall = 2,
        HeightRegular = 4,
        HeightLarge = 8,
        HeightLargest = 16,
        NoArrowButton = 32,
        NoPreview = 64,
        WidthFitPreview = 128,
        HeightMask = 30
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiComboFlagsPrivate : int
    {
        ImGuiComboFlagsCustomPreview = 1048576
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiCond : int
    {
        None = 0,
        Always = 1,
        Once = 2,
        FirstUseEver = 4,
        Appearing = 8
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiConfigFlags : int
    {
        None = 0,
        NavEnableKeyboard = 1,
        NavEnableGamepad = 2,
        NavEnableSetMousePos = 4,
        NavNoCaptureKeyboard = 8,
        NoMouse = 16,
        NoMouseCursorChange = 32,
        DockingEnable = 64,
        ViewportsEnable = 1024,
        DpiEnableScaleViewports = 16384,
        DpiEnableScaleFonts = 32768,
        IsSRGB = 1048576,
        IsTouchScreen = 2097152
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiContextHookType : int
    {
        NewFramePre = 0,
        NewFramePost = 1,
        EndFramePre = 2,
        EndFramePost = 3,
        RenderPre = 4,
        RenderPost = 5,
        Shutdown = 6,
        PendingRemoval = 7
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDataAuthority : int
    {
        Auto = 0,
        DockNode = 1,
        Window = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDataType : int
    {
        S8 = 0,
        U8 = 1,
        S16 = 2,
        U16 = 3,
        S32 = 4,
        U32 = 5,
        S64 = 6,
        U64 = 7,
        Float = 8,
        Double = 9,
        COUNT = 10
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDataTypePrivate : int
    {
        ImGuiDataTypeString = 11,
        ImGuiDataTypePointer = 12,
        ImGuiDataTypeID = 13
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDebugLogFlags : int
    {
        None = 0,
        EventActiveId = 1,
        EventFocus = 2,
        EventPopup = 4,
        EventNav = 8,
        EventClipper = 16,
        EventSelection = 32,
        EventIO = 64,
        EventDocking = 128,
        EventViewport = 256,
        EventMask = 511,
        OutputToTTY = 1048576,
        OutputToTestEngine = 2097152
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDir : int
    {
        None = -1,
        Left = 0,
        Right = 1,
        Up = 2,
        Down = 3,
        COUNT = 4
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDockNodeFlags : int
    {
        None = 0,
        KeepAliveOnly = 1,
        NoDockingOverCentralNode = 4,
        PassthruCentralNode = 8,
        NoDockingSplit = 16,
        NoResize = 32,
        AutoHideTabBar = 64,
        NoUndocking = 128
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDockNodeFlagsPrivate : int
    {
        ImGuiDockNodeFlagsDockSpace = 1024,
        ImGuiDockNodeFlagsCentralNode = 2048,
        ImGuiDockNodeFlagsNoTabBar = 4096,
        ImGuiDockNodeFlagsHiddenTabBar = 8192,
        ImGuiDockNodeFlagsNoWindowMenuButton = 16384,
        ImGuiDockNodeFlagsNoCloseButton = 32768,
        ImGuiDockNodeFlagsNoResizeX = 65536,
        ImGuiDockNodeFlagsNoResizeY = 131072,
        ImGuiDockNodeFlagsNoDockingSplitOther = 524288,
        ImGuiDockNodeFlagsNoDockingOverMe = 1048576,
        ImGuiDockNodeFlagsNoDockingOverOther = 2097152,
        ImGuiDockNodeFlagsNoDockingOverEmpty = 4194304,
        ImGuiDockNodeFlagsNoDocking = 7864336,
        ImGuiDockNodeFlagsSharedFlagsInheritMask = -1,
        ImGuiDockNodeFlagsNoResizeFlagsMask = 196640,
        ImGuiDockNodeFlagsLocalFlagsTransferMask = 260208,
        ImGuiDockNodeFlagsSavedFlagsMask = 261152
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDockNodeState : int
    {
        Unknown = 0,
        HostWindowHiddenBecauseSingleWindow = 1,
        HostWindowHiddenBecauseWindowsAreResizing = 2,
        HostWindowVisible = 3
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiDragDropFlags : int
    {
        None = 0,
        SourceNoPreviewTooltip = 1,
        SourceNoDisableHover = 2,
        SourceNoHoldToOpenOthers = 4,
        SourceAllowNullID = 8,
        SourceExtern = 16,
        SourceAutoExpirePayload = 32,
        AcceptBeforeDelivery = 1024,
        AcceptNoDrawDefaultRect = 2048,
        AcceptNoPreviewTooltip = 4096,
        AcceptPeekOnly = 3072
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiFocusRequestFlags : int
    {
        None = 0,
        RestoreFocusedChild = 1,
        UnlessBelowModal = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiFocusedFlags : int
    {
        None = 0,
        ChildWindows = 1,
        RootWindow = 2,
        AnyWindow = 4,
        NoPopupHierarchy = 8,
        DockHierarchy = 16,
        RootAndChildWindows = 3
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiHoveredFlags : int
    {
        None = 0,
        ChildWindows = 1,
        RootWindow = 2,
        AnyWindow = 4,
        NoPopupHierarchy = 8,
        DockHierarchy = 16,
        AllowWhenBlockedByPopup = 32,
        AllowWhenBlockedByActiveItem = 128,
        AllowWhenOverlappedByItem = 256,
        AllowWhenOverlappedByWindow = 512,
        AllowWhenDisabled = 1024,
        NoNavOverride = 2048,
        AllowWhenOverlapped = 768,
        RectOnly = 928,
        RootAndChildWindows = 3,
        ForTooltip = 4096,
        Stationary = 8192,
        DelayNone = 16384,
        DelayShort = 32768,
        DelayNormal = 65536,
        NoSharedDelay = 131072
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiHoveredFlagsPrivate : int
    {
        ImGuiHoveredFlagsDelayMask = 245760,
        ImGuiHoveredFlagsAllowedMaskForIsWindowHovered = 12479,
        ImGuiHoveredFlagsAllowedMaskForIsItemHovered = 262048
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiInputEventType : int
    {
        None = 0,
        MousePos = 1,
        MouseWheel = 2,
        MouseButton = 3,
        MouseViewport = 4,
        Key = 5,
        Text = 6,
        Focus = 7,
        COUNT = 8
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiInputFlags : int
    {
        None = 0,
        Repeat = 1,
        RepeatRateDefault = 2,
        RepeatRateNavMove = 4,
        RepeatRateNavTweak = 8,
        RepeatUntilRelease = 16,
        RepeatUntilKeyModsChange = 32,
        RepeatUntilKeyModsChangeFromNone = 64,
        RepeatUntilOtherKeyPress = 128,
        CondHovered = 256,
        CondActive = 512,
        CondDefault = 768,
        CondMask = 768,
        LockThisFrame = 1024,
        LockUntilRelease = 2048,
        RouteFocused = 4096,
        RouteGlobalLow = 8192,
        RouteGlobal = 16384,
        RouteGlobalHigh = 32768,
        RouteMask = 61440,
        RouteAlways = 65536,
        RouteUnlessBgFocused = 131072,
        RouteExtraMask = 196608,
        RepeatRateMask = 14,
        RepeatUntilMask = 240,
        RepeatMask = 255,
        SupportedByIsKeyPressed = 255,
        SupportedByIsMouseClicked = 1,
        SupportedByShortcut = 258303,
        SupportedBySetKeyOwner = 3072,
        SupportedBySetItemKeyOwner = 3840
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiInputSource : int
    {
        None = 0,
        Mouse = 1,
        Keyboard = 2,
        Gamepad = 3,
        Clipboard = 4,
        COUNT = 5
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiInputTextFlags : int
    {
        None = 0,
        CharsDecimal = 1,
        CharsHexadecimal = 2,
        CharsUppercase = 4,
        CharsNoBlank = 8,
        AutoSelectAll = 16,
        EnterReturnsTrue = 32,
        CallbackCompletion = 64,
        CallbackHistory = 128,
        CallbackAlways = 256,
        CallbackCharFilter = 512,
        AllowTabInput = 1024,
        CtrlEnterForNewLine = 2048,
        NoHorizontalScroll = 4096,
        AlwaysOverwrite = 8192,
        ReadOnly = 16384,
        Password = 32768,
        NoUndoRedo = 65536,
        CharsScientific = 131072,
        CallbackResize = 262144,
        CallbackEdit = 524288,
        EscapeClearsAll = 1048576
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiInputTextFlagsPrivate : int
    {
        ImGuiInputTextFlagsMultiline = 67108864,
        ImGuiInputTextFlagsNoMarkEdited = 134217728,
        ImGuiInputTextFlagsMergedItem = 268435456
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiItemFlags : int
    {
        None = 0,
        NoTabStop = 1,
        ButtonRepeat = 2,
        Disabled = 4,
        NoNav = 8,
        NoNavDefaultFocus = 16,
        SelectableDontClosePopup = 32,
        MixedValue = 64,
        ReadOnly = 128,
        NoWindowHoverableCheck = 256,
        AllowOverlap = 512,
        Inputable = 1024,
        HasSelectionUserData = 2048
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiItemStatusFlags : int
    {
        None = 0,
        HoveredRect = 1,
        HasDisplayRect = 2,
        Edited = 4,
        ToggledSelection = 8,
        ToggledOpen = 16,
        HasDeactivated = 32,
        Deactivated = 64,
        HoveredWindow = 128,
        Visible = 256,
        HasClipRect = 512
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiKey : int
    {
        None = 0,
        Tab = 512,
        LeftArrow = 513,
        RightArrow = 514,
        UpArrow = 515,
        DownArrow = 516,
        PageUp = 517,
        PageDown = 518,
        Home = 519,
        End = 520,
        Insert = 521,
        Delete = 522,
        Backspace = 523,
        Space = 524,
        Enter = 525,
        Escape = 526,
        LeftCtrl = 527,
        LeftShift = 528,
        LeftAlt = 529,
        LeftSuper = 530,
        RightCtrl = 531,
        RightShift = 532,
        RightAlt = 533,
        RightSuper = 534,
        Menu = 535,
        _0 = 536,
        _1 = 537,
        _2 = 538,
        _3 = 539,
        _4 = 540,
        _5 = 541,
        _6 = 542,
        _7 = 543,
        _8 = 544,
        _9 = 545,
        A = 546,
        B = 547,
        C = 548,
        D = 549,
        E = 550,
        F = 551,
        G = 552,
        H = 553,
        I = 554,
        J = 555,
        K = 556,
        L = 557,
        M = 558,
        N = 559,
        O = 560,
        P = 561,
        Q = 562,
        R = 563,
        S = 564,
        T = 565,
        U = 566,
        V = 567,
        W = 568,
        X = 569,
        Y = 570,
        Z = 571,
        F1 = 572,
        F2 = 573,
        F3 = 574,
        F4 = 575,
        F5 = 576,
        F6 = 577,
        F7 = 578,
        F8 = 579,
        F9 = 580,
        F10 = 581,
        F11 = 582,
        F12 = 583,
        F13 = 584,
        F14 = 585,
        F15 = 586,
        F16 = 587,
        F17 = 588,
        F18 = 589,
        F19 = 590,
        F20 = 591,
        F21 = 592,
        F22 = 593,
        F23 = 594,
        F24 = 595,
        Apostrophe = 596,
        Comma = 597,
        Minus = 598,
        Period = 599,
        Slash = 600,
        Semicolon = 601,
        Equal = 602,
        LeftBracket = 603,
        Backslash = 604,
        RightBracket = 605,
        GraveAccent = 606,
        CapsLock = 607,
        ScrollLock = 608,
        NumLock = 609,
        PrintScreen = 610,
        Pause = 611,
        Keypad0 = 612,
        Keypad1 = 613,
        Keypad2 = 614,
        Keypad3 = 615,
        Keypad4 = 616,
        Keypad5 = 617,
        Keypad6 = 618,
        Keypad7 = 619,
        Keypad8 = 620,
        Keypad9 = 621,
        KeypadDecimal = 622,
        KeypadDivide = 623,
        KeypadMultiply = 624,
        KeypadSubtract = 625,
        KeypadAdd = 626,
        KeypadEnter = 627,
        KeypadEqual = 628,
        AppBack = 629,
        AppForward = 630,
        GamepadStart = 631,
        GamepadBack = 632,
        GamepadFaceLeft = 633,
        GamepadFaceRight = 634,
        GamepadFaceUp = 635,
        GamepadFaceDown = 636,
        GamepadDpadLeft = 637,
        GamepadDpadRight = 638,
        GamepadDpadUp = 639,
        GamepadDpadDown = 640,
        GamepadL1 = 641,
        GamepadR1 = 642,
        GamepadL2 = 643,
        GamepadR2 = 644,
        GamepadL3 = 645,
        GamepadR3 = 646,
        GamepadLStickLeft = 647,
        GamepadLStickRight = 648,
        GamepadLStickUp = 649,
        GamepadLStickDown = 650,
        GamepadRStickLeft = 651,
        GamepadRStickRight = 652,
        GamepadRStickUp = 653,
        GamepadRStickDown = 654,
        MouseLeft = 655,
        MouseRight = 656,
        MouseMiddle = 657,
        MouseX1 = 658,
        MouseX2 = 659,
        MouseWheelX = 660,
        MouseWheelY = 661,
        ReservedForModCtrl = 662,
        ReservedForModShift = 663,
        ReservedForModAlt = 664,
        ReservedForModSuper = 665,
        COUNT = 666,
        ImGuiModNone = 0,
        ImGuiModCtrl = 4096,
        ImGuiModShift = 8192,
        ImGuiModAlt = 16384,
        ImGuiModSuper = 32768,
        ImGuiModShortcut = 2048,
        ImGuiModMask = 63488,
        NamedKeyBEGIN = 512,
        NamedKeyEND = 666,
        NamedKeyCOUNT = 154,
        KeysDataSIZE = 154,
        KeysDataOFFSET = 512
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiLayoutType : int
    {
        Horizontal = 0,
        Vertical = 1
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiLocKey : int
    {
        VersionStr = 0,
        TableSizeOne = 1,
        TableSizeAllFit = 2,
        TableSizeAllDefault = 3,
        TableResetOrder = 4,
        WindowingMainMenuBar = 5,
        WindowingPopup = 6,
        WindowingUntitled = 7,
        DockingHideTabBar = 8,
        DockingHoldShiftToDock = 9,
        DockingDragToUndockOrMoveNode = 10,
        COUNT = 11
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiLogType : int
    {
        None = 0,
        TTY = 1,
        File = 2,
        Buffer = 3,
        Clipboard = 4
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiMouseButton : int
    {
        Left = 0,
        Right = 1,
        Middle = 2,
        COUNT = 5
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiMouseCursor : int
    {
        None = -1,
        Arrow = 0,
        TextInput = 1,
        ResizeAll = 2,
        ResizeNS = 3,
        ResizeEW = 4,
        ResizeNESW = 5,
        ResizeNWSE = 6,
        Hand = 7,
        NotAllowed = 8,
        COUNT = 9
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiMouseSource : int
    {
        Mouse = 0,
        TouchScreen = 1,
        Pen = 2,
        COUNT = 3
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiNavHighlightFlags : int
    {
        None = 0,
        TypeDefault = 1,
        TypeThin = 2,
        AlwaysDraw = 4,
        NoRounding = 8
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiNavLayer : int
    {
        Main = 0,
        Menu = 1,
        COUNT = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiNavMoveFlags : int
    {
        None = 0,
        LoopX = 1,
        LoopY = 2,
        WrapX = 4,
        WrapY = 8,
        WrapMask = 15,
        AllowCurrentNavId = 16,
        AlsoScoreVisibleSet = 32,
        ScrollToEdgeY = 64,
        Forwarded = 128,
        DebugNoResult = 256,
        FocusApi = 512,
        IsTabbing = 1024,
        IsPageMove = 2048,
        Activate = 4096,
        NoSelect = 8192,
        NoSetNavHighlight = 16384
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiNextItemDataFlags : int
    {
        None = 0,
        HasWidth = 1,
        HasOpen = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiNextWindowDataFlags : int
    {
        None = 0,
        HasPos = 1,
        HasSize = 2,
        HasContentSize = 4,
        HasCollapsed = 8,
        HasSizeConstraint = 16,
        HasFocus = 32,
        HasBgAlpha = 64,
        HasScroll = 128,
        HasChildFlags = 256,
        HasViewport = 512,
        HasDock = 1024,
        HasWindowClass = 2048
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiOldColumnFlags : int
    {
        None = 0,
        NoBorder = 1,
        NoResize = 2,
        NoPreserveWidths = 4,
        NoForceWithinWindow = 8,
        GrowParentContentsSize = 16
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiPlotType : int
    {
        Lines = 0,
        Histogram = 1
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiPopupFlags : int
    {
        None = 0,
        MouseButtonLeft = 0,
        MouseButtonRight = 1,
        MouseButtonMiddle = 2,
        MouseButtonMask = 31,
        MouseButtonDefault = 1,
        NoOpenOverExistingPopup = 32,
        NoOpenOverItems = 64,
        AnyPopupId = 128,
        AnyPopupLevel = 256,
        AnyPopup = 384
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiPopupPositionPolicy : int
    {
        Default = 0,
        ComboBox = 1,
        Tooltip = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiScrollFlags : int
    {
        None = 0,
        KeepVisibleEdgeX = 1,
        KeepVisibleEdgeY = 2,
        KeepVisibleCenterX = 4,
        KeepVisibleCenterY = 8,
        AlwaysCenterX = 16,
        AlwaysCenterY = 32,
        NoScrollParent = 64,
        MaskX = 21,
        MaskY = 42
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiSelectableFlags : int
    {
        None = 0,
        DontClosePopups = 1,
        SpanAllColumns = 2,
        AllowDoubleClick = 4,
        Disabled = 8,
        AllowOverlap = 16
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiSelectableFlagsPrivate : int
    {
        ImGuiSelectableFlagsNoHoldingActiveID = 1048576,
        ImGuiSelectableFlagsSelectOnNav = 2097152,
        ImGuiSelectableFlagsSelectOnClick = 4194304,
        ImGuiSelectableFlagsSelectOnRelease = 8388608,
        ImGuiSelectableFlagsSpanAvailWidth = 16777216,
        ImGuiSelectableFlagsSetNavIdOnHover = 33554432,
        ImGuiSelectableFlagsNoPadWithHalfSpacing = 67108864,
        ImGuiSelectableFlagsNoSetKeyOwner = 134217728
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiSeparatorFlags : int
    {
        None = 0,
        Horizontal = 1,
        Vertical = 2,
        SpanAllColumns = 4
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiSliderFlags : int
    {
        None = 0,
        AlwaysClamp = 16,
        Logarithmic = 32,
        NoRoundToFormat = 64,
        NoInput = 128,
        InvalidMask = 1879048207
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiSliderFlagsPrivate : int
    {
        ImGuiSliderFlagsVertical = 1048576,
        ImGuiSliderFlagsReadOnly = 2097152
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiSortDirection : int
    {
        None = 0,
        Ascending = 1,
        Descending = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiStyleVar : int
    {
        Alpha = 0,
        DisabledAlpha = 1,
        WindowPadding = 2,
        WindowRounding = 3,
        WindowBorderSize = 4,
        WindowMinSize = 5,
        WindowTitleAlign = 6,
        ChildRounding = 7,
        ChildBorderSize = 8,
        PopupRounding = 9,
        PopupBorderSize = 10,
        FramePadding = 11,
        FrameRounding = 12,
        FrameBorderSize = 13,
        ItemSpacing = 14,
        ItemInnerSpacing = 15,
        IndentSpacing = 16,
        CellPadding = 17,
        ScrollbarSize = 18,
        ScrollbarRounding = 19,
        GrabMinSize = 20,
        GrabRounding = 21,
        TabRounding = 22,
        TabBarBorderSize = 23,
        ButtonTextAlign = 24,
        SelectableTextAlign = 25,
        SeparatorTextBorderSize = 26,
        SeparatorTextAlign = 27,
        SeparatorTextPadding = 28,
        DockingSeparatorSize = 29,
        COUNT = 30
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTabBarFlags : int
    {
        None = 0,
        Reorderable = 1,
        AutoSelectNewTabs = 2,
        TabListPopupButton = 4,
        NoCloseWithMiddleMouseButton = 8,
        NoTabListScrollingButtons = 16,
        NoTooltip = 32,
        FittingPolicyResizeDown = 64,
        FittingPolicyScroll = 128,
        FittingPolicyMask = 192,
        FittingPolicyDefault = 64
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTabBarFlagsPrivate : int
    {
        ImGuiTabBarFlagsDockNode = 1048576,
        ImGuiTabBarFlagsIsFocused = 2097152,
        ImGuiTabBarFlagsSaveSettings = 4194304
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTabItemFlags : int
    {
        None = 0,
        UnsavedDocument = 1,
        SetSelected = 2,
        NoCloseWithMiddleMouseButton = 4,
        NoPushId = 8,
        NoTooltip = 16,
        NoReorder = 32,
        Leading = 64,
        Trailing = 128,
        NoAssumedClosure = 256
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTabItemFlagsPrivate : int
    {
        ImGuiTabItemFlagsSectionMask = 192,
        ImGuiTabItemFlagsNoCloseButton = 1048576,
        ImGuiTabItemFlagsButton = 2097152,
        ImGuiTabItemFlagsUnsorted = 4194304
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTableBgTarget : int
    {
        None = 0,
        RowBg0 = 1,
        RowBg1 = 2,
        CellBg = 3
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTableColumnFlags : int
    {
        None = 0,
        Disabled = 1,
        DefaultHide = 2,
        DefaultSort = 4,
        WidthStretch = 8,
        WidthFixed = 16,
        NoResize = 32,
        NoReorder = 64,
        NoHide = 128,
        NoClip = 256,
        NoSort = 512,
        NoSortAscending = 1024,
        NoSortDescending = 2048,
        NoHeaderLabel = 4096,
        NoHeaderWidth = 8192,
        PreferSortAscending = 16384,
        PreferSortDescending = 32768,
        IndentEnable = 65536,
        IndentDisable = 131072,
        AngledHeader = 262144,
        IsEnabled = 16777216,
        IsVisible = 33554432,
        IsSorted = 67108864,
        IsHovered = 134217728,
        WidthMask = 24,
        IndentMask = 196608,
        StatusMask = 251658240,
        NoDirectResize = 1073741824
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTableFlags : int
    {
        None = 0,
        Resizable = 1,
        Reorderable = 2,
        Hideable = 4,
        Sortable = 8,
        NoSavedSettings = 16,
        ContextMenuInBody = 32,
        RowBg = 64,
        BordersInnerH = 128,
        BordersOuterH = 256,
        BordersInnerV = 512,
        BordersOuterV = 1024,
        BordersH = 384,
        BordersV = 1536,
        BordersInner = 640,
        BordersOuter = 1280,
        Borders = 1920,
        NoBordersInBody = 2048,
        NoBordersInBodyUntilResize = 4096,
        SizingFixedFit = 8192,
        SizingFixedSame = 16384,
        SizingStretchProp = 24576,
        SizingStretchSame = 32768,
        NoHostExtendX = 65536,
        NoHostExtendY = 131072,
        NoKeepColumnsVisible = 262144,
        PreciseWidths = 524288,
        NoClip = 1048576,
        PadOuterX = 2097152,
        NoPadOuterX = 4194304,
        NoPadInnerX = 8388608,
        ScrollX = 16777216,
        ScrollY = 33554432,
        SortMulti = 67108864,
        SortTristate = 134217728,
        HighlightHoveredColumn = 268435456,
        SizingMask = 57344
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTableRowFlags : int
    {
        None = 0,
        Headers = 1
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTextFlags : int
    {
        None = 0,
        NoWidthForLargeClippedText = 1
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTooltipFlags : int
    {
        None = 0,
        OverridePrevious = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTreeNodeFlags : int
    {
        None = 0,
        Selected = 1,
        Framed = 2,
        AllowOverlap = 4,
        NoTreePushOnOpen = 8,
        NoAutoOpenOnLog = 16,
        DefaultOpen = 32,
        OpenOnDoubleClick = 64,
        OpenOnArrow = 128,
        Leaf = 256,
        Bullet = 512,
        FramePadding = 1024,
        SpanAvailWidth = 2048,
        SpanFullWidth = 4096,
        SpanAllColumns = 8192,
        NavLeftJumpsBackHere = 16384,
        CollapsingHeader = 26
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTreeNodeFlagsPrivate : int
    {
        ImGuiTreeNodeFlagsClipLabelForTrailingButton = 1048576,
        ImGuiTreeNodeFlagsUpsideDownArrow = 2097152
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiTypingSelectFlags : int
    {
        None = 0,
        AllowBackspace = 1,
        AllowSingleCharMode = 2
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiViewportFlags : int
    {
        None = 0,
        IsPlatformWindow = 1,
        IsPlatformMonitor = 2,
        OwnedByApp = 4,
        NoDecoration = 8,
        NoTaskBarIcon = 16,
        NoFocusOnAppearing = 32,
        NoFocusOnClick = 64,
        NoInputs = 128,
        NoRendererClear = 256,
        NoAutoMerge = 512,
        TopMost = 1024,
        CanHostOtherWindows = 2048,
        IsMinimized = 4096,
        IsFocused = 8192
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiWindowDockStyleCol : int
    {
        Text = 0,
        Tab = 1,
        TabHovered = 2,
        TabActive = 3,
        TabUnfocused = 4,
        TabUnfocusedActive = 5,
        COUNT = 6
    }

    [CNode(Kind = "Enum")]
    public enum ImGuiWindowFlags : int
    {
        None = 0,
        NoTitleBar = 1,
        NoResize = 2,
        NoMove = 4,
        NoScrollbar = 8,
        NoScrollWithMouse = 16,
        NoCollapse = 32,
        AlwaysAutoResize = 64,
        NoBackground = 128,
        NoSavedSettings = 256,
        NoMouseInputs = 512,
        MenuBar = 1024,
        HorizontalScrollbar = 2048,
        NoFocusOnAppearing = 4096,
        NoBringToFrontOnFocus = 8192,
        AlwaysVerticalScrollbar = 16384,
        AlwaysHorizontalScrollbar = 32768,
        NoNavInputs = 65536,
        NoNavFocus = 131072,
        UnsavedDocument = 262144,
        NoDocking = 524288,
        NoNav = 196608,
        NoDecoration = 43,
        NoInputs = 197120,
        NavFlattened = 8388608,
        ChildWindow = 16777216,
        Tooltip = 33554432,
        Popup = 67108864,
        Modal = 134217728,
        ChildMenu = 268435456,
        DockNodeHost = 536870912
    }

    [CNode(Kind = "OpaqueType")]
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiDockNode
    {
    }

    [CNode(Kind = "OpaqueType")]
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiDockNodeSettings
    {
    }

    [CNode(Kind = "OpaqueType")]
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiDockRequest
    {
    }

    [CNode(Kind = "OpaqueType")]
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiStackLevelInfo
    {
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImBitArrayPtr
    {
        [FieldOffset(0)]
        public uint* Data;

        public static implicit operator uint*(ImBitArrayPtr data) => data.Data;
        public static implicit operator ImBitArrayPtr(uint* data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImDrawCallback
    {
        [FieldOffset(0)]
        public FnPtr_ImDrawListPtr_ImDrawCmdPtr_Void Data;

        public static implicit operator FnPtr_ImDrawListPtr_ImDrawCmdPtr_Void(ImDrawCallback data) => data.Data;
        public static implicit operator ImDrawCallback(FnPtr_ImDrawListPtr_ImDrawCmdPtr_Void data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
    public struct ImDrawIdx
    {
        [FieldOffset(0)]
        public ushort Data;

        public static implicit operator ushort(ImDrawIdx data) => data.Data;
        public static implicit operator ImDrawIdx(ushort data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImFileHandle
    {
        [FieldOffset(0)]
        public int* Data;

        public static implicit operator int*(ImFileHandle data) => data.Data;
        public static implicit operator ImFileHandle(int* data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiContextHookCallback
    {
        [FieldOffset(0)]
        public FnPtr_ImGuiContextPtr_ImGuiContextHookPtr_Void Data;

        public static implicit operator FnPtr_ImGuiContextPtr_ImGuiContextHookPtr_Void(ImGuiContextHookCallback data) => data.Data;
        public static implicit operator ImGuiContextHookCallback(FnPtr_ImGuiContextPtr_ImGuiContextHookPtr_Void data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiErrorLogCallback
    {
        [FieldOffset(0)]
        public FnPtr_VoidPtr_CString_Void Data;

        public static implicit operator FnPtr_VoidPtr_CString_Void(ImGuiErrorLogCallback data) => data.Data;
        public static implicit operator ImGuiErrorLogCallback(FnPtr_VoidPtr_CString_Void data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiID
    {
        [FieldOffset(0)]
        public uint Data;

        public static implicit operator uint(ImGuiID data) => data.Data;
        public static implicit operator ImGuiID(uint data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiInputTextCallback
    {
        [FieldOffset(0)]
        public FnPtr_ImGuiInputTextCallbackDataPtr_Int Data;

        public static implicit operator FnPtr_ImGuiInputTextCallbackDataPtr_Int(ImGuiInputTextCallback data) => data.Data;
        public static implicit operator ImGuiInputTextCallback(FnPtr_ImGuiInputTextCallbackDataPtr_Int data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiKeyChord
    {
        [FieldOffset(0)]
        public int Data;

        public static implicit operator int(ImGuiKeyChord data) => data.Data;
        public static implicit operator ImGuiKeyChord(int data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
    public struct ImGuiKeyRoutingIndex
    {
        [FieldOffset(0)]
        public short Data;

        public static implicit operator short(ImGuiKeyRoutingIndex data) => data.Data;
        public static implicit operator ImGuiKeyRoutingIndex(short data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiMemAllocFunc
    {
        [FieldOffset(0)]
        public FnPtr_Int_VoidPtr_VoidPtr Data;

        public static implicit operator FnPtr_Int_VoidPtr_VoidPtr(ImGuiMemAllocFunc data) => data.Data;
        public static implicit operator ImGuiMemAllocFunc(FnPtr_Int_VoidPtr_VoidPtr data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiMemFreeFunc
    {
        [FieldOffset(0)]
        public FnPtr_VoidPtr_VoidPtr_Void Data;

        public static implicit operator FnPtr_VoidPtr_VoidPtr_Void(ImGuiMemFreeFunc data) => data.Data;
        public static implicit operator ImGuiMemFreeFunc(FnPtr_VoidPtr_VoidPtr_Void data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiSelectionUserData
    {
        [FieldOffset(0)]
        public long Data;

        public static implicit operator long(ImGuiSelectionUserData data) => data.Data;
        public static implicit operator ImGuiSelectionUserData(long data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImGuiSizeCallback
    {
        [FieldOffset(0)]
        public FnPtr_ImGuiSizeCallbackDataPtr_Void Data;

        public static implicit operator FnPtr_ImGuiSizeCallbackDataPtr_Void(ImGuiSizeCallback data) => data.Data;
        public static implicit operator ImGuiSizeCallback(FnPtr_ImGuiSizeCallbackDataPtr_Void data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
    public struct ImGuiTableColumnIdx
    {
        [FieldOffset(0)]
        public short Data;

        public static implicit operator short(ImGuiTableColumnIdx data) => data.Data;
        public static implicit operator ImGuiTableColumnIdx(short data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
    public struct ImGuiTableDrawChannelIdx
    {
        [FieldOffset(0)]
        public ushort Data;

        public static implicit operator ushort(ImGuiTableDrawChannelIdx data) => data.Data;
        public static implicit operator ImGuiTableDrawChannelIdx(ushort data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImPoolIdx
    {
        [FieldOffset(0)]
        public int Data;

        public static implicit operator int(ImPoolIdx data) => data.Data;
        public static implicit operator ImPoolIdx(int data) => new() { Data = data };
    }

    [CNode(Kind = "TypeAlias")]
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImTextureID
    {
        [FieldOffset(0)]
        public void* Data;

        public static implicit operator void*(ImTextureID data) => data.Data;
        public static implicit operator ImTextureID(void* data) => new() { Data = data };
    }

    [CNode(Kind = "MacroObject")]
    public const int ImguiHasDock = 1;

    #endregion

    public static unsafe partial class ImGui
    {

        #region API

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igAcceptDragDropPayload")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiPayload* AcceptDragDropPayload(CString type, ImGuiDragDropFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igActivateItemByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ActivateItemByID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igAddContextHook")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID AddContextHook(ImGuiContext* context, ImGuiContextHook* hook);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igAddDrawListToDrawDataEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void AddDrawListToDrawDataEx(ImDrawData* drawData, ImVectorImDrawListPtr* outList, ImDrawList* drawList);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igAddSettingsHandler")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void AddSettingsHandler(ImGuiSettingsHandler* handler);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igAlignTextToFramePadding")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void AlignTextToFramePadding();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igArrowButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ArrowButton(CString strId, ImGuiDir dir);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igArrowButtonEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ArrowButtonEx(CString strId, ImGuiDir dir, Vector2 sizeArg, ImGuiButtonFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBegin")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool Begin(CString name, CBool* pOpen, ImGuiWindowFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginChildEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginChildEx(CString name, ImGuiID id, Vector2 sizeArg, ImGuiChildFlags childFlags, ImGuiWindowFlags windowFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginChild_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginChildID(ImGuiID id, Vector2 size, ImGuiChildFlags childFlags, ImGuiWindowFlags windowFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginChild_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginChildStr(CString strId, Vector2 size, ImGuiChildFlags childFlags, ImGuiWindowFlags windowFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginColumns")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BeginColumns(CString strId, int count, ImGuiOldColumnFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginCombo")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginCombo(CString label, CString previewValue, ImGuiComboFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginComboPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginComboPopup(ImGuiID popupId, ImRect bb, ImGuiComboFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginComboPreview")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginComboPreview();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginDisabled")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BeginDisabled(CBool disabled);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginDockableDragDropSource")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BeginDockableDragDropSource(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginDockableDragDropTarget")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BeginDockableDragDropTarget(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginDocked")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BeginDocked(ImGuiWindow* window, CBool* pOpen);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginDragDropSource")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginDragDropSource(ImGuiDragDropFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginDragDropTarget")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginDragDropTarget();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginDragDropTargetCustom")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginDragDropTargetCustom(ImRect bb, ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginGroup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BeginGroup();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginItemTooltip")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginItemTooltip();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginListBox")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginListBox(CString label, Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginMainMenuBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginMainMenuBar();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginMenu")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginMenu(CString label, CBool enabled);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginMenuBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginMenuBar();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginMenuEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginMenuEx(CString label, CString icon, CBool enabled);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginPopup(CString strId, ImGuiWindowFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginPopupContextItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginPopupContextItem(CString strId, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginPopupContextVoid")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginPopupContextVoid(CString strId, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginPopupContextWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginPopupContextWindow(CString strId, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginPopupEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginPopupEx(ImGuiID id, ImGuiWindowFlags extraFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginPopupModal")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginPopupModal(CString name, CBool* pOpen, ImGuiWindowFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTabBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTabBar(CString strId, ImGuiTabBarFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTabBarEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTabBarEx(ImGuiTabBar* tabBar, ImRect bb, ImGuiTabBarFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTabItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTabItem(CString label, CBool* pOpen, ImGuiTabItemFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTable(CString strId, int column, ImGuiTableFlags flags, Vector2 outerSize, float innerWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTableEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTableEx(CString name, ImGuiID id, int columnsCount, ImGuiTableFlags flags, Vector2 outerSize, float innerWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTooltip")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTooltip();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTooltipEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTooltipEx(ImGuiTooltipFlags tooltipFlags, ImGuiWindowFlags extraWindowFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginTooltipHidden")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginTooltipHidden();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBeginViewportSideBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool BeginViewportSideBar(CString name, ImGuiViewport* viewport, ImGuiDir dir, float size, ImGuiWindowFlags windowFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBringWindowToDisplayBack")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BringWindowToDisplayBack(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBringWindowToDisplayBehind")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BringWindowToDisplayBehind(ImGuiWindow* window, ImGuiWindow* aboveWindow);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBringWindowToDisplayFront")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BringWindowToDisplayFront(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBringWindowToFocusFront")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BringWindowToFocusFront(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBullet")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Bullet();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBulletText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BulletText(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igBulletTextV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void BulletTextV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool Button(CString label, Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igButtonBehavior")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ButtonBehavior(ImRect bb, ImGuiID id, CBool* outHovered, CBool* outHeld, ImGuiButtonFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igButtonEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ButtonEx(CString label, Vector2 sizeArg, ImGuiButtonFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCalcItemSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void CalcItemSize(Vector2* pOut, Vector2 size, float defaultW, float defaultH);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCalcItemWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float CalcItemWidth();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCalcRoundingFlagsForRectInRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawFlags CalcRoundingFlagsForRectInRect(ImRect rIn, ImRect rOuter, float threshold);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCalcTextSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void CalcTextSize(Vector2* pOut, CString text, CString textEnd, CBool hideTextAfterDoubleHash, float wrapWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCalcTypematicRepeatAmount")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int CalcTypematicRepeatAmount(float t0, float t1, float repeatDelay, float repeatRate);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCalcWindowNextAutoFitSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void CalcWindowNextAutoFitSize(Vector2* pOut, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCalcWrapWidthForPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float CalcWrapWidthForPos(Vector2 pos, float wrapPosX);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCallContextHooks")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void CallContextHooks(ImGuiContext* context, ImGuiContextHookType type);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCheckbox")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool Checkbox(CString label, CBool* v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCheckboxFlags_IntPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CheckboxFlagsIntPtr(CString label, int* flags, int flagsValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCheckboxFlags_S64Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CheckboxFlagsS64Ptr(CString label, long* flags, long flagsValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCheckboxFlags_U64Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CheckboxFlagsU64Ptr(CString label, ulong* flags, ulong flagsValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCheckboxFlags_UintPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CheckboxFlagsUintPtr(CString label, uint* flags, uint flagsValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igClearActiveID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ClearActiveID();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igClearDragDrop")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ClearDragDrop();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igClearIniSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ClearIniSettings();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igClearWindowSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ClearWindowSettings(CString name);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCloseButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CloseButton(ImGuiID id, Vector2 pos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCloseCurrentPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void CloseCurrentPopup();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igClosePopupToLevel")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ClosePopupToLevel(int remaining, CBool restoreFocusToWindowUnderPopup);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igClosePopupsExceptModals")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ClosePopupsExceptModals();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igClosePopupsOverWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ClosePopupsOverWindow(ImGuiWindow* refWindow, CBool restoreFocusToWindowUnderPopup);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCollapseButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CollapseButton(ImGuiID id, Vector2 pos, ImGuiDockNode* dockNode);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCollapsingHeader_BoolPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CollapsingHeaderBoolPtr(CString label, CBool* pVisible, ImGuiTreeNodeFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCollapsingHeader_TreeNodeFlags")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool CollapsingHeaderTreeNodeFlags(CString label, ImGuiTreeNodeFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ColorButton(CString descId, Vector4 col, ImGuiColorEditFlags flags, Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorConvertFloat4ToU32")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial uint ColorConvertFloat4ToU32(Vector4 @in);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorConvertHSVtoRGB")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ColorConvertHSVtoRGB(float h, float s, float v, float* outR, float* outG, float* outB);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorConvertRGBtoHSV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ColorConvertRGBtoHSV(float r, float g, float b, float* outH, float* outS, float* outV);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorConvertU32ToFloat4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ColorConvertU32ToFloat4(Vector4* pOut, uint @in);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorEdit3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ColorEdit3(CString label, float* col, ImGuiColorEditFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorEdit4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ColorEdit4(CString label, float* col, ImGuiColorEditFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorEditOptionsPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ColorEditOptionsPopup(float* col, ImGuiColorEditFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorPicker3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ColorPicker3(CString label, float* col, ImGuiColorEditFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorPicker4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ColorPicker4(CString label, float* col, ImGuiColorEditFlags flags, float* refCol);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorPickerOptionsPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ColorPickerOptionsPopup(float* refCol, ImGuiColorEditFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColorTooltip")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ColorTooltip(CString text, float* col, ImGuiColorEditFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igColumns")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Columns(int count, CString id, CBool border);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCombo_FnStrPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ComboFnStrPtr(CString label, int* currentItem, FnPtr_VoidPtr_Int_CString getter, void* userData, int itemsCount, int popupMaxHeightInItems);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCombo_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ComboStr(CString label, int* currentItem, CString itemsSeparatedByZeros, int popupMaxHeightInItems);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCombo_Str_arr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ComboStrArr(CString label, int* currentItem, CString* items, int itemsCount, int popupMaxHeightInItems);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igConvertShortcutMod")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKeyChord ConvertShortcutMod(ImGuiKeyChord keyChord);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igConvertSingleModFlagToKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKey ConvertSingleModFlagToKey(ImGuiContext* ctx, ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCreateContext")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiContext* CreateContext(ImFontAtlas* sharedFontAtlas);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igCreateNewWindowSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindowSettings* CreateNewWindowSettings(CString name);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDataTypeApplyFromText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DataTypeApplyFromText(CString buf, ImGuiDataType dataType, void* pData, CString format);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDataTypeApplyOp")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DataTypeApplyOp(ImGuiDataType dataType, int op, void* output, void* arg1, void* arg2);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDataTypeClamp")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DataTypeClamp(ImGuiDataType dataType, void* pData, void* pMin, void* pMax);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDataTypeCompare")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int DataTypeCompare(ImGuiDataType dataType, void* arg1, void* arg2);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDataTypeFormatString")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int DataTypeFormatString(CString buf, int bufSize, ImGuiDataType dataType, void* pData, CString format);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDataTypeGetInfo")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiDataTypeInfo* DataTypeGetInfo(ImGuiDataType dataType);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugAllocHook")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugAllocHook(ImGuiDebugAllocInfo* info, int frameCount, void* ptr, int size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugBreakButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DebugBreakButton(CString label, CString descriptionOfLocation);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugBreakButtonTooltip")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugBreakButtonTooltip(CBool keyboardOnly, CString descriptionOfLocation);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugBreakClearData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugBreakClearData();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugCheckVersionAndDataLayout")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DebugCheckVersionAndDataLayout(CString versionStr, int szIo, int szStyle, int szVec2, int szVec4, int szDrawvert, int szDrawidx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugDrawCursorPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugDrawCursorPos(uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugDrawItemRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugDrawItemRect(uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugDrawLineExtents")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugDrawLineExtents(uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugFlashStyleColor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugFlashStyleColor(ImGuiCol idx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugHookIdInfo")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugHookIdInfo(ImGuiID id, ImGuiDataType dataType, void* dataId, void* dataIdEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugLocateItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugLocateItem(ImGuiID targetId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugLocateItemOnHover")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugLocateItemOnHover(ImGuiID targetId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugLocateItemResolveWithLastItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugLocateItemResolveWithLastItem();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugLog")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugLog(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugLogV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugLogV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeColumns")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeColumns(ImGuiOldColumns* columns);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeDockNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeDockNode(ImGuiDockNode* node, CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeDrawCmdShowMeshAndBoundingBox")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeDrawCmdShowMeshAndBoundingBox(ImDrawList* outDrawList, ImDrawList* drawList, ImDrawCmd* drawCmd, CBool showMesh, CBool showAabb);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeDrawList")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeDrawList(ImGuiWindow* window, ImGuiViewportP* viewport, ImDrawList* drawList, CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeFont")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeFont(ImFont* font);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeFontGlyph")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeFontGlyph(ImFont* font, ImFontGlyph* glyph);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeInputTextState")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeInputTextState(ImGuiInputTextState* state);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeStorage")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeStorage(ImGuiStorage* storage, CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeTabBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeTabBar(ImGuiTabBar* tabBar, CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeTable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeTable(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeTableSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeTableSettings(ImGuiTableSettings* settings);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeTypingSelectState")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeTypingSelectState(ImGuiTypingSelectState* state);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeViewport(ImGuiViewportP* viewport);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeWindow(ImGuiWindow* window, CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeWindowSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeWindowSettings(ImGuiWindowSettings* settings);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeWindowsList")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeWindowsList(ImVectorImGuiWindowPtr* windows, CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugNodeWindowsListByBeginStackParent")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugNodeWindowsListByBeginStackParent(ImGuiWindow** windows, int windowsSize, ImGuiWindow* parentInBeginStack);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugRenderKeyboardPreview")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugRenderKeyboardPreview(ImDrawList* drawList);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugRenderViewportThumbnail")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugRenderViewportThumbnail(ImDrawList* drawList, ImGuiViewportP* viewport, ImRect bb);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugStartItemPicker")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugStartItemPicker();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDebugTextEncoding")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DebugTextEncoding(CString text);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDestroyContext")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DestroyContext(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDestroyPlatformWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DestroyPlatformWindow(ImGuiViewportP* viewport);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDestroyPlatformWindows")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DestroyPlatformWindows();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderAddNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID DockBuilderAddNode(ImGuiID nodeId, ImGuiDockNodeFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderCopyDockSpace")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderCopyDockSpace(ImGuiID srcDockspaceId, ImGuiID dstDockspaceId, ImVectorConstCharPtr* inWindowRemapPairs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderCopyNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderCopyNode(ImGuiID srcNodeId, ImGuiID dstNodeId, ImVectorImGuiID* outNodeRemapPairs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderCopyWindowSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderCopyWindowSettings(CString srcName, CString dstName);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderDockWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderDockWindow(CString windowName, ImGuiID nodeId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderFinish")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderFinish(ImGuiID nodeId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderGetCentralNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiDockNode* DockBuilderGetCentralNode(ImGuiID nodeId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderGetNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiDockNode* DockBuilderGetNode(ImGuiID nodeId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderRemoveNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderRemoveNode(ImGuiID nodeId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderRemoveNodeChildNodes")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderRemoveNodeChildNodes(ImGuiID nodeId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderRemoveNodeDockedWindows")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderRemoveNodeDockedWindows(ImGuiID nodeId, CBool clearSettingsRefs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderSetNodePos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderSetNodePos(ImGuiID nodeId, Vector2 pos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderSetNodeSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockBuilderSetNodeSize(ImGuiID nodeId, Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockBuilderSplitNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID DockBuilderSplitNode(ImGuiID nodeId, ImGuiDir splitDir, float sizeRatioForNodeAtDir, ImGuiID* outIdAtDir, ImGuiID* outIdAtOppositeDir);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextCalcDropPosForDocking")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DockContextCalcDropPosForDocking(ImGuiWindow* target, ImGuiDockNode* targetNode, ImGuiWindow* payloadWindow, ImGuiDockNode* payloadNode, ImGuiDir splitDir, CBool splitOuter, Vector2* outPos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextClearNodes")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextClearNodes(ImGuiContext* ctx, ImGuiID rootId, CBool clearSettingsRefs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextEndFrame")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextEndFrame(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextFindNodeByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiDockNode* DockContextFindNodeByID(ImGuiContext* ctx, ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextGenNodeID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID DockContextGenNodeID(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextInitialize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextInitialize(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextNewFrameUpdateDocking")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextNewFrameUpdateDocking(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextNewFrameUpdateUndocking")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextNewFrameUpdateUndocking(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextProcessUndockNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextProcessUndockNode(ImGuiContext* ctx, ImGuiDockNode* node);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextProcessUndockWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextProcessUndockWindow(ImGuiContext* ctx, ImGuiWindow* window, CBool clearPersistentDockingRef);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextQueueDock")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextQueueDock(ImGuiContext* ctx, ImGuiWindow* target, ImGuiDockNode* targetNode, ImGuiWindow* payload, ImGuiDir splitDir, float splitRatio, CBool splitOuter);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextQueueUndockNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextQueueUndockNode(ImGuiContext* ctx, ImGuiDockNode* node);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextQueueUndockWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextQueueUndockWindow(ImGuiContext* ctx, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextRebuildNodes")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextRebuildNodes(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockContextShutdown")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockContextShutdown(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockNodeBeginAmendTabBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DockNodeBeginAmendTabBar(ImGuiDockNode* node);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockNodeEndAmendTabBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockNodeEndAmendTabBar();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockNodeGetDepth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int DockNodeGetDepth(ImGuiDockNode* node);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockNodeGetRootNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiDockNode* DockNodeGetRootNode(ImGuiDockNode* node);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockNodeGetWindowMenuButtonId")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID DockNodeGetWindowMenuButtonId(ImGuiDockNode* node);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockNodeIsInHierarchyOf")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DockNodeIsInHierarchyOf(ImGuiDockNode* node, ImGuiDockNode* parent);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockNodeWindowMenuHandler_Default")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void DockNodeWindowMenuHandlerDefault(ImGuiContext* ctx, ImGuiDockNode* node, ImGuiTabBar* tabBar);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockSpace")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID DockSpace(ImGuiID id, Vector2 size, ImGuiDockNodeFlags flags, ImGuiWindowClass* windowClass);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDockSpaceOverViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID DockSpaceOverViewport(ImGuiViewport* viewport, ImGuiDockNodeFlags flags, ImGuiWindowClass* windowClass);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragBehavior")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragBehavior(ImGuiID id, ImGuiDataType dataType, void* pV, float vSpeed, void* pMin, void* pMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragFloat")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragFloat(CString label, float* v, float vSpeed, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragFloat2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragFloat2(CString label, float* v, float vSpeed, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragFloat3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragFloat3(CString label, float* v, float vSpeed, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragFloat4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragFloat4(CString label, float* v, float vSpeed, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragFloatRange2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragFloatRange2(CString label, float* vCurrentMin, float* vCurrentMax, float vSpeed, float vMin, float vMax, CString format, CString formatMax, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragInt")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragInt(CString label, int* v, float vSpeed, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragInt2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragInt2(CString label, int* v, float vSpeed, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragInt3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragInt3(CString label, int* v, float vSpeed, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragInt4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragInt4(CString label, int* v, float vSpeed, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragIntRange2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragIntRange2(CString label, int* vCurrentMin, int* vCurrentMax, float vSpeed, int vMin, int vMax, CString format, CString formatMax, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragScalar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragScalar(CString label, ImGuiDataType dataType, void* pData, float vSpeed, void* pMin, void* pMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDragScalarN")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool DragScalarN(CString label, ImGuiDataType dataType, void* pData, int components, float vSpeed, void* pMin, void* pMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igDummy")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Dummy(Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEnd")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void End();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndChild")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndChild();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndColumns")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndColumns();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndCombo")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndCombo();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndComboPreview")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndComboPreview();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndDisabled")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndDisabled();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndDragDropSource")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndDragDropSource();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndDragDropTarget")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndDragDropTarget();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndFrame")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndFrame();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndGroup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndGroup();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndListBox")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndListBox();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndMainMenuBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndMainMenuBar();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndMenu")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndMenu();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndMenuBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndMenuBar();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndPopup();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndTabBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndTabBar();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndTabItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndTabItem();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndTable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndTable();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igEndTooltip")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void EndTooltip();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igErrorCheckEndFrameRecover")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ErrorCheckEndFrameRecover(ImGuiErrorLogCallback logCallback, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igErrorCheckEndWindowRecover")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ErrorCheckEndWindowRecover(ImGuiErrorLogCallback logCallback, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igErrorCheckUsingSetCursorPosToExtendParentBoundaries")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ErrorCheckUsingSetCursorPosToExtendParentBoundaries();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindBestWindowPosForPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void FindBestWindowPosForPopup(Vector2* pOut, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindBestWindowPosForPopupEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void FindBestWindowPosForPopupEx(Vector2* pOut, Vector2 refPos, Vector2 size, ImGuiDir* lastDir, ImRect rOuter, ImRect rAvoid, ImGuiPopupPositionPolicy policy);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindBlockingModal")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* FindBlockingModal(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindBottomMostVisibleWindowWithinBeginStack")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* FindBottomMostVisibleWindowWithinBeginStack(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindHoveredViewportFromPlatformWindowStack")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiViewportP* FindHoveredViewportFromPlatformWindowStack(Vector2 mousePlatformPos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindOrCreateColumns")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiOldColumns* FindOrCreateColumns(ImGuiWindow* window, ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindRenderedTextEnd")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString FindRenderedTextEnd(CString text, CString textEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindSettingsHandler")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiSettingsHandler* FindSettingsHandler(CString typeName);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindViewportByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiViewport* FindViewportByID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindViewportByPlatformHandle")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiViewport* FindViewportByPlatformHandle(void* platformHandle);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindWindowByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* FindWindowByID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindWindowByName")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* FindWindowByName(CString name);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindWindowDisplayIndex")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int FindWindowDisplayIndex(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindWindowSettingsByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindowSettings* FindWindowSettingsByID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFindWindowSettingsByWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindowSettings* FindWindowSettingsByWindow(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFocusItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void FocusItem();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFocusTopMostWindowUnderOne")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void FocusTopMostWindowUnderOne(ImGuiWindow* underThisWindow, ImGuiWindow* ignoreWindow, ImGuiViewport* filterViewport, ImGuiFocusRequestFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igFocusWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void FocusWindow(ImGuiWindow* window, ImGuiFocusRequestFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGET_FLT_MAX")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GETFLTMAX();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGET_FLT_MIN")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GETFLTMIN();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGcAwakeTransientWindowBuffers")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GcAwakeTransientWindowBuffers(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGcCompactTransientMiscBuffers")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GcCompactTransientMiscBuffers();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGcCompactTransientWindowBuffers")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GcCompactTransientWindowBuffers(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetActiveID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetActiveID();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetAllocatorFunctions")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetAllocatorFunctions(ImGuiMemAllocFunc* pAllocFunc, ImGuiMemFreeFunc* pFreeFunc, void** pUserData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetBackgroundDrawList_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawList* GetBackgroundDrawListNil();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetBackgroundDrawList_ViewportPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawList* GetBackgroundDrawListViewportPtr(ImGuiViewport* viewport);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetClipboardText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString GetClipboardText();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColorU32_Col")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial uint GetColorU32Col(ImGuiCol idx, float alphaMul);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColorU32_U32")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial uint GetColorU32U32(uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColorU32_Vec4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial uint GetColorU32Vec4(Vector4 col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColumnIndex")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int GetColumnIndex();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColumnNormFromOffset")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetColumnNormFromOffset(ImGuiOldColumns* columns, float offset);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColumnOffset")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetColumnOffset(int columnIndex);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColumnOffsetFromNorm")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetColumnOffsetFromNorm(ImGuiOldColumns* columns, float offsetNorm);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColumnWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetColumnWidth(int columnIndex);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColumnsCount")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int GetColumnsCount();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetColumnsID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetColumnsID(CString strId, int count);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetContentRegionAvail")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetContentRegionAvail(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetContentRegionMax")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetContentRegionMax(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetContentRegionMaxAbs")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetContentRegionMaxAbs(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCurrentContext")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiContext* GetCurrentContext();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCurrentFocusScope")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetCurrentFocusScope();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCurrentTabBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTabBar* GetCurrentTabBar();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCurrentTable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTable* GetCurrentTable();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCurrentWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* GetCurrentWindow();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCurrentWindowRead")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* GetCurrentWindowRead();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCursorPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetCursorPos(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCursorPosX")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetCursorPosX();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCursorPosY")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetCursorPosY();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCursorScreenPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetCursorScreenPos(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetCursorStartPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetCursorStartPos(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetDefaultFont")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImFont* GetDefaultFont();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetDragDropPayload")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiPayload* GetDragDropPayload();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetDrawData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawData* GetDrawData();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetDrawListSharedData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawListSharedData* GetDrawListSharedData();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetFocusID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetFocusID();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetFont")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImFont* GetFont();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetFontSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetFontSize();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetFontTexUvWhitePixel")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetFontTexUvWhitePixel(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetForegroundDrawList_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawList* GetForegroundDrawListNil();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetForegroundDrawList_ViewportPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawList* GetForegroundDrawListViewportPtr(ImGuiViewport* viewport);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetForegroundDrawList_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawList* GetForegroundDrawListWindowPtr(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetFrameCount")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int GetFrameCount();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetFrameHeight")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetFrameHeight();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetFrameHeightWithSpacing")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetFrameHeightWithSpacing();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetHoveredID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetHoveredID();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetID_Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetIDPtr(void* ptrId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetID_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetIDStr(CString strId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetID_StrStr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetIDStrStr(CString strIdBegin, CString strIdEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetIDWithSeed_Int")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetIDWithSeedInt(int n, ImGuiID seed);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetIDWithSeed_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetIDWithSeedStr(CString strIdBegin, CString strIdEnd, ImGuiID seed);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetIO")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiIO* GetIO();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetInputTextState")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiInputTextState* GetInputTextState(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetItemFlags")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiItemFlags GetItemFlags();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetItemID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetItemID();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetItemRectMax")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetItemRectMax(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetItemRectMin")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetItemRectMin(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetItemRectSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetItemRectSize(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetItemStatusFlags")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiItemStatusFlags GetItemStatusFlags();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyChordName")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString GetKeyChordName(ImGuiKeyChord keyChord, CString outBuf, int outBufSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyData_ContextPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKeyData* GetKeyDataContextPtr(ImGuiContext* ctx, ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyData_Key")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKeyData* GetKeyDataKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyIndex")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKey GetKeyIndex(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyMagnitude2d")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetKeyMagnitude2d(Vector2* pOut, ImGuiKey keyLeft, ImGuiKey keyRight, ImGuiKey keyUp, ImGuiKey keyDown);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyName")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString GetKeyName(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyOwner")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetKeyOwner(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyOwnerData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKeyOwnerData* GetKeyOwnerData(ImGuiContext* ctx, ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetKeyPressedAmount")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int GetKeyPressedAmount(ImGuiKey key, float repeatDelay, float rate);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetMainViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiViewport* GetMainViewport();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetMouseClickedCount")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int GetMouseClickedCount(ImGuiMouseButton button);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetMouseCursor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiMouseCursor GetMouseCursor();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetMouseDragDelta")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetMouseDragDelta(Vector2* pOut, ImGuiMouseButton button, float lockThreshold);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetMousePos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetMousePos(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetMousePosOnOpeningCurrentPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetMousePosOnOpeningCurrentPopup(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetNavTweakPressedAmount")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetNavTweakPressedAmount(ImGuiAxis axis);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetPlatformIO")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiPlatformIO* GetPlatformIO();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetPopupAllowedExtentRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetPopupAllowedExtentRect(ImRect* pOut, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetScrollMaxX")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetScrollMaxX();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetScrollMaxY")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetScrollMaxY();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetScrollX")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetScrollX();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetScrollY")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetScrollY();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetShortcutRoutingData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKeyRoutingData* GetShortcutRoutingData(ImGuiKeyChord keyChord);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetStateStorage")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiStorage* GetStateStorage();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetStyle")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiStyle* GetStyle();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetStyleColorName")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString GetStyleColorName(ImGuiCol idx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetStyleColorVec4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Vector4* GetStyleColorVec4(ImGuiCol idx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetStyleVarInfo")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiDataVarInfo* GetStyleVarInfo(ImGuiStyleVar idx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTextLineHeight")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetTextLineHeight();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTextLineHeightWithSpacing")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetTextLineHeightWithSpacing();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTime")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Double GetTime();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTopMostAndVisiblePopupModal")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* GetTopMostAndVisiblePopupModal();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTopMostPopupModal")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiWindow* GetTopMostPopupModal();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTreeNodeToLabelSpacing")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetTreeNodeToLabelSpacing();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTypematicRepeatRate")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetTypematicRepeatRate(ImGuiInputFlags flags, float* repeatDelay, float* repeatRate);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetTypingSelectRequest")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTypingSelectRequest* GetTypingSelectRequest(ImGuiTypingSelectFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetVersion")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString GetVersion();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetViewportPlatformMonitor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiPlatformMonitor* GetViewportPlatformMonitor(ImGuiViewport* viewport);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowAlwaysWantOwnTabBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool GetWindowAlwaysWantOwnTabBar(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowContentRegionMax")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetWindowContentRegionMax(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowContentRegionMin")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetWindowContentRegionMin(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowDockID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetWindowDockID();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowDockNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiDockNode* GetWindowDockNode();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowDpiScale")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetWindowDpiScale();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowDrawList")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImDrawList* GetWindowDrawList();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowHeight")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetWindowHeight();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetWindowPos(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowResizeBorderID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetWindowResizeBorderID(ImGuiWindow* window, ImGuiDir dir);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowResizeCornerID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetWindowResizeCornerID(ImGuiWindow* window, int n);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowScrollbarID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID GetWindowScrollbarID(ImGuiWindow* window, ImGuiAxis axis);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowScrollbarRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetWindowScrollbarRect(ImRect* pOut, ImGuiWindow* window, ImGuiAxis axis);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void GetWindowSize(Vector2* pOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiViewport* GetWindowViewport();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igGetWindowWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float GetWindowWidth();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImAbs_double")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Double ImAbsDouble(Double x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImAbs_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImAbsFloat(float x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImAbs_Int")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImAbsInt(int x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImAlphaBlendColors")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial uint ImAlphaBlendColors(uint colA, uint colB);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBezierCubicCalc")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBezierCubicCalc(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, float t);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBezierCubicClosestPoint")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBezierCubicClosestPoint(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 p, int numSegments);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBezierCubicClosestPointCasteljau")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBezierCubicClosestPointCasteljau(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 p, float tessTol);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBezierQuadraticCalc")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBezierQuadraticCalc(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, float t);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBitArrayClearAllBits")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBitArrayClearAllBits(uint* arr, int bitcount);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBitArrayClearBit")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBitArrayClearBit(uint* arr, int n);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBitArrayGetStorageSizeInBytes")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImBitArrayGetStorageSizeInBytes(int bitcount);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBitArraySetBit")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBitArraySetBit(uint* arr, int n);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBitArraySetBitRange")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImBitArraySetBitRange(uint* arr, int n, int n2);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImBitArrayTestBit")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImBitArrayTestBit(uint* arr, int n);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImCharIsBlankA")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImCharIsBlankA(CChar c);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImCharIsBlankW")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImCharIsBlankW(uint c);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImClamp")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImClamp(Vector2* pOut, Vector2 v, Vector2 mn, Vector2 mx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImDot")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImDot(Vector2 a, Vector2 b);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImExponentialMovingAverage")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImExponentialMovingAverage(float avg, float sample, int n);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFileClose")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImFileClose(ImFileHandle file);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFileGetSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ulong ImFileGetSize(ImFileHandle file);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFileLoadToMemory")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void* ImFileLoadToMemory(CString filename, CString mode, int* outFileSize, int paddingBytes);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFileOpen")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImFileHandle ImFileOpen(CString filename, CString mode);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFileRead")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ulong ImFileRead(void* data, ulong size, ulong count, ImFileHandle file);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFileWrite")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ulong ImFileWrite(void* data, ulong size, ulong count, ImFileHandle file);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFloor_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImFloorFloat(float f);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFloor_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFloorVec2(Vector2* pOut, Vector2 v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildFinish")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildFinish(ImFontAtlas* atlas);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildInit")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildInit(ImFontAtlas* atlas);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildMultiplyCalcLookupTable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildMultiplyCalcLookupTable(byte* outTable, float inMultiplyFactor);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildMultiplyRectAlpha8")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildMultiplyRectAlpha8(byte* table, byte* pixels, int x, int y, int w, int h, int stride);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildPackCustomRects")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* stbrpContextOpaque);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildRender32bppRectFromString")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, CString inStr, CChar inMarkerChar, uint inMarkerPixelValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildRender8bppRectFromString")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, CString inStr, CChar inMarkerChar, byte inMarkerPixelValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasBuildSetupFont")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* fontConfig, float ascent, float descent);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasGetBuilderForStbTruetype")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImFontBuilderIO* ImFontAtlasGetBuilderForStbTruetype();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFontAtlasUpdateConfigDataPointers")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFontAtlasUpdateConfigDataPointers(ImFontAtlas* atlas);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFormatString")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImFormatString(CString buf, int bufSize, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFormatStringToTempBuffer")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFormatStringToTempBuffer(CString* outBuf, CString* outBufEnd, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFormatStringToTempBufferV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImFormatStringToTempBufferV(CString* outBuf, CString* outBufEnd, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImFormatStringV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImFormatStringV(CString buf, int bufSize, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImHashData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID ImHashData(void* data, int dataSize, ImGuiID seed);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImHashStr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID ImHashStr(CString data, int dataSize, ImGuiID seed);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImInvLength")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImInvLength(Vector2 lhs, float failValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImIsFloatAboveGuaranteedIntegerPrecision")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImIsFloatAboveGuaranteedIntegerPrecision(float f);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImIsPowerOfTwo_Int")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImIsPowerOfTwoInt(int v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImIsPowerOfTwo_U64")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImIsPowerOfTwoU64(ulong v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLengthSqr_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImLengthSqrVec2(Vector2 lhs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLengthSqr_Vec4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImLengthSqrVec4(Vector4 lhs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLerp_Vec2Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImLerpVec2Float(Vector2* pOut, Vector2 a, Vector2 b, float t);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLerp_Vec2Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImLerpVec2Vec2(Vector2* pOut, Vector2 a, Vector2 b, Vector2 t);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLerp_Vec4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImLerpVec4(Vector4* pOut, Vector4 a, Vector4 b, float t);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLineClosestPoint")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImLineClosestPoint(Vector2* pOut, Vector2 a, Vector2 b, Vector2 p);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLinearSweep")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImLinearSweep(float current, float target, float speed);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLog_double")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Double ImLogDouble(Double x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImLog_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImLogFloat(float x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImMax")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImMax(Vector2* pOut, Vector2 lhs, Vector2 rhs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImMin")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImMin(Vector2* pOut, Vector2 lhs, Vector2 rhs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImModPositive")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImModPositive(int a, int b);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImMul")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImMul(Vector2* pOut, Vector2 lhs, Vector2 rhs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImParseFormatFindEnd")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImParseFormatFindEnd(CString format);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImParseFormatFindStart")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImParseFormatFindStart(CString format);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImParseFormatPrecision")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImParseFormatPrecision(CString format, int defaultValue);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImParseFormatSanitizeForPrinting")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImParseFormatSanitizeForPrinting(CString fmtIn, CString fmtOut, int fmtOutSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImParseFormatSanitizeForScanning")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImParseFormatSanitizeForScanning(CString fmtIn, CString fmtOut, int fmtOutSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImParseFormatTrimDecorations")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImParseFormatTrimDecorations(CString format, CString buf, int bufSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImPow_double")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Double ImPowDouble(Double x, Double y);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImPow_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImPowFloat(float x, float y);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImQsort")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImQsort(void* @base, int count, int sizeOfElement, FnPtr_VoidPtr_VoidPtr_Int compareFunc);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImRotate")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImRotate(Vector2* pOut, Vector2 v, float cosA, float sinA);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImRsqrt_double")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Double ImRsqrtDouble(Double x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImRsqrt_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImRsqrtFloat(float x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImSaturate")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImSaturate(float f);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImSign_double")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Double ImSignDouble(Double x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImSign_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImSignFloat(float x);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrSkipBlank")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImStrSkipBlank(CString str);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrTrimBlanks")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImStrTrimBlanks(CString str);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrbolW")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ushort* ImStrbolW(ushort* bufMidLine, ushort* bufBegin);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrchrRange")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImStrchrRange(CString strBegin, CString strEnd, CChar c);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrdup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImStrdup(CString str);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrdupcpy")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImStrdupcpy(CString dst, int* pDstSize, CString str);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStreolRange")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImStreolRange(CString str, CString strEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStricmp")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImStricmp(CString str1, CString str2);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStristr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImStristr(CString haystack, CString haystackEnd, CString needle, CString needleEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrlenW")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImStrlenW(ushort* str);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrncpy")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImStrncpy(CString dst, CString src, int count);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImStrnicmp")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImStrnicmp(CString str1, CString str2, int count);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextCharFromUtf8")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImTextCharFromUtf8(uint* outChar, CString inText, CString inTextEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextCharToUtf8")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImTextCharToUtf8(CString outBuf, uint c);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextCountCharsFromUtf8")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImTextCountCharsFromUtf8(CString inText, CString inTextEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextCountUtf8BytesFromChar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImTextCountUtf8BytesFromChar(CString inText, CString inTextEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextCountUtf8BytesFromStr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImTextCountUtf8BytesFromStr(ushort* inText, ushort* inTextEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextFindPreviousUtf8Codepoint")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString ImTextFindPreviousUtf8Codepoint(CString inTextStart, CString inTextCurr);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextStrFromUtf8")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImTextStrFromUtf8(ushort* outBuf, int outBufSize, CString inText, CString inTextEnd, CString* inRemaining);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTextStrToUtf8")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImTextStrToUtf8(CString outBuf, int outBufSize, ushort* inText, ushort* inTextEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImToUpper")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CChar ImToUpper(CChar c);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTriangleArea")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImTriangleArea(Vector2 a, Vector2 b, Vector2 c);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTriangleBarycentricCoords")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImTriangleBarycentricCoords(Vector2 a, Vector2 b, Vector2 c, Vector2 p, float* outU, float* outV, float* outW);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTriangleClosestPoint")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImTriangleClosestPoint(Vector2* pOut, Vector2 a, Vector2 b, Vector2 c, Vector2 p);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTriangleContainsPoint")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImTriangleContainsPoint(Vector2 a, Vector2 b, Vector2 c, Vector2 p);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTrunc_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float ImTruncFloat(float f);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImTrunc_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ImTruncVec2(Vector2* pOut, Vector2 v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImUpperPowerOfTwo")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int ImUpperPowerOfTwo(int v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImage")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Image(ImTextureID userTextureId, Vector2 imageSize, Vector2 uv0, Vector2 uv1, Vector4 tintCol, Vector4 borderCol);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImageButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImageButton(CString strId, ImTextureID userTextureId, Vector2 imageSize, Vector2 uv0, Vector2 uv1, Vector4 bgCol, Vector4 tintCol);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igImageButtonEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ImageButtonEx(ImGuiID id, ImTextureID textureId, Vector2 imageSize, Vector2 uv0, Vector2 uv1, Vector4 bgCol, Vector4 tintCol, ImGuiButtonFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIndent")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Indent(float indentW);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInitialize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Initialize();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputDouble")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputDouble(CString label, Double* v, Double step, Double stepFast, CString format, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputFloat")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputFloat(CString label, float* v, float step, float stepFast, CString format, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputFloat2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputFloat2(CString label, float* v, CString format, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputFloat3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputFloat3(CString label, float* v, CString format, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputFloat4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputFloat4(CString label, float* v, CString format, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputInt")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputInt(CString label, int* v, int step, int stepFast, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputInt2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputInt2(CString label, int* v, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputInt3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputInt3(CString label, int* v, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputInt4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputInt4(CString label, int* v, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputScalar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputScalar(CString label, ImGuiDataType dataType, void* pData, void* pStep, void* pStepFast, CString format, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputScalarN")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputScalarN(CString label, ImGuiDataType dataType, void* pData, int components, void* pStep, void* pStepFast, CString format, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputText(CString label, CString buf, int bufSize, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputTextDeactivateHook")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void InputTextDeactivateHook(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputTextEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputTextEx(CString label, CString hint, CString buf, int bufSize, Vector2 sizeArg, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputTextMultiline")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputTextMultiline(CString label, CString buf, int bufSize, Vector2 size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInputTextWithHint")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InputTextWithHint(CString label, CString hint, CString buf, int bufSize, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igInvisibleButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool InvisibleButton(CString strId, Vector2 size, ImGuiButtonFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsActiveIdUsingNavDir")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsActiveIdUsingNavDir(ImGuiDir dir);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsAliasKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsAliasKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsAnyItemActive")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsAnyItemActive();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsAnyItemFocused")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsAnyItemFocused();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsAnyItemHovered")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsAnyItemHovered();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsAnyMouseDown")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsAnyMouseDown();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsClippedEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsClippedEx(ImRect bb, ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsDragDropActive")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsDragDropActive();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsDragDropPayloadBeingAccepted")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsDragDropPayloadBeingAccepted();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsGamepadKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsGamepadKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemActivated")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemActivated();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemActive")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemActive();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemClicked")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemClicked(ImGuiMouseButton mouseButton);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemDeactivated")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemDeactivated();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemDeactivatedAfterEdit")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemDeactivatedAfterEdit();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemEdited")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemEdited();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemFocused")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemFocused();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemHovered")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemHovered(ImGuiHoveredFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemToggledOpen")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemToggledOpen();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemToggledSelection")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemToggledSelection();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsItemVisible")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsItemVisible();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyChordPressed_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyChordPressedID(ImGuiKeyChord keyChord, ImGuiID ownerId, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyChordPressed_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyChordPressedNil(ImGuiKeyChord keyChord);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyDown_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyDownID(ImGuiKey key, ImGuiID ownerId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyDown_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyDownNil(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyPressed_Bool")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyPressedBool(ImGuiKey key, CBool repeat);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyPressed_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyPressedID(ImGuiKey key, ImGuiID ownerId, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyReleased_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyReleasedID(ImGuiKey key, ImGuiID ownerId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyReleased_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyReleasedNil(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsKeyboardKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsKeyboardKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsLegacyKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsLegacyKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseClicked_Bool")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseClickedBool(ImGuiMouseButton button, CBool repeat);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseClicked_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseClickedID(ImGuiMouseButton button, ImGuiID ownerId, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseDoubleClicked_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseDoubleClickedID(ImGuiMouseButton button, ImGuiID ownerId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseDoubleClicked_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseDoubleClickedNil(ImGuiMouseButton button);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseDown_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseDownID(ImGuiMouseButton button, ImGuiID ownerId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseDown_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseDownNil(ImGuiMouseButton button);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseDragPastThreshold")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseDragPastThreshold(ImGuiMouseButton button, float lockThreshold);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseDragging")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseDragging(ImGuiMouseButton button, float lockThreshold);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseHoveringRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseHoveringRect(Vector2 rMin, Vector2 rMax, CBool clip);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMousePosValid")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMousePosValid(Vector2* mousePos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseReleased_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseReleasedID(ImGuiMouseButton button, ImGuiID ownerId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsMouseReleased_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsMouseReleasedNil(ImGuiMouseButton button);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsNamedKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsNamedKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsNamedKeyOrModKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsNamedKeyOrModKey(ImGuiKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsPopupOpen_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsPopupOpenID(ImGuiID id, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsPopupOpen_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsPopupOpenStr(CString strId, ImGuiPopupFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsRectVisible_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsRectVisibleNil(Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsRectVisible_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsRectVisibleVec2(Vector2 rectMin, Vector2 rectMax);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowAbove")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowAbove(ImGuiWindow* potentialAbove, ImGuiWindow* potentialBelow);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowAppearing")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowAppearing();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowChildOf")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potentialParent, CBool popupHierarchy, CBool dockHierarchy);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowCollapsed")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowCollapsed();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowContentHoverable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowContentHoverable(ImGuiWindow* window, ImGuiHoveredFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowDocked")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowDocked();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowFocused")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowFocused(ImGuiFocusedFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowHovered")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowHovered(ImGuiHoveredFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowNavFocusable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowNavFocusable(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igIsWindowWithinBeginStackOf")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool IsWindowWithinBeginStackOf(ImGuiWindow* window, ImGuiWindow* potentialParent);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igItemAdd")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ItemAdd(ImRect bb, ImGuiID id, ImRect* navBb, ImGuiItemFlags extraFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igItemHoverable")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ItemHoverable(ImRect bb, ImGuiID id, ImGuiItemFlags itemFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igItemSize_Rect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ItemSizeRect(ImRect bb, float textBaselineY);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igItemSize_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ItemSizeVec2(Vector2 size, float textBaselineY);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igKeepAliveID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void KeepAliveID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLabelText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LabelText(CString label, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLabelTextV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LabelTextV(CString label, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igListBox_FnStrPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ListBoxFnStrPtr(CString label, int* currentItem, FnPtr_VoidPtr_Int_CString getter, void* userData, int itemsCount, int heightInItems);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igListBox_Str_arr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ListBoxStrArr(CString label, int* currentItem, CString* items, int itemsCount, int heightInItems);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLoadIniSettingsFromDisk")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LoadIniSettingsFromDisk(CString iniFilename);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLoadIniSettingsFromMemory")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LoadIniSettingsFromMemory(CString iniData, int iniSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLocalizeGetMsg")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString LocalizeGetMsg(ImGuiLocKey key);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLocalizeRegisterEntries")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LocalizeRegisterEntries(ImGuiLocEntry* entries, int count);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogBegin")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogBegin(ImGuiLogType type, int autoOpenDepth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogButtons")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogButtons();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogFinish")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogFinish();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogRenderedText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogRenderedText(Vector2* refPos, CString text, CString textEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogSetNextTextDecoration")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogSetNextTextDecoration(CString prefix, CString suffix);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogText(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogTextV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogTextV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogToBuffer")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogToBuffer(int autoOpenDepth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogToClipboard")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogToClipboard(int autoOpenDepth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogToFile")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogToFile(int autoOpenDepth, CString filename);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igLogToTTY")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void LogToTTY(int autoOpenDepth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMarkIniSettingsDirty_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void MarkIniSettingsDirtyNil();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMarkIniSettingsDirty_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void MarkIniSettingsDirtyWindowPtr(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMarkItemEdited")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void MarkItemEdited(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMemAlloc")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void* MemAlloc(int size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMemFree")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void MemFree(void* ptr);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMenuItem_Bool")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool MenuItemBool(CString label, CString shortcut, CBool selected, CBool enabled);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMenuItem_BoolPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool MenuItemBoolPtr(CString label, CString shortcut, CBool* pSelected, CBool enabled);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMenuItemEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool MenuItemEx(CString label, CString icon, CString shortcut, CBool selected, CBool enabled);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igMouseButtonToKey")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiKey MouseButtonToKey(ImGuiMouseButton button);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavClearPreferredPosForAxis")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavClearPreferredPosForAxis(ImGuiAxis axis);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavInitRequestApplyResult")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavInitRequestApplyResult();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavInitWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavInitWindow(ImGuiWindow* window, CBool forceReinit);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestApplyResult")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavMoveRequestApplyResult();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestButNoResultYet")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool NavMoveRequestButNoResultYet();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestCancel")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavMoveRequestCancel();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestForward")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavMoveRequestForward(ImGuiDir moveDir, ImGuiDir clipDir, ImGuiNavMoveFlags moveFlags, ImGuiScrollFlags scrollFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestResolveWithLastItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavMoveRequestResolveWithLastItem(ImGuiNavItemData* result);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestResolveWithPastTreeNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavMoveRequestResolveWithPastTreeNode(ImGuiNavItemData* result, ImGuiNavTreeNodeData* treeNodeData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestSubmit")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavMoveRequestSubmit(ImGuiDir moveDir, ImGuiDir clipDir, ImGuiNavMoveFlags moveFlags, ImGuiScrollFlags scrollFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavMoveRequestTryWrapping")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavMoveRequestTryWrapping(ImGuiWindow* window, ImGuiNavMoveFlags moveFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavRestoreHighlightAfterMove")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavRestoreHighlightAfterMove();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNavUpdateCurrentWindowIsScrollPushableX")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NavUpdateCurrentWindowIsScrollPushableX();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNewFrame")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NewFrame();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNewLine")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NewLine();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igNextColumn")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void NextColumn();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igOpenPopupEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void OpenPopupEx(ImGuiID id, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igOpenPopup_ID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void OpenPopupID(ImGuiID id, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igOpenPopupOnItemClick")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void OpenPopupOnItemClick(CString strId, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igOpenPopup_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void OpenPopupStr(CString strId, ImGuiPopupFlags popupFlags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPlotEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int PlotEx(ImGuiPlotType plotType, CString label, FnPtr_VoidPtr_Int_Float valuesGetter, void* data, int valuesCount, int valuesOffset, CString overlayText, float scaleMin, float scaleMax, Vector2 sizeArg);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPlotHistogram_FloatPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PlotHistogramFloatPtr(CString label, float* values, int valuesCount, int valuesOffset, CString overlayText, float scaleMin, float scaleMax, Vector2 graphSize, int stride);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPlotHistogram_FnFloatPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PlotHistogramFnFloatPtr(CString label, FnPtr_VoidPtr_Int_Float valuesGetter, void* data, int valuesCount, int valuesOffset, CString overlayText, float scaleMin, float scaleMax, Vector2 graphSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPlotLines_FloatPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PlotLinesFloatPtr(CString label, float* values, int valuesCount, int valuesOffset, CString overlayText, float scaleMin, float scaleMax, Vector2 graphSize, int stride);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPlotLines_FnFloatPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PlotLinesFnFloatPtr(CString label, FnPtr_VoidPtr_Int_Float valuesGetter, void* data, int valuesCount, int valuesOffset, CString overlayText, float scaleMin, float scaleMax, Vector2 graphSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopButtonRepeat")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopButtonRepeat();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopClipRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopClipRect();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopColumnsBackground")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopColumnsBackground();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopFocusScope")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopFocusScope();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopFont")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopFont();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopID();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopItemFlag")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopItemFlag();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopItemWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopItemWidth();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopStyleColor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopStyleColor(int count);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopStyleVar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopStyleVar(int count);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopTabStop")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopTabStop();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPopTextWrapPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PopTextWrapPos();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igProgressBar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ProgressBar(float fraction, Vector2 sizeArg, CString overlay);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushButtonRepeat")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushButtonRepeat(CBool repeat);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushClipRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushClipRect(Vector2 clipRectMin, Vector2 clipRectMax, CBool intersectWithCurrentClipRect);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushColumnClipRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushColumnClipRect(int columnIndex);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushColumnsBackground")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushColumnsBackground();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushFocusScope")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushFocusScope(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushFont")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushFont(ImFont* font);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushID_Int")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushIDInt(int intId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushID_Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushIDPtr(void* ptrId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushID_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushIDStr(CString strId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushID_StrStr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushIDStrStr(CString strIdBegin, CString strIdEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushItemFlag")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushItemFlag(ImGuiItemFlags option, CBool enabled);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushItemWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushItemWidth(float itemWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushMultiItemsWidths")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushMultiItemsWidths(int components, float widthFull);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushOverrideID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushOverrideID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushStyleColor_U32")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushStyleColorU32(ImGuiCol idx, uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushStyleColor_Vec4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushStyleColorVec4(ImGuiCol idx, Vector4 col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushStyleVar_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushStyleVarFloat(ImGuiStyleVar idx, float val);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushStyleVar_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushStyleVarVec2(ImGuiStyleVar idx, Vector2 val);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushTabStop")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushTabStop(CBool tabStop);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igPushTextWrapPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void PushTextWrapPos(float wrapLocalPosX);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRadioButton_Bool")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool RadioButtonBool(CString label, CBool active);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRadioButton_IntPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool RadioButtonIntPtr(CString label, int* v, int vButton);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRemoveContextHook")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RemoveContextHook(ImGuiContext* context, ImGuiID hookToRemove);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRemoveSettingsHandler")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RemoveSettingsHandler(CString typeName);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRender")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Render();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderArrow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderArrow(ImDrawList* drawList, Vector2 pos, uint col, ImGuiDir dir, float scale);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderArrowDockMenu")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderArrowDockMenu(ImDrawList* drawList, Vector2 pMin, float sz, uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderArrowPointingAt")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderArrowPointingAt(ImDrawList* drawList, Vector2 pos, Vector2 halfSz, ImGuiDir direction, uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderBullet")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderBullet(ImDrawList* drawList, Vector2 pos, uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderCheckMark")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderCheckMark(ImDrawList* drawList, Vector2 pos, uint col, float sz);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderColorRectWithAlphaCheckerboard")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderColorRectWithAlphaCheckerboard(ImDrawList* drawList, Vector2 pMin, Vector2 pMax, uint fillCol, float gridStep, Vector2 gridOff, float rounding, ImDrawFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderDragDropTargetRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderDragDropTargetRect(ImRect bb, ImRect itemClipRect);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderFrame")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderFrame(Vector2 pMin, Vector2 pMax, uint fillCol, CBool border, float rounding);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderFrameBorder")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderFrameBorder(Vector2 pMin, Vector2 pMax, float rounding);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderMouseCursor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderMouseCursor(Vector2 pos, float scale, ImGuiMouseCursor mouseCursor, uint colFill, uint colBorder, uint colShadow);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderNavHighlight")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderNavHighlight(ImRect bb, ImGuiID id, ImGuiNavHighlightFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderPlatformWindowsDefault")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderPlatformWindowsDefault(void* platformRenderArg, void* rendererRenderArg);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderRectFilledRangeH")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderRectFilledRangeH(ImDrawList* drawList, ImRect rect, uint col, float xStartNorm, float xEndNorm, float rounding);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderRectFilledWithHole")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderRectFilledWithHole(ImDrawList* drawList, ImRect outer, ImRect inner, uint col, float rounding);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderText(Vector2 pos, CString text, CString textEnd, CBool hideTextAfterHash);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderTextClipped")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderTextClipped(Vector2 posMin, Vector2 posMax, CString text, CString textEnd, Vector2* textSizeIfKnown, Vector2 align, ImRect* clipRect);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderTextClippedEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderTextClippedEx(ImDrawList* drawList, Vector2 posMin, Vector2 posMax, CString text, CString textEnd, Vector2* textSizeIfKnown, Vector2 align, ImRect* clipRect);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderTextEllipsis")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderTextEllipsis(ImDrawList* drawList, Vector2 posMin, Vector2 posMax, float clipMaxX, float ellipsisMaxX, CString text, CString textEnd, Vector2* textSizeIfKnown);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igRenderTextWrapped")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void RenderTextWrapped(Vector2 pos, CString text, CString textEnd, float wrapWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igResetMouseDragDelta")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ResetMouseDragDelta(ImGuiMouseButton button);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSameLine")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SameLine(float offsetFromStartX, float spacing);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSaveIniSettingsToDisk")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SaveIniSettingsToDisk(CString iniFilename);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSaveIniSettingsToMemory")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString SaveIniSettingsToMemory(int* outIniSize);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igScaleWindowsInViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ScaleWindowsInViewport(ImGuiViewportP* viewport, float scale);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igScrollToBringRectIntoView")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ScrollToBringRectIntoView(ImGuiWindow* window, ImRect rect);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igScrollToItem")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ScrollToItem(ImGuiScrollFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igScrollToRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ScrollToRect(ImGuiWindow* window, ImRect rect, ImGuiScrollFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igScrollToRectEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ScrollToRectEx(Vector2* pOut, ImGuiWindow* window, ImRect rect, ImGuiScrollFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igScrollbar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Scrollbar(ImGuiAxis axis);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igScrollbarEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ScrollbarEx(ImRect bb, ImGuiID id, ImGuiAxis axis, long* pScrollV, long availV, long contentsV, ImDrawFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSelectable_Bool")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SelectableBool(CString label, CBool selected, ImGuiSelectableFlags flags, Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSelectable_BoolPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SelectableBoolPtr(CString label, CBool* pSelected, ImGuiSelectableFlags flags, Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSeparator")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Separator();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSeparatorEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SeparatorEx(ImGuiSeparatorFlags flags, float thickness);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSeparatorText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SeparatorText(CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSeparatorTextEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SeparatorTextEx(ImGuiID id, CString label, CString labelEnd, float extraWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetActiveID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetActiveID(ImGuiID id, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetActiveIdUsingAllKeyboardKeys")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetActiveIdUsingAllKeyboardKeys();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetAllocatorFunctions")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetAllocatorFunctions(ImGuiMemAllocFunc allocFunc, ImGuiMemFreeFunc freeFunc, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetClipboardText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetClipboardText(CString text);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetColorEditOptions")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetColorEditOptions(ImGuiColorEditFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetColumnOffset")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetColumnOffset(int columnIndex, float offsetX);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetColumnWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetColumnWidth(int columnIndex, float width);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetCurrentContext")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetCurrentContext(ImGuiContext* ctx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetCurrentFont")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetCurrentFont(ImFont* font);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetCurrentViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetCurrentViewport(ImGuiWindow* window, ImGuiViewportP* viewport);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetCursorPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetCursorPos(Vector2 localPos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetCursorPosX")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetCursorPosX(float localX);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetCursorPosY")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetCursorPosY(float localY);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetCursorScreenPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetCursorScreenPos(Vector2 pos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetDragDropPayload")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SetDragDropPayload(CString type, void* data, int sz, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetFocusID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetFocusID(ImGuiID id, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetHoveredID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetHoveredID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetItemDefaultFocus")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetItemDefaultFocus();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetItemKeyOwner")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetItemKeyOwner(ImGuiKey key, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetItemTooltip")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetItemTooltip(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetItemTooltipV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetItemTooltipV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetKeyOwner")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetKeyOwner(ImGuiKey key, ImGuiID ownerId, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetKeyOwnersForKeyChord")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetKeyOwnersForKeyChord(ImGuiKeyChord key, ImGuiID ownerId, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetKeyboardFocusHere")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetKeyboardFocusHere(int offset);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetLastItemData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetLastItemData(ImGuiID itemId, ImGuiItemFlags inFlags, ImGuiItemStatusFlags statusFlags, ImRect itemRect);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetMouseCursor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetMouseCursor(ImGuiMouseCursor cursorType);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNavID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNavID(ImGuiID id, ImGuiNavLayer navLayer, ImGuiID focusScopeId, ImRect rectRel);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNavWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNavWindow(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextFrameWantCaptureKeyboard")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextFrameWantCaptureKeyboard(CBool wantCaptureKeyboard);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextFrameWantCaptureMouse")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextFrameWantCaptureMouse(CBool wantCaptureMouse);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextItemAllowOverlap")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextItemAllowOverlap();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextItemOpen")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextItemOpen(CBool isOpen, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextItemSelectionUserData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextItemSelectionUserData(ImGuiSelectionUserData selectionUserData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextItemWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextItemWidth(float itemWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowBgAlpha")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowBgAlpha(float alpha);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowClass")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowClass(ImGuiWindowClass* windowClass);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowCollapsed")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowCollapsed(CBool collapsed, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowContentSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowContentSize(Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowDockID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowDockID(ImGuiID dockId, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowFocus")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowFocus();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowPos(Vector2 pos, ImGuiCond cond, Vector2 pivot);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowScroll")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowScroll(Vector2 scroll);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowSize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowSize(Vector2 size, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowSizeConstraints")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowSizeConstraints(Vector2 sizeMin, Vector2 sizeMax, ImGuiSizeCallback customCallback, void* customCallbackData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetNextWindowViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetNextWindowViewport(ImGuiID viewportId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollFromPosX_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollFromPosXFloat(float localX, float centerXRatio);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollFromPosX_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollFromPosXWindowPtr(ImGuiWindow* window, float localX, float centerXRatio);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollFromPosY_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollFromPosYFloat(float localY, float centerYRatio);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollFromPosY_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollFromPosYWindowPtr(ImGuiWindow* window, float localY, float centerYRatio);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollHereX")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollHereX(float centerXRatio);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollHereY")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollHereY(float centerYRatio);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollX_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollXFloat(float scrollX);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollX_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollXWindowPtr(ImGuiWindow* window, float scrollX);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollY_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollYFloat(float scrollY);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetScrollY_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetScrollYWindowPtr(ImGuiWindow* window, float scrollY);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetShortcutRouting")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SetShortcutRouting(ImGuiKeyChord keyChord, ImGuiID ownerId, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetStateStorage")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetStateStorage(ImGuiStorage* storage);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetTabItemClosed")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetTabItemClosed(CString tabOrDockedWindowLabel);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetTooltip")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetTooltip(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetTooltipV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetTooltipV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowClipRectBeforeSetChannel")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowClipRectBeforeSetChannel(ImGuiWindow* window, ImRect clipRect);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowCollapsed_Bool")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowCollapsedBool(CBool collapsed, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowCollapsed_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowCollapsedStr(CString name, CBool collapsed, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowCollapsed_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowCollapsedWindowPtr(ImGuiWindow* window, CBool collapsed, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowDock")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowDock(ImGuiWindow* window, ImGuiID dockId, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowFocus_Nil")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowFocusNil();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowFocus_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowFocusStr(CString name);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowFontScale")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowFontScale(float scale);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowHiddenAndSkipItemsForCurrentFrame")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowHiddenAndSkipItemsForCurrentFrame(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowHitTestHole")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowHitTestHole(ImGuiWindow* window, Vector2 pos, Vector2 size);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowPos_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowPosStr(CString name, Vector2 pos, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowPos_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowPosVec2(Vector2 pos, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowPos_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowPosWindowPtr(ImGuiWindow* window, Vector2 pos, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowSize_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowSizeStr(CString name, Vector2 size, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowSize_Vec2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowSizeVec2(Vector2 size, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowSize_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowSizeWindowPtr(ImGuiWindow* window, Vector2 size, ImGuiCond cond);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSetWindowViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void SetWindowViewport(ImGuiWindow* window, ImGuiViewportP* viewport);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShadeVertsLinearColorGradientKeepAlpha")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShadeVertsLinearColorGradientKeepAlpha(ImDrawList* drawList, int vertStartIdx, int vertEndIdx, Vector2 gradientP0, Vector2 gradientP1, uint col0, uint col1);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShadeVertsLinearUV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShadeVertsLinearUV(ImDrawList* drawList, int vertStartIdx, int vertEndIdx, Vector2 a, Vector2 b, Vector2 uvA, Vector2 uvB, CBool clamp);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShadeVertsTransformPos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShadeVertsTransformPos(ImDrawList* drawList, int vertStartIdx, int vertEndIdx, Vector2 pivotIn, float cosA, float sinA, Vector2 pivotOut);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShortcut")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool Shortcut(ImGuiKeyChord keyChord, ImGuiID ownerId, ImGuiInputFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowAboutWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowAboutWindow(CBool* pOpen);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowDebugLogWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowDebugLogWindow(CBool* pOpen);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowDemoWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowDemoWindow(CBool* pOpen);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowFontAtlas")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowFontAtlas(ImFontAtlas* atlas);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowFontSelector")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowFontSelector(CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowIDStackToolWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowIDStackToolWindow(CBool* pOpen);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowMetricsWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowMetricsWindow(CBool* pOpen);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowStyleEditor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowStyleEditor(ImGuiStyle* @ref);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowStyleSelector")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool ShowStyleSelector(CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShowUserGuide")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShowUserGuide();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShrinkWidths")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ShrinkWidths(ImGuiShrinkWidthItem* items, int count, float widthExcess);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igShutdown")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Shutdown();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderAngle")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderAngle(CString label, float* vRad, float vDegreesMin, float vDegreesMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderBehavior")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderBehavior(ImRect bb, ImGuiID id, ImGuiDataType dataType, void* pV, void* pMin, void* pMax, CString format, ImGuiSliderFlags flags, ImRect* outGrabBb);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderFloat")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderFloat(CString label, float* v, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderFloat2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderFloat2(CString label, float* v, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderFloat3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderFloat3(CString label, float* v, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderFloat4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderFloat4(CString label, float* v, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderInt")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderInt(CString label, int* v, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderInt2")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderInt2(CString label, int* v, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderInt3")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderInt3(CString label, int* v, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderInt4")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderInt4(CString label, int* v, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderScalar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderScalar(CString label, ImGuiDataType dataType, void* pData, void* pMin, void* pMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSliderScalarN")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SliderScalarN(CString label, ImGuiDataType dataType, void* pData, int components, void* pMin, void* pMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSmallButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SmallButton(CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSpacing")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Spacing();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igSplitterBehavior")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool SplitterBehavior(ImRect bb, ImGuiID id, ImGuiAxis axis, float* size1, float* size2, float minSize1, float minSize2, float hoverExtend, float hoverVisibilityDelay, uint bgCol);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igStartMouseMovingWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void StartMouseMovingWindow(ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igStartMouseMovingWindowOrNode")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void StartMouseMovingWindowOrNode(ImGuiWindow* window, ImGuiDockNode* node, CBool undock);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igStyleColorsClassic")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void StyleColorsClassic(ImGuiStyle* dst);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igStyleColorsDark")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void StyleColorsDark(ImGuiStyle* dst);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igStyleColorsLight")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void StyleColorsLight(ImGuiStyle* dst);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarAddTab")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabBarAddTab(ImGuiTabBar* tabBar, ImGuiTabItemFlags tabFlags, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarCloseTab")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabBarCloseTab(ImGuiTabBar* tabBar, ImGuiTabItem* tab);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarFindMostRecentlySelectedTabForActiveWindow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTabItem* TabBarFindMostRecentlySelectedTabForActiveWindow(ImGuiTabBar* tabBar);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarFindTabByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTabItem* TabBarFindTabByID(ImGuiTabBar* tabBar, ImGuiID tabId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarFindTabByOrder")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTabItem* TabBarFindTabByOrder(ImGuiTabBar* tabBar, int order);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarGetCurrentTab")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTabItem* TabBarGetCurrentTab(ImGuiTabBar* tabBar);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarGetTabName")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString TabBarGetTabName(ImGuiTabBar* tabBar, ImGuiTabItem* tab);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarGetTabOrder")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TabBarGetTabOrder(ImGuiTabBar* tabBar, ImGuiTabItem* tab);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarProcessReorder")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TabBarProcessReorder(ImGuiTabBar* tabBar);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarQueueFocus")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabBarQueueFocus(ImGuiTabBar* tabBar, ImGuiTabItem* tab);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarQueueReorder")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabBarQueueReorder(ImGuiTabBar* tabBar, ImGuiTabItem* tab, int offset);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarQueueReorderFromMousePos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabBarQueueReorderFromMousePos(ImGuiTabBar* tabBar, ImGuiTabItem* tab, Vector2 mousePos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabBarRemoveTab")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabBarRemoveTab(ImGuiTabBar* tabBar, ImGuiID tabId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabItemBackground")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabItemBackground(ImDrawList* drawList, ImRect bb, ImGuiTabItemFlags flags, uint col);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabItemButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TabItemButton(CString label, ImGuiTabItemFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabItemCalcSize_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabItemCalcSizeStr(Vector2* pOut, CString label, CBool hasCloseButtonOrUnsavedMarker);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabItemCalcSize_WindowPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabItemCalcSizeWindowPtr(Vector2* pOut, ImGuiWindow* window);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabItemEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TabItemEx(ImGuiTabBar* tabBar, CString label, CBool* pOpen, ImGuiTabItemFlags flags, ImGuiWindow* dockedWindow);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTabItemLabelAndCloseButton")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TabItemLabelAndCloseButton(ImDrawList* drawList, ImRect bb, ImGuiTabItemFlags flags, Vector2 framePadding, CString label, ImGuiID tabId, ImGuiID closeButtonId, CBool isContentsVisible, CBool* outJustClosed, CBool* outTextClipped);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableAngledHeadersRow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableAngledHeadersRow();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableAngledHeadersRowEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableAngledHeadersRowEx(float angle, float labelWidth);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableBeginApplyRequests")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableBeginApplyRequests(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableBeginCell")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableBeginCell(ImGuiTable* table, int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableBeginContextMenuPopup")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TableBeginContextMenuPopup(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableBeginInitMemory")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableBeginInitMemory(ImGuiTable* table, int columnsCount);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableBeginRow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableBeginRow(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableDrawBorders")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableDrawBorders(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableDrawDefaultContextMenu")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableDrawDefaultContextMenu(ImGuiTable* table, ImGuiTableFlags flagsForSectionToDisplay);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableEndCell")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableEndCell(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableEndRow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableEndRow(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableFindByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTable* TableFindByID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableFixColumnSortDirection")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableFixColumnSortDirection(ImGuiTable* table, ImGuiTableColumn* column);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGcCompactSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableGcCompactSettings();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGcCompactTransientBuffers_TablePtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableGcCompactTransientBuffersTablePtr(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGcCompactTransientBuffers_TableTempDataPtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableGcCompactTransientBuffersTableTempDataPtr(ImGuiTableTempData* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetBoundSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTableSettings* TableGetBoundSettings(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetCellBgRect")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableGetCellBgRect(ImRect* pOut, ImGuiTable* table, int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnCount")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TableGetColumnCount();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnFlags")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTableColumnFlags TableGetColumnFlags(int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnIndex")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TableGetColumnIndex();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnName_Int")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString TableGetColumnNameInt(int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnName_TablePtr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CString TableGetColumnNameTablePtr(ImGuiTable* table, int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnNextSortDirection")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiSortDirection TableGetColumnNextSortDirection(ImGuiTableColumn* column);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnResizeID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID TableGetColumnResizeID(ImGuiTable* table, int columnN, int instanceNo);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetColumnWidthAuto")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float TableGetColumnWidthAuto(ImGuiTable* table, ImGuiTableColumn* column);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetHeaderAngledMaxLabelWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float TableGetHeaderAngledMaxLabelWidth();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetHeaderRowHeight")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float TableGetHeaderRowHeight();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetHoveredColumn")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TableGetHoveredColumn();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetHoveredRow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TableGetHoveredRow();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetInstanceData")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTableInstanceData* TableGetInstanceData(ImGuiTable* table, int instanceNo);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetInstanceID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiID TableGetInstanceID(ImGuiTable* table, int instanceNo);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetMaxColumnWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial float TableGetMaxColumnWidth(ImGuiTable* table, int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetRowIndex")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TableGetRowIndex();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableGetSortSpecs")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTableSortSpecs* TableGetSortSpecs();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableHeader")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableHeader(CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableHeadersRow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableHeadersRow();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableLoadSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableLoadSettings(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableMergeDrawChannels")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableMergeDrawChannels(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableNextColumn")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TableNextColumn();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableNextRow")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableNextRow(ImGuiTableRowFlags rowFlags, float minRowHeight);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableOpenContextMenu")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableOpenContextMenu(int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTablePopBackgroundChannel")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TablePopBackgroundChannel();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTablePushBackgroundChannel")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TablePushBackgroundChannel();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableRemove")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableRemove(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableResetSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableResetSettings(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSaveSettings")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSaveSettings(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetBgColor")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetBgColor(ImGuiTableBgTarget target, uint color, int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetColumnEnabled")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetColumnEnabled(int columnN, CBool v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetColumnIndex")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TableSetColumnIndex(int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetColumnSortDirection")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetColumnSortDirection(int columnN, ImGuiSortDirection sortDirection, CBool appendToSortSpecs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetColumnWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetColumnWidth(int columnN, float width);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetColumnWidthAutoAll")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetColumnWidthAutoAll(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetColumnWidthAutoSingle")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetColumnWidthAutoSingle(ImGuiTable* table, int columnN);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSettingsAddSettingsHandler")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSettingsAddSettingsHandler();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSettingsCreate")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTableSettings* TableSettingsCreate(ImGuiID id, int columnsCount);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSettingsFindByID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ImGuiTableSettings* TableSettingsFindByID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetupColumn")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetupColumn(CString label, ImGuiTableColumnFlags flags, float initWidthOrWeight, ImGuiID userId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetupDrawChannels")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetupDrawChannels(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSetupScrollFreeze")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSetupScrollFreeze(int cols, int rows);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSortSpecsBuild")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSortSpecsBuild(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableSortSpecsSanitize")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableSortSpecsSanitize(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableUpdateBorders")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableUpdateBorders(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableUpdateColumnsWeightFromWidth")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableUpdateColumnsWeightFromWidth(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTableUpdateLayout")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TableUpdateLayout(ImGuiTable* table);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTeleportMousePos")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TeleportMousePos(Vector2 pos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTempInputIsActive")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TempInputIsActive(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTempInputScalar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TempInputScalar(ImRect bb, ImGuiID id, CString label, ImGuiDataType dataType, void* pData, CString format, void* pClampMin, void* pClampMax);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTempInputText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TempInputText(ImRect bb, ImGuiID id, CString label, CString buf, int bufSize, ImGuiInputTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTestKeyOwner")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TestKeyOwner(ImGuiKey key, ImGuiID ownerId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTestShortcutRouting")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TestShortcutRouting(ImGuiKeyChord keyChord, ImGuiID ownerId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igText")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Text(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextColored")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextColored(Vector4 col, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextColoredV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextColoredV(Vector4 col, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextDisabled")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextDisabled(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextDisabledV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextDisabledV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextEx")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextEx(CString text, CString textEnd, ImGuiTextFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextUnformatted")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextUnformatted(CString text, CString textEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextWrapped")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextWrapped(CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTextWrappedV")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TextWrappedV(CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTranslateWindowsInViewport")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TranslateWindowsInViewport(ImGuiViewportP* viewport, Vector2 oldPos, Vector2 newPos);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeBehavior")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeBehavior(ImGuiID id, ImGuiTreeNodeFlags flags, CString label, CString labelEnd);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeEx_Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeExPtr(void* ptrId, ImGuiTreeNodeFlags flags, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeEx_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeExStr(CString label, ImGuiTreeNodeFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeEx_StrStr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeExStrStr(CString strId, ImGuiTreeNodeFlags flags, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeExV_Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeExVPtr(void* ptrId, ImGuiTreeNodeFlags flags, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeExV_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeExVStr(CString strId, ImGuiTreeNodeFlags flags, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNode_Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodePtr(void* ptrId, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeSetOpen")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TreeNodeSetOpen(ImGuiID id, CBool open);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNode_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeStr(CString label);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNode_StrStr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeStrStr(CString strId, CString fmt);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeUpdateNextOpen")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeUpdateNextOpen(ImGuiID id, ImGuiTreeNodeFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeV_Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeVPtr(void* ptrId, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreeNodeV_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool TreeNodeVStr(CString strId, CString fmt, void* args);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreePop")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TreePop();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreePushOverrideID")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TreePushOverrideID(ImGuiID id);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreePush_Ptr")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TreePushPtr(void* ptrId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTreePush_Str")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void TreePushStr(CString strId);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTypingSelectFindBestLeadingMatch")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TypingSelectFindBestLeadingMatch(ImGuiTypingSelectRequest* req, int itemsCount, FnPtr_VoidPtr_Int_CString getItemNameFunc, void* userData);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTypingSelectFindMatch")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TypingSelectFindMatch(ImGuiTypingSelectRequest* req, int itemsCount, FnPtr_VoidPtr_Int_CString getItemNameFunc, void* userData, int navItemIdx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igTypingSelectFindNextSingleCharMatch")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial int TypingSelectFindNextSingleCharMatch(ImGuiTypingSelectRequest* req, int itemsCount, FnPtr_VoidPtr_Int_CString getItemNameFunc, void* userData, int navItemIdx);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igUnindent")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void Unindent(float indentW);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igUpdateHoveredWindowAndCaptureFlags")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void UpdateHoveredWindowAndCaptureFlags();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igUpdateInputEvents")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void UpdateInputEvents(CBool trickleFastInputs);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igUpdateMouseMovingWindowEndFrame")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void UpdateMouseMovingWindowEndFrame();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igUpdateMouseMovingWindowNewFrame")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void UpdateMouseMovingWindowNewFrame();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igUpdatePlatformWindows")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void UpdatePlatformWindows();

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igUpdateWindowParentAndRootLinks")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void UpdateWindowParentAndRootLinks(ImGuiWindow* window, ImGuiWindowFlags flags, ImGuiWindow* parentWindow);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igVSliderFloat")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool VSliderFloat(CString label, Vector2 size, float* v, float vMin, float vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igVSliderInt")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool VSliderInt(CString label, Vector2 size, int* v, int vMin, int vMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igVSliderScalar")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CBool VSliderScalar(CString label, Vector2 size, ImGuiDataType dataType, void* pData, void* pMin, void* pMax, CString format, ImGuiSliderFlags flags);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igValue_Bool")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ValueBool(CString prefix, CBool b);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igValue_Float")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ValueFloat(CString prefix, float v, CString floatFormat);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igValue_Int")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ValueInt(CString prefix, int v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igValue_Uint")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void ValueUint(CString prefix, uint v);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igWindowPosRelToAbs")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void WindowPosRelToAbs(Vector2* pOut, ImGuiWindow* window, Vector2 p);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igWindowRectAbsToRel")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void WindowRectAbsToRel(ImRect* pOut, ImGuiWindow* window, ImRect r);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "igWindowRectRelToAbs")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void WindowRectRelToAbs(ImRect* pOut, ImGuiWindow* window, ImRect r);

        #endregion
    }
}
